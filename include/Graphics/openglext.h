/*
typedef HANDLE (APIENTRYP PFNWGLDXOPENDEVICENVPROC)(void *dxDevice);
typedef BOOL (APIENTRYP PFNWGLDXCLOSEDEVICENVPROC)(HANDLE hDevice);

typedef BOOL (APIENTRYP PFNWGLDXSETRESOURCESHAREHANDLENVPROC)(void *dxResource, HANDLE shareHandle);
typedef HANDLE (APIENTRYP PFNWGLDXREGISTEROBJECTNVPROC)(HANDLE hDevice, void *dxResource, GLuint name, GLenum type, GLenum access);

typedef BOOL (APIENTRYP PFNWGLDXLOCKOBJECTSNVPROC)(HANDLE hDevice, GLint count, HANDLE *hObjects);
typedef BOOL (APIENTRYP PFNWGLDXUNLOCKOBJECTSNVPROC)(HANDLE hDevice, GLint count, HANDLE *hObjects);

#define WGL_ACCESS_READ_ONLY_NV             0x0000
#define WGL_ACCESS_READ_WRITE_NV            0x0001
#define WGL_ACCESS_WRITE_DISCARD_NV         0x0002
*/

typedef HANDLE (APIENTRYP PFNWGLDXOPENDEVICENVXPROC)(void *dxDevice);
typedef BOOL (APIENTRYP PFNWGLDXCLOSEDEVICENVXPROC)(HANDLE hDevice);
typedef BOOL (APIENTRYP PFNWGLDXSETRESOURCESHAREHANDLENVXPROC)(void *dxResource, HANDLE shareHandle);

typedef HANDLE (APIENTRYP PFNWGLDXREGISTEROBJECTNVXPROC)(HANDLE hDevice, void *dxResource, GLuint name, GLenum type, GLenum access);
typedef BOOL (APIENTRYP PFNWGLDXUNREGISTEROBJECTNVXPROC)(HANDLE hObject);

typedef BOOL (APIENTRYP PFNWGLDXLOCKOBJECTSNVXPROC)(HANDLE hDevice, GLint count, HANDLE *hObjects);
typedef BOOL (APIENTRYP PFNWGLDXUNLOCKOBJECTSNVXPROC)(HANDLE hDevice, GLint count, HANDLE *hObjects);

#define WGL_ACCESS_READ_ONLY_NVX             0x0000
#define WGL_ACCESS_READ_WRITE_NVX            0x0001
#define WGL_ACCESS_WRITE_DISCARD_NVX         0x0002

namespace System
{
namespace Graphics
{

struct GfxExt GLProcs
{
	CTOR GLProcs();

// OpenGL 1.2

	PFNGLBLENDCOLORPROC glBlendColor;
	PFNGLBLENDEQUATIONPROC glBlendEquation;
	PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;
	PFNGLTEXIMAGE3DPROC glTexImage3D;
	PFNGLTEXSUBIMAGE3DPROC glTexSubImage3D;
	PFNGLCOPYTEXSUBIMAGE3DPROC glCopyTexSubImage3D;

// OpenGL 1.3

	PFNGLSAMPLECOVERAGEPROC glSampleCoverage;

	// multitexture
	PFNGLACTIVETEXTUREPROC glActiveTexture;
	PFNGLCLIENTACTIVETEXTUREPROC glClientActiveTexture;
	PFNGLMULTITEXCOORD1FPROC glMultiTexCoord1f;
	PFNGLMULTITEXCOORD2FPROC glMultiTexCoord2f;
	PFNGLMULTITEXCOORD3FPROC glMultiTexCoord3f;
	PFNGLMULTITEXCOORD4FPROC glMultiTexCoord4f;

	// compressed textures
	PFNGLCOMPRESSEDTEXIMAGE1DPROC glCompressedTexImage1D;
	PFNGLCOMPRESSEDTEXIMAGE2DPROC glCompressedTexImage2D;
	PFNGLCOMPRESSEDTEXIMAGE3DPROC glCompressedTexImage3D;
	PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC glCompressedTexSubImage1D;
	PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC glCompressedTexSubImage2D;
	PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC glCompressedTexSubImage3D;
	PFNGLGETCOMPRESSEDTEXIMAGEPROC glGetCompressedTexImage;

// OpenGL 1.4

	PFNGLBLENDFUNCSEPARATEPROC glBlendFuncSeparate;
	PFNGLFOGCOORDPOINTERPROC glFogCoordPointer;
	PFNGLSECONDARYCOLORPOINTERPROC glSecondaryColorPointer;
	PFNGLMULTIDRAWARRAYSPROC glMultiDrawArrays;
	PFNGLMULTIDRAWELEMENTSPROC glMultiDrawElements;
	PFNGLPOINTPARAMETERFPROC glPointParameterf;
	PFNGLPOINTPARAMETERFVPROC glPointParameterfv;
	PFNGLPOINTPARAMETERIPROC glPointParameteri;
	PFNGLPOINTPARAMETERIVPROC glPointParameteriv;

// OpenGL 1.5

	// buffer objects
	PFNGLISBUFFERPROC glIsBuffer;
	PFNGLBINDBUFFERPROC glBindBuffer;
	PFNGLDELETEBUFFERSPROC glDeleteBuffers;
	PFNGLGENBUFFERSPROC glGenBuffers;
	PFNGLBUFFERDATAPROC glBufferData;
	PFNGLBUFFERSUBDATAPROC glBufferSubData;
	PFNGLGETBUFFERPARAMETERIVPROC glGetBufferParameteriv;
	PFNGLMAPBUFFERPROC glMapBuffer;
	PFNGLUNMAPBUFFERPROC glUnmapBuffer;

// OpenGL 2.0

	PFNGLDRAWBUFFERSPROC glDrawBuffers;
	PFNGLSTENCILOPSEPARATEPROC glStencilOpSeparate;

	// shaders

	PFNGLCREATESHADERPROC glCreateShader;
	PFNGLSHADERSOURCEPROC glShaderSource;
	PFNGLCOMPILESHADERPROC glCompileShader;
	PFNGLATTACHSHADERPROC glAttachShader;
	PFNGLCREATEPROGRAMPROC glCreateProgram;
	PFNGLLINKPROGRAMPROC glLinkProgram;
	PFNGLGETSHADERIVPROC glGetShaderiv;
	PFNGLGETPROGRAMIVPROC glGetProgramiv;
	PFNGLVALIDATEPROGRAMPROC glValidateProgram;
	PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;
	PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
	PFNGLUSEPROGRAMPROC glUseProgram;
	PFNGLDELETEPROGRAMPROC glDeleteProgram;
	PFNGLDELETESHADERPROC glDeleteShader;
	PFNGLDETACHSHADERPROC glDetachShader;

	PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray;
	PFNGLDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray;
	PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer;

	PFNGLGETATTRIBLOCATIONPROC glGetAttribLocation;
	PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation;

	PFNGLUNIFORM1FPROC glUniform1f;
	PFNGLUNIFORM1FVPROC glUniform1fv;
	PFNGLUNIFORM2FPROC glUniform2f;
	PFNGLUNIFORM2FVPROC glUniform2fv;
	PFNGLUNIFORM3FPROC glUniform3f;
	PFNGLUNIFORM3FVPROC glUniform3fv;
	PFNGLUNIFORM4FPROC glUniform4f;
	PFNGLUNIFORM4FVPROC glUniform4fv;

	PFNGLUNIFORM1IPROC glUniform1i;
	PFNGLUNIFORM1IVPROC glUniform1iv;
	PFNGLUNIFORM2IPROC glUniform2i;
	PFNGLUNIFORM2IVPROC glUniform2iv;
	PFNGLUNIFORM3IPROC glUniform3i;
	PFNGLUNIFORM3IVPROC glUniform3iv;
	PFNGLUNIFORM4IPROC glUniform4i;
	PFNGLUNIFORM4IVPROC glUniform4iv;

	PFNGLUNIFORMMATRIX2FVPROC glUniformMatrix2fv;
	PFNGLUNIFORMMATRIX3FVPROC glUniformMatrix3fv;
	PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv;

	PFNGLVERTEXATTRIB1FPROC glVertexAttrib1f;
	PFNGLVERTEXATTRIB1FVPROC glVertexAttrib1fv;
	PFNGLVERTEXATTRIB2FPROC glVertexAttrib2f;
	PFNGLVERTEXATTRIB2FVPROC glVertexAttrib2fv;
	PFNGLVERTEXATTRIB3FPROC glVertexAttrib3f;
	PFNGLVERTEXATTRIB3FVPROC glVertexAttrib3fv;
	PFNGLVERTEXATTRIB4FPROC glVertexAttrib4f;
	PFNGLVERTEXATTRIB4FVPROC glVertexAttrib4fv;

// OpenGL 2.1

	PFNGLUNIFORMMATRIX2X3FVPROC glUniformMatrix2x3;
	PFNGLUNIFORMMATRIX3X2FVPROC glUniformMatrix3x2;
	PFNGLUNIFORMMATRIX2X4FVPROC glUniformMatrix2x4;
	PFNGLUNIFORMMATRIX4X2FVPROC glUniformMatrix4x2;
	PFNGLUNIFORMMATRIX3X4FVPROC glUniformMatrix3x4;
	PFNGLUNIFORMMATRIX4X3FVPROC glUniformMatrix4x3;

	// NVIDIA

	PFNWGLDXOPENDEVICENVXPROC wglDXOpenDeviceNVX;
	PFNWGLDXCLOSEDEVICENVXPROC wglDXCloseDeviceNVX;
	PFNWGLDXSETRESOURCESHAREHANDLENVXPROC wglDXSetResourceShareHandleNVX;
	PFNWGLDXREGISTEROBJECTNVXPROC wglDXRegisterObjectNVX;
	PFNWGLDXUNREGISTEROBJECTNVXPROC wglDXUnregisterObjectNVX;
	PFNWGLDXLOCKOBJECTSNVXPROC wglDXLockObjectsNVX;
	PFNWGLDXUNLOCKOBJECTSNVXPROC wglDXUnlockObjectsNVX;

// GL_EXT_draw_instanced
	PFNGLDRAWARRAYSINSTANCEDEXTPROC glDrawArraysInstancedEXT;
	PFNGLDRAWELEMENTSINSTANCEDEXTPROC glDrawElementsInstancedEXT;

// GL_EXT_geometry_shader4
	PFNGLPROGRAMPARAMETERIEXTPROC glProgramParameteriEXT;

// OpenGL 3.0

	PFNGLGENRENDERBUFFERSPROC glGenRenderbuffers;
	PFNGLDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
	PFNGLBINDRENDERBUFFERPROC glBindRenderbuffer;
	PFNGLGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;

	PFNGLISFRAMEBUFFERPROC glIsFramebuffer;
	PFNGLBINDFRAMEBUFFERPROC glBindFramebuffer;
	PFNGLGENFRAMEBUFFERSPROC glGenFramebuffers;
	PFNGLDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
	PFNGLFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
	PFNGLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
	PFNGLFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
	PFNGLCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
	PFNGLBLITFRAMEBUFFERPROC glBlitFramebuffer;
	PFNGLGENERATEMIPMAPPROC glGenerateMipmap;
};

}	// Graphics
}	// System
