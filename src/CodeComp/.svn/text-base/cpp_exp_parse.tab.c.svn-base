
/* A Bison parser, made by GNU Bison 2.4.1.  */

/* Skeleton implementation for Bison's Yacc-like parsers in C
   
      Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
   Free Software Foundation, Inc.
   
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.
   
   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.
   
   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.
   
   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "2.4.1"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 0

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1

/* Using locations.  */
#define YYLSP_NEEDED 1

/* Substitute the variable and function names.  */
#define yyparse         cpp_exp_parse
#define yylex           cpp_exp_lex
#define yyerror         cpp_exp_error
#define yylval          cpp_exp_lval
#define yychar          cpp_exp_char
#define yydebug         cpp_exp_debug
#define yynerrs         cpp_exp_nerrs
#define yylloc          cpp_exp_lloc

/* Copy the first part of user declarations.  */

/* Line 189 of yacc.c  */
#line 1 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"


//#define LOG(x,...)

//#define LOG DebugTrace
#define LOG(x)

#define YYERROR_VERBOSE

#define YYMAXDEPTH	80000

//struct PP_TokenList;

extern TemplateParams* /*Array<System::TemplateParameter*, System::__gc_allocator>*/ templateParams;

Scope* g_lastScope;

ClassType* g_pClass2 = NULL;

stack<ClassType*> g_pClassStack;

stack<ast::A_ClassDef*> g_classes;
stack<ast::Declaration*> g_templates;

//extern PP_TokenList* tlist;

//bool bLastTok = false;

ast::Expression2List* ptoken;

extern CGlobal* g_pGlobal;

//Type* GetNestedType(CGlobal* pGlobal, Scope* pGlobalScope, Scope* pScope, ast::Expression* exp);

Scope* parse_LookupScopeName(Scope* pScope, StringIn name);
Scope* parse_LookupScopeNameRecurse(Scope* pScope, StringIn name);

Type* parse_LookupTypeName(Scope* pScope, StringIn name);
Type* parse_LookupTypeNameRecurse(Scope* pScope, StringIn name);

extern ClassType* g_pClass;

stack<int> g_tokstack;

//stack<Scope*> g_cur_scopeStack;

//int nscopestack = 0;
stack<Scope*> g_scopeStack;
stack<Scope*> g_scopeStack2;

stack<stack<Scope*> > g_scopeStack2Stack;
Scope* g_pScope;
//Scope* g_pScope1;
Scope* g_pScope2;
//Scope* g_pLastScope;

//StringA* test_name;

void DoImport(StringA* filename);

void Do(ast::ExpressionList* attribute_spec, ast::Declaration* d);
void DoTp(ast::TemplateDeclaration* td);
void Do_class_specifier_head(ast::A_ClassHead* head);
void Do(ast::A_ClassDef* classdef);
//void Do_elaborated_class(ast::A_Class* elaborated_class);
void Do_TParam(ast::TemplateParameter* typeparam, ast::Expression* initexp = NULL);

extern int cpp2_lex();
extern bool is_parse_exp;
extern bool use_cpp_lex;

static int cpp_exp_lex(/*YYSTYPE *lvalp, YYLTYPE *llocp*/)
{
	if (ptoken == NULL && use_cpp_lex)
	{
	//	ASSERT(cpp_exp_lloc.filename != (StringA*)0xcccccccc);
		return cpp2_lex();
}

	if (!g_tokstack.empty())
	{
		int token = g_tokstack.top();
		g_tokstack.pop();
		return token;

	/*if (g_exp_lasttok != -1)
	{
		int token = g_exp_lasttok;
		g_exp_lasttok = -1;
		return token;
	}
	*/
	}

	if (ptoken)
	{
		int token = ptoken->head->m_token;

		if (ptoken->head->m_token == /*PP::CToken::tok_symbol && token->symbol ==*/ '@')
		{
		MessageBeep(-1);
		}

		cpp_exp_lloc.first_line = ptoken->head->m_linepos;
		cpp_exp_lloc.first_column = ptoken->head->m_column;
		cpp_exp_lloc.filename = dynamic_cast<StringA*>(ptoken->head->m_filename.m_stringObject);
		if (cpp_exp_lloc.filename) cpp_exp_lloc.filename->IncRef();

		if (token == YTY)
		{
			cpp_exp_lval.pScope = ptoken->head->m_pScope;
			LOG("YTY ");
		//	g_scopeStack.clear();
		}
		else if (token == YTT)
		{
		//	cpp_exp_lval.pScope = ptoken->head->m_pScope;
			LOG("YTT ");
		}
		else if (token == STRING_LITERAL)
		{
			cpp_exp_lval.string_literal = ptoken->head->m_string;
			LOG("\"" << String(ptoken->head->m_string) << "\"");
		}
		else if (token == CHAR_LITERAL)
		{
			cpp_exp_lval.num = ptoken->head->u.m_int32;
		//	LOG("\"%s\"", ptoken->head->m_string->c_str());
		}
		else if (token == INTEGER_LITERAL)
		{
			cpp_exp_lval.num = ptoken->head->u.m_int32;
			LOG((int)ptoken->head->u.m_int32);
		}
		else if (token == DOUBLE_LITERAL)
		{
			cpp_exp_lval.doubleValue = ptoken->head->u.m_double;
			//LOG("%f", ptoken->head->u.m_double);
		}
		else if (token == IMPORT_KW)
		{
			cpp_exp_lval.string_literal = ptoken->head->m_string;
			//LOG("%f", ptoken->head->u.m_double);
		}
		else if (token == TWO_COLON)
		{
			LOG("::");
		//	g_pScope2 = g_pLastScope;
		}
		else if (token == IDENTIFIER)
		{
			cpp_exp_lval.id = ptoken->head->m_string;
			LOG(CString(ptoken->head->m_string) << " ");
			ptoken = ptoken->tail;
			return IDENTIFIER;
		}
		
		ptoken = ptoken->tail;
		return token;
	}
	else
	{
		return -1;
	}
}

void cpp_exp_error (/*YYLTYPE *llocp,*/ char const *s);
/*#define YYERROR_VERBOSE*/

#define yyfalse	0
#define yytrue		1

union YYSTYPE;

ast::A_Stm* stmtMerge (YYSTYPE& x0, YYSTYPE& x1);
//ast::A_Declaration* Merge (YYSTYPE& x0, YYSTYPE& x1);

//ast::A_TemplateArgument* template_argument_merge (YYSTYPE& x0, YYSTYPE& x1);

ast::A_ExpOrDecl* m_g_exp_or_decl;

extern ast::DeclarationList* translation_unit;
extern ast::Expression* g_exp;

     

/* Line 189 of yacc.c  */
#line 268 "cpp_exp_parse.tab.c"

/* Enabling traces.  */
#ifndef YYDEBUG
# define YYDEBUG 1
#endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* Enabling the token table.  */
#ifndef YYTOKEN_TABLE
# define YYTOKEN_TABLE 0
#endif


/* Tokens.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
   /* Put the tokens into the symbol table, so that GDB and other debuggers
      know about them.  */
   enum yytokentype {
     EXP_TOKEN = 258,
     DECLS_TOKEN = 259,
     IDENTIFIER = 260,
     identifier_lparen = 261,
     PLUSPLUS = 262,
     MINUSMINUS = 263,
     ARROW = 264,
     EQUAL = 265,
     NOT_EQUAL = 266,
     ASSIGN_PLUS = 267,
     ASSIGN_MINUS = 268,
     ASSIGN_OR = 269,
     ASSIGN_XOR = 270,
     ASSIGN_AND = 271,
     ASSIGN_MUL = 272,
     ASSIGN_DIV = 273,
     ASSIGN_MOD = 274,
     ASSIGN_LSHIFT = 275,
     ASSIGN_RSHIFT = 276,
     LEQ = 277,
     GEQ = 278,
     STAR = 279,
     BITAND = 280,
     BITOR = 281,
     BITXOR = 282,
     LAND = 283,
     LOR = 284,
     DOT_STAR = 285,
     ARROW_STAR = 286,
     NAMESPACE_KW = 287,
     USING_KW = 288,
     EXTERN_KW = 289,
     IF_KW = 290,
     ELSE_KW = 291,
     SWITCH_KW = 292,
     CASE_KW = 293,
     DEFAULT_KW = 294,
     GOTO_KW = 295,
     BREAK_KW = 296,
     CONTINUE_KW = 297,
     FOR_KW = 298,
     DO_KW = 299,
     WHILE_KW = 300,
     CONST_KW = 301,
     VOLATILE_KW = 302,
     TYPEDEF_KW = 303,
     TYPENAME_KW = 304,
     ENUM_KW = 305,
     CLASS_KW = 306,
     STRUCT_KW = 307,
     UNION_KW = 308,
     PRIVATE_KW = 309,
     PROTECTED_KW = 310,
     PUBLIC_KW = 311,
     AUTO_KW = 312,
     REGISTER_KW = 313,
     STATIC_KW = 314,
     MUTABLE_KW = 315,
     INLINE_KW = 316,
     VIRTUAL_KW = 317,
     EXPLICIT_KW = 318,
     FRIEND_KW = 319,
     FALSE_KW = 320,
     TRUE_KW = 321,
     STATIC_ASSERT_KW = 322,
     STATIC_CAST_KW = 323,
     REINTERPRET_CAST_KW = 324,
     DYNAMIC_CAST_KW = 325,
     CONST_CAST_KW = 326,
     RETURN_KW = 327,
     TRY_KW = 328,
     THROW_KW = 329,
     CATCH_KW = 330,
     CHAR_KW = 331,
     WCHAR_T_KW = 332,
     BOOL_KW = 333,
     SHORT_KW = 334,
     INT_KW = 335,
     INTERFACE_KW = 336,
     LONG_KW = 337,
     SIGNED_KW = 338,
     UNSIGNED_KW = 339,
     FLOAT_KW = 340,
     DOUBLE_KW = 341,
     VOID_KW = 342,
     TEMPLATE_KW = 343,
     EXPORT_KW = 344,
     NULLPTR_KW = 345,
     CONSTEXPR_KW = 346,
     DECLTYPE_KW = 347,
     __FLOAT32_KW = 348,
     __FLOAT64_KW = 349,
     __INT8_KW = 350,
     __INT16_KW = 351,
     __INT32_KW = 352,
     __INT64_KW = 353,
     __INT128_KW = 354,
     __CDECL_KW = 355,
     __STDCALL_KW = 356,
     __FASTCALL_KW = 357,
     __DECLSPEC_KW = 358,
     __ASM_KW = 359,
     LSHIFT = 360,
     RSHIFT = 361,
     TWO_COLON = 362,
     THREE_DOTS = 363,
     NEW_KW = 364,
     DELETE_KW = 365,
     OPERATOR_KW = 366,
     SIZEOF_KW = 367,
     TYPEID_KW = 368,
     STRING_LITERAL = 369,
     LSTRING_LITERAL = 370,
     CHAR_LITERAL = 371,
     INTEGER_LITERAL = 372,
     DOUBLE_LITERAL = 373,
     IMPORT_KW = 374,
     TEMPLATE_NAME = 375,
     ATTRIBUTE_KW = 376,
     THIS_KW = 377,
     NTA = 378,
     YTA = 379,
     YTT = 380,
     NTY = 381,
     YTY = 382,
     CTORN = 383,
     SHIFT_THERE = 384
   };
#endif



#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
typedef union YYSTYPE
{

/* Line 214 of yacc.c  */
#line 191 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"

LONGLONG num;
double doubleValue;
System::StringA* id;
System::StringA* string_literal;
ast::A_ClassKey classKey;
ast::A_ClassHead* classHead;
AccessSpec accessSpec;
ast::A_DeclSpecifierKeyword declSpecifierKeyword;
ast::A_MemberSpec* memberSpec;
ast::Condition* cond;
ast::Expression* exp;
ast::ExpressionList* expList;

ast::Expression2* exp2;
ast::Expression2List* exp2List;

ast::A_ExpOrDecl* exp_or_decl;

ast::Initializer* initializer;

ast::InitDeclarator* initDeclarator;
ast::InitDeclaratorList* initDeclaratorList;

ast::A_Stm* stm;
ast::CompoundStm* compoundstm;
ast::A_StmList* stmList;
ast::A_Declarator* declarator;
ast::A_DirectDeclarator* directDeclarator;
ast::Declaration* declaration;
ast::DeclarationList* declarationList;
ast::A_DeclaratorList* declaratorList;
ast::A_TypeId* typeId;
ast::A_TypeIdList* typeIdList;

ast::TemplateParameter* templateParameter;
ast::TemplateParameterList* templateParameterList;

ast::A_TemplateArgument* templateArgument;
ast::A_TemplateArgumentList* templateArgumentList;

Scope* pScope;

ast::A_DeclSpecExt* declspecExt;
ast::A_DeclSpecExtList* declspecExtList;

ast::A_DeclSpec* declspec;
ast::A_DeclSpec* typespec;
ast::DeclSpecList* declspecList;
ast::ParameterDeclarations* paramDecls;
ast::EnumDefinition* enumDef;
ast::EnumDefList* enumList;
ast::A_BaseSpecifier* baseSpecifier;
ast::A_BaseSpecifierList* baseSpecifierList;
ast::A_BasicTypeSpecifier simpleTypeSpec;



/* Line 214 of yacc.c  */
#line 492 "cpp_exp_parse.tab.c"
} YYSTYPE;
# define YYSTYPE_IS_TRIVIAL 1
# define yystype YYSTYPE /* obsolescent; will be withdrawn */
# define YYSTYPE_IS_DECLARED 1
#endif

#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
} YYLTYPE;
# define yyltype YYLTYPE /* obsolescent; will be withdrawn */
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif


/* Copy the second part of user declarations.  */


/* Line 264 of yacc.c  */
#line 517 "cpp_exp_parse.tab.c"

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#elif (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
typedef signed char yytype_int8;
#else
typedef short int yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(msgid) dgettext ("bison-runtime", msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(msgid) msgid
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(e) ((void) (e))
#else
# define YYUSE(e) /* empty */
#endif

/* Identity function, used to suppress warnings about constant conditions.  */
#ifndef lint
# define YYID(n) (n)
#else
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static int
YYID (int yyi)
#else
static int
YYID (yyi)
    int yyi;
#endif
{
  return yyi;
}
#endif

#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#     ifndef _STDLIB_H
#      define _STDLIB_H 1
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's `empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (YYID (0))
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined _STDLIB_H \
       && ! ((defined YYMALLOC || defined malloc) \
	     && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef _STDLIB_H
#    define _STDLIB_H 1
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
	 || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
	     && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

/* Copy COUNT objects from FROM to TO.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(To, From, Count) \
      __builtin_memcpy (To, From, (Count) * sizeof (*(From)))
#  else
#   define YYCOPY(To, From, Count)		\
      do					\
	{					\
	  YYSIZE_T yyi;				\
	  for (yyi = 0; yyi < (Count); yyi++)	\
	    (To)[yyi] = (From)[yyi];		\
	}					\
      while (YYID (0))
#  endif
# endif

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
    do									\
      {									\
	YYSIZE_T yynewbytes;						\
	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
	Stack = &yyptr->Stack_alloc;					\
	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
	yyptr += yynewbytes / sizeof (*yyptr);				\
      }									\
    while (YYID (0))

#endif

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  184
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   3896

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  151
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  214
/* YYNRULES -- Number of rules.  */
#define YYNRULES  617
/* YYNRULES -- Number of states.  */
#define YYNSTATES  1037

/* YYTRANSLATE(YYLEX) -- Bison symbol number corresponding to YYLEX.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   384

#define YYTRANSLATE(YYX)						\
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[YYLEX] -- Bison symbol number corresponding to YYLEX.  */
static const yytype_uint8 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   147,     2,   130,     2,   146,     2,     2,
     138,   139,     2,   143,   136,   144,   149,   145,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   148,   131,
     134,   137,   135,   150,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,   140,     2,   141,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   132,     2,   133,   142,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129
};

#if YYDEBUG
/* YYPRHS[YYN] -- Index of the first RHS symbol of rule number YYN in
   YYRHS.  */
static const yytype_uint16 yyprhs[] =
{
       0,     0,     3,     5,     8,    10,    12,    15,    16,    18,
      19,    21,    23,    26,    30,    33,    36,    38,    40,    46,
      50,    52,    54,    55,    62,    63,    64,    73,    74,    75,
      84,    86,    90,    92,    94,    98,   101,   106,   109,   114,
     121,   124,   127,   129,   132,   134,   137,   139,   142,   144,
     148,   149,   157,   162,   164,   166,   170,   177,   182,   184,
     187,   188,   193,   195,   197,   201,   208,   213,   215,   218,
     219,   224,   226,   228,   232,   239,   244,   246,   250,   251,
     253,   258,   259,   261,   263,   265,   268,   270,   272,   274,
     276,   278,   280,   282,   285,   286,   288,   290,   294,   296,
     300,   301,   303,   306,   311,   314,   319,   322,   325,   327,
     330,   332,   334,   337,   343,   346,   348,   351,   354,   356,
     358,   361,   364,   366,   368,   370,   373,   374,   376,   383,
     388,   394,   398,   402,   404,   406,   408,   410,   412,   414,
     416,   418,   420,   422,   426,   428,   430,   433,   434,   441,
     442,   449,   452,   455,   457,   460,   463,   465,   468,   471,
     473,   475,   479,   483,   487,   491,   496,   501,   506,   508,
     512,   514,   517,   519,   523,   525,   529,   532,   536,   538,
     542,   544,   546,   550,   554,   556,   558,   560,   562,   564,
     566,   568,   570,   572,   574,   576,   578,   580,   583,   586,
     588,   590,   592,   594,   596,   598,   600,   602,   604,   606,
     608,   610,   612,   614,   616,   618,   620,   622,   624,   627,
     629,   633,   635,   638,   642,   644,   647,   649,   651,   654,
     656,   659,   660,   665,   668,   670,   673,   675,   677,   680,
     682,   685,   688,   689,   691,   694,   695,   705,   710,   715,
     720,   724,   729,   734,   739,   743,   753,   762,   765,   767,
     771,   776,   778,   780,   781,   783,   784,   785,   791,   795,
     796,   798,   800,   807,   811,   815,   819,   823,   827,   831,
     834,   842,   849,   851,   854,   856,   859,   861,   864,   866,
     869,   870,   872,   874,   876,   878,   880,   882,   884,   886,
     888,   890,   892,   897,   900,   903,   906,   909,   912,   915,
     918,   921,   924,   927,   933,   935,   940,   942,   945,   946,
     948,   951,   954,   957,   960,   963,   966,   969,   971,   974,
     976,   978,   981,   984,   987,   990,   993,   996,   998,  1001,
    1003,  1005,  1008,  1010,  1013,  1017,  1019,  1021,  1023,  1026,
    1028,  1032,  1033,  1035,  1038,  1042,  1046,  1047,  1049,  1050,
    1053,  1054,  1056,  1058,  1062,  1065,  1067,  1069,  1073,  1074,
    1076,  1078,  1081,  1084,  1089,  1090,  1092,  1094,  1099,  1102,
    1104,  1108,  1110,  1112,  1116,  1120,  1121,  1123,  1125,  1128,
    1133,  1137,  1138,  1140,  1142,  1145,  1146,  1153,  1154,  1160,
    1162,  1164,  1166,  1168,  1170,  1172,  1174,  1175,  1177,  1183,
    1191,  1193,  1196,  1200,  1201,  1203,  1205,  1209,  1211,  1213,
    1215,  1217,  1219,  1221,  1223,  1225,  1227,  1229,  1231,  1233,
    1235,  1237,  1239,  1241,  1243,  1245,  1250,  1255,  1260,  1265,
    1268,  1271,  1275,  1279,  1283,  1287,  1295,  1303,  1311,  1319,
    1324,  1329,  1331,  1335,  1336,  1338,  1339,  1341,  1343,  1345,
    1349,  1351,  1354,  1357,  1360,  1363,  1366,  1369,  1372,  1375,
    1378,  1383,  1385,  1388,  1390,  1393,  1398,  1402,  1403,  1405,
    1407,  1411,  1412,  1414,  1417,  1422,  1424,  1429,  1431,  1435,
    1439,  1441,  1445,  1449,  1453,  1455,  1459,  1463,  1465,  1469,
    1473,  1475,  1479,  1483,  1487,  1491,  1493,  1497,  1501,  1503,
    1507,  1509,  1513,  1515,  1519,  1521,  1525,  1527,  1531,  1533,
    1539,  1541,  1543,  1545,  1547,  1549,  1551,  1553,  1555,  1557,
    1559,  1561,  1563,  1567,  1569,  1570,  1572,  1575,  1577,  1581,
    1582,  1584,  1586,  1587,  1589,  1591,  1595,  1599,  1603,  1605,
    1609,  1613,  1615,  1619,  1621,  1625,  1627,  1631,  1633,  1637,
    1639,  1643,  1645,  1651,  1653,  1655,  1659,  1660,  1662,  1664,
    1666,  1667,  1669,  1672,  1673,  1675,  1677,  1681,  1683,  1685,
    1688,  1692,  1696,  1698,  1700,  1702,  1704,  1706,  1708,  1710,
    1712,  1714,  1720,  1725,  1729,  1730,  1736,  1737,  1743,  1746,
    1749,  1753,  1759,  1767,  1773,  1775,  1780,  1786,  1794,  1803,
    1813,  1824,  1828,  1830,  1833,  1836,  1840,  1842
};

/* YYRHS -- A `-1'-separated list of the rules' RHS.  */
static const yytype_int16 yyrhs[] =
{
     152,     0,    -1,   330,    -1,     4,   153,    -1,   155,    -1,
     157,    -1,   154,   157,    -1,    -1,   154,    -1,    -1,    89,
      -1,   119,    -1,   130,   114,    -1,   287,   251,   131,    -1,
     287,   237,    -1,   287,   158,    -1,   159,    -1,   163,    -1,
      34,   114,   132,   155,   133,    -1,    34,   114,   157,    -1,
     161,    -1,     5,    -1,    -1,    32,   160,   162,   132,   155,
     133,    -1,    -1,    -1,   156,    88,   134,   164,   169,   135,
     165,   157,    -1,    -1,    -1,   156,    88,   134,   167,   169,
     135,   168,   264,    -1,   170,    -1,   169,   136,   170,    -1,
     171,    -1,   172,    -1,   172,   137,   205,    -1,    51,   346,
      -1,    51,   346,   137,   236,    -1,    49,   346,    -1,    49,
     346,   137,   236,    -1,    88,   134,   169,   135,    51,   346,
      -1,   173,   175,    -1,    46,   173,    -1,   299,    -1,   299,
     174,    -1,   299,    -1,   299,   174,    -1,   176,    -1,   190,
     175,    -1,   219,    -1,   138,   175,   139,    -1,    -1,   176,
     138,   177,   195,   139,   194,   189,    -1,   176,   140,   333,
     141,    -1,   179,    -1,   220,    -1,   138,   178,   139,    -1,
     179,   138,   195,   139,   194,   189,    -1,   179,   140,   333,
     141,    -1,   182,    -1,   190,   180,    -1,    -1,   225,    24,
     181,   180,    -1,   221,    -1,   225,    -1,   138,   180,   139,
      -1,   182,   250,   195,   139,   194,   189,    -1,   182,   140,
     333,   141,    -1,   185,    -1,   190,   183,    -1,    -1,   225,
      24,   184,   183,    -1,   221,    -1,   225,    -1,   138,   183,
     139,    -1,   185,   138,   195,   139,   194,   189,    -1,   185,
     140,   333,   141,    -1,   236,    -1,   186,   136,   236,    -1,
      -1,   186,    -1,    74,   138,   187,   139,    -1,    -1,   188,
      -1,   191,    -1,    24,    -1,    24,    46,    -1,    25,    -1,
     100,    -1,   101,    -1,   102,    -1,    46,    -1,    47,    -1,
     192,    -1,   192,   193,    -1,    -1,   193,    -1,   197,    -1,
     196,   136,   108,    -1,   198,    -1,   196,   136,   198,    -1,
      -1,   196,    -1,   199,   203,    -1,   199,   203,   137,   327,
      -1,   199,   175,    -1,   199,   175,   137,   327,    -1,    46,
     199,    -1,    47,   199,    -1,   299,    -1,   299,   200,    -1,
     262,    -1,   227,    -1,   227,   201,    -1,   103,   138,   259,
     139,   199,    -1,   299,   200,    -1,   299,    -1,    46,   200,
      -1,    47,   200,    -1,    46,    -1,    47,    -1,    46,   201,
      -1,    47,   201,    -1,    46,    -1,    47,    -1,   204,    -1,
     190,   203,    -1,    -1,   202,    -1,   204,   138,   195,   139,
     194,   189,    -1,   204,   140,   333,   141,    -1,   138,   195,
     139,   194,   189,    -1,   140,   333,   141,    -1,   138,   202,
     139,    -1,    65,    -1,    66,    -1,   117,    -1,   118,    -1,
     114,    -1,   115,    -1,   116,    -1,    90,    -1,   205,    -1,
     122,    -1,   138,   330,   139,    -1,   228,    -1,     5,    -1,
     207,   128,    -1,    -1,   207,   125,   134,   210,   344,   135,
      -1,    -1,   208,   125,   134,   211,   344,   135,    -1,   207,
     125,    -1,   208,   125,    -1,   209,    -1,   207,   127,    -1,
     208,   127,    -1,   209,    -1,   207,   127,    -1,   208,   127,
      -1,   212,    -1,   214,    -1,   213,   107,   224,    -1,   142,
     207,   126,    -1,   142,   207,   127,    -1,   142,   207,   125,
      -1,   142,   207,   128,   126,    -1,   142,   207,   128,   127,
      -1,   142,   207,   128,   125,    -1,   216,    -1,   213,   107,
     217,    -1,   217,    -1,   207,   126,    -1,   223,    -1,   213,
     107,   219,    -1,   230,    -1,   213,   107,   220,    -1,   207,
     126,    -1,   142,   207,   126,    -1,   223,    -1,   213,   107,
     221,    -1,   109,    -1,   110,    -1,   109,   140,   141,    -1,
     110,   140,   141,    -1,   137,    -1,   134,    -1,   135,    -1,
     143,    -1,   144,    -1,   145,    -1,   146,    -1,   147,    -1,
     142,    -1,    10,    -1,    11,    -1,    22,    -1,    23,    -1,
     138,   139,    -1,   140,   141,    -1,     7,    -1,     8,    -1,
      26,    -1,    27,    -1,    25,    -1,    24,    -1,     9,    -1,
     105,    -1,   106,    -1,    14,    -1,    15,    -1,    16,    -1,
      20,    -1,    21,    -1,    12,    -1,    13,    -1,    17,    -1,
      18,    -1,    19,    -1,   111,   222,    -1,   213,    -1,   213,
     107,   224,    -1,   213,    -1,   213,   107,    -1,   213,   107,
     224,    -1,   224,    -1,   107,   224,    -1,   215,    -1,   219,
      -1,   107,   219,    -1,   221,    -1,   107,   221,    -1,    -1,
     111,   231,   232,   235,    -1,    46,   232,    -1,   299,    -1,
     299,   233,    -1,   226,    -1,    46,    -1,    46,   233,    -1,
     299,    -1,   299,   233,    -1,   190,   235,    -1,    -1,   234,
      -1,   260,   203,    -1,    -1,   255,   229,   250,   195,   139,
     189,   244,   238,   245,    -1,   255,   253,   180,   245,    -1,
     255,   262,   180,   245,    -1,   255,   226,   180,   245,    -1,
     255,   178,   245,    -1,   255,   253,   183,   245,    -1,   255,
     262,   183,   245,    -1,   255,   227,   183,   245,    -1,   255,
     178,   245,    -1,   255,   134,   227,   138,   195,   139,   189,
     244,   245,    -1,   255,   218,   138,   195,   139,   189,   244,
     245,    -1,   148,   241,    -1,   242,    -1,   241,   136,   242,
      -1,   243,   138,   302,   139,    -1,   228,    -1,   226,    -1,
      -1,   240,    -1,    -1,    -1,   132,   246,   249,   133,   247,
      -1,   132,   249,   133,    -1,    -1,   364,    -1,   138,    -1,
     255,   229,   250,   195,   139,   189,    -1,   255,   253,   275,
      -1,   255,   262,   275,    -1,   255,   226,   275,    -1,   255,
     253,   266,    -1,   255,   262,   267,    -1,   255,   227,   266,
      -1,   255,   178,    -1,   255,   134,   227,   138,   195,   139,
     189,    -1,   255,   218,   138,   195,   139,   189,    -1,   299,
      -1,   299,   254,    -1,   299,    -1,   299,   254,    -1,    46,
      -1,    46,   254,    -1,    47,    -1,    47,   254,    -1,    -1,
     256,    -1,    46,    -1,    47,    -1,    61,    -1,    62,    -1,
      59,    -1,    48,    -1,    91,    -1,    34,    -1,    63,    -1,
      64,    -1,   103,   138,   259,   139,    -1,   256,    46,    -1,
     256,    47,    -1,   256,    61,    -1,   256,    62,    -1,   256,
      59,    -1,   256,    48,    -1,   256,    91,    -1,   256,    34,
      -1,   256,    63,    -1,   256,    64,    -1,   256,   103,   138,
     259,   139,    -1,     5,    -1,     5,   138,   117,   139,    -1,
     257,    -1,   258,   257,    -1,    -1,   258,    -1,    46,   260,
      -1,    47,   260,    -1,    48,   260,    -1,    91,   260,    -1,
      61,   260,    -1,    34,   260,    -1,    59,   260,    -1,   299,
      -1,   299,   261,    -1,   262,    -1,   226,    -1,    46,   261,
      -1,    47,   261,    -1,    48,   261,    -1,    61,   261,    -1,
      34,   261,    -1,    59,   261,    -1,   299,    -1,   299,   261,
      -1,   289,    -1,   295,    -1,    49,   281,    -1,   282,    -1,
     264,   269,    -1,   293,   148,   269,    -1,   265,    -1,   239,
      -1,   166,    -1,   252,   131,    -1,   268,    -1,   266,   136,
     268,    -1,    -1,   266,    -1,   183,   270,    -1,   219,   148,
     332,    -1,   224,   148,   332,    -1,    -1,   263,    -1,    -1,
     137,   332,    -1,    -1,   272,    -1,   273,    -1,   272,   136,
     273,    -1,   183,   277,    -1,   183,    -1,   276,    -1,   274,
     136,   276,    -1,    -1,   274,    -1,   180,    -1,   180,   277,
      -1,   137,   279,    -1,    25,   138,   301,   139,    -1,    -1,
     136,    -1,   327,    -1,   132,   280,   278,   133,    -1,   132,
     133,    -1,   279,    -1,   280,   136,   279,    -1,   226,    -1,
     228,    -1,   292,   283,   228,    -1,   292,   283,   227,    -1,
      -1,   284,    -1,   285,    -1,   284,   285,    -1,   103,   138,
     259,   139,    -1,   140,   242,   141,    -1,    -1,   288,    -1,
     286,    -1,   288,   286,    -1,    -1,   282,   348,   132,   290,
     269,   133,    -1,    -1,   292,   132,   291,   269,   133,    -1,
      51,    -1,    52,    -1,    53,    -1,    81,    -1,    54,    -1,
      55,    -1,    56,    -1,    -1,   293,    -1,    50,   346,   132,
     297,   133,    -1,    50,   346,   148,   253,   132,   297,   133,
      -1,   298,    -1,   296,   136,    -1,   296,   136,   298,    -1,
      -1,   296,    -1,     5,    -1,     5,   137,   332,    -1,    87,
      -1,    78,    -1,    76,    -1,    77,    -1,    80,    -1,    79,
      -1,    82,    -1,    83,    -1,    84,    -1,    85,    -1,    86,
      -1,    95,    -1,    96,    -1,    97,    -1,    98,    -1,    93,
      -1,    94,    -1,   206,    -1,   300,   140,   330,   141,    -1,
     300,   138,   303,   139,    -1,   226,   138,   302,   139,    -1,
     299,   138,   302,   139,    -1,   300,     7,    -1,   300,     8,
      -1,   300,   149,   281,    -1,   300,     9,   281,    -1,   300,
     149,   217,    -1,   300,     9,   217,    -1,    68,   134,   236,
     135,   138,   330,   139,    -1,    70,   134,   236,   135,   138,
     330,   139,    -1,    71,   134,   236,   135,   138,   330,   139,
      -1,    69,   134,   236,   135,   138,   330,   139,    -1,   113,
     138,   330,   139,    -1,   113,   138,   236,   139,    -1,   327,
      -1,   301,   136,   327,    -1,    -1,   301,    -1,    -1,   304,
      -1,   327,    -1,   236,    -1,   301,   136,   327,    -1,   300,
      -1,     7,   313,    -1,     8,   313,    -1,    24,   313,    -1,
      25,   313,    -1,   143,   313,    -1,   144,   313,    -1,   147,
     313,    -1,   142,   313,    -1,   112,   305,    -1,   112,   138,
     236,   139,    -1,   306,    -1,   107,   306,    -1,   312,    -1,
     107,   312,    -1,   109,   308,   309,   311,    -1,   138,   301,
     139,    -1,    -1,   307,    -1,   260,    -1,   138,   302,   139,
      -1,    -1,   310,    -1,   110,   313,    -1,   110,   140,   141,
     313,    -1,   305,    -1,   138,   236,   139,   313,    -1,   313,
      -1,   314,    30,   313,    -1,   314,    31,   313,    -1,   314,
      -1,   315,    24,   314,    -1,   315,   145,   314,    -1,   315,
     146,   314,    -1,   315,    -1,   316,   143,   315,    -1,   316,
     144,   315,    -1,   316,    -1,   317,   105,   316,    -1,   317,
     106,   316,    -1,   317,    -1,   318,   134,   317,    -1,   318,
     135,   317,    -1,   318,    22,   317,    -1,   318,    23,   317,
      -1,   318,    -1,   319,    10,   318,    -1,   319,    11,   318,
      -1,   319,    -1,   320,    25,   319,    -1,   320,    -1,   321,
      27,   320,    -1,   321,    -1,   322,    26,   321,    -1,   322,
      -1,   323,    28,   322,    -1,   323,    -1,   324,    29,   323,
      -1,   324,    -1,   324,   150,   330,   148,   327,    -1,   137,
      -1,    12,    -1,    13,    -1,    14,    -1,    15,    -1,    16,
      -1,    17,    -1,    18,    -1,    19,    -1,    20,    -1,    21,
      -1,   325,    -1,   324,   326,   327,    -1,   329,    -1,    -1,
     327,    -1,    74,   328,    -1,   327,    -1,   330,   136,   327,
      -1,    -1,   330,    -1,   325,    -1,    -1,   325,    -1,   317,
      -1,   334,   134,   317,    -1,   334,    22,   317,    -1,   334,
      23,   317,    -1,   334,    -1,   335,    10,   334,    -1,   335,
      11,   334,    -1,   335,    -1,   336,    25,   335,    -1,   336,
      -1,   337,    27,   336,    -1,   337,    -1,   338,    26,   337,
      -1,   338,    -1,   339,    28,   338,    -1,   339,    -1,   340,
      29,   339,    -1,   340,    -1,   340,   150,   330,   148,   342,
      -1,   341,    -1,   345,    -1,   343,   136,   345,    -1,    -1,
     343,    -1,   342,    -1,   236,    -1,    -1,     5,    -1,   148,
     349,    -1,    -1,   347,    -1,   351,    -1,   349,   136,   351,
      -1,   227,    -1,   350,    -1,   293,   350,    -1,    62,   294,
     350,    -1,   293,    62,   350,    -1,   131,    -1,   362,    -1,
     361,    -1,   354,    -1,   248,    -1,   358,    -1,   360,    -1,
     357,    -1,   363,    -1,   104,   138,   114,   139,   131,    -1,
      38,   332,   148,   352,    -1,    39,   148,   352,    -1,    -1,
     207,   126,   148,   355,   352,    -1,    -1,   207,   127,   148,
     356,   352,    -1,    42,   131,    -1,    41,   131,    -1,    40,
       5,   131,    -1,    35,   138,   359,   139,   352,    -1,    35,
     138,   359,   139,   352,    36,   352,    -1,    37,   138,   359,
     139,   352,    -1,   330,    -1,   260,   175,   137,   327,    -1,
      45,   138,   359,   139,   352,    -1,    44,   352,    45,   138,
     330,   139,   131,    -1,    43,   138,   131,   331,   131,   331,
     139,   352,    -1,    43,   138,   330,   131,   331,   131,   331,
     139,   352,    -1,    43,   138,   260,   271,   131,   331,   131,
     331,   139,   352,    -1,   260,   271,   131,    -1,   353,    -1,
     330,   131,    -1,    72,   131,    -1,    72,   330,   131,    -1,
     352,    -1,   352,   364,    -1
};

/* YYRLINE[YYN] -- source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,   749,   749,   751,   772,   789,   790,   793,   794,   797,
     798,   801,   806,   807,   808,   809,   810,   811,   814,   815,
     818,   822,   828,   827,   862,   871,   861,   901,   910,   900,
     942,   943,   946,   947,   948,   951,   952,   953,   954,   955,
     960,   963,   964,   965,   968,   969,   972,   973,   977,   978,
     980,   979,  1013,  1028,  1032,  1033,  1034,  1035,  1038,  1039,
    1040,  1040,  1046,  1048,  1049,  1050,  1066,  1069,  1070,  1071,
    1071,  1077,  1078,  1079,  1080,  1081,  1096,  1097,  1100,  1101,
    1104,  1107,  1108,  1111,  1112,  1113,  1114,  1118,  1119,  1120,
    1123,  1124,  1127,  1128,  1131,  1132,  1135,  1136,  1139,  1140,
    1143,  1144,  1147,  1148,  1149,  1150,  1153,  1154,  1155,  1156,
    1157,  1159,  1160,  1161,  1164,  1165,  1166,  1167,  1168,  1169,
    1172,  1173,  1174,  1175,  1178,  1179,  1182,  1183,  1188,  1189,
    1190,  1191,  1192,  1197,  1198,  1199,  1200,  1201,  1202,  1203,
    1204,  1207,  1208,  1209,  1210,  1233,  1343,  1347,  1346,  1362,
    1361,  1376,  1377,  1378,  1395,  1396,  1397,  1408,  1409,  1410,
    1413,  1417,  1436,  1437,  1438,  1439,  1440,  1441,  1444,  1448,
    1462,  1486,  1489,  1491,  1505,  1506,  1520,  1521,  1523,  1526,
    1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,
    1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,
    1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,
    1576,  1577,  1578,  1579,  1580,  1581,  1582,  1583,  1586,  1591,
    1595,  1607,  1611,  1615,  1645,  1650,  1659,  1669,  1674,  1683,
    1688,  1706,  1705,  1719,  1720,  1721,  1722,  1725,  1726,  1727,
    1728,  1737,  1740,  1741,  1744,  1748,  1747,  1763,  1768,  1773,
    1778,  1799,  1804,  1809,  1814,  1819,  1826,  1846,  1849,  1850,
    1853,  1855,  1856,  1859,  1860,  1864,  1885,  1863,  1895,  1898,
    1899,  1906,  1936,  1952,  1957,  1962,  1981,  1986,  1991,  1996,
    2000,  2005,  2026,  2027,  2030,  2031,  2032,  2033,  2034,  2035,
    2038,  2039,  2042,  2043,  2044,  2045,  2046,  2047,  2048,  2049,
    2050,  2051,  2052,  2053,  2054,  2055,  2056,  2057,  2058,  2059,
    2060,  2061,  2062,  2063,  2066,  2067,  2069,  2070,  2073,  2074,
    2106,  2107,  2108,  2109,  2110,  2111,  2112,  2113,  2114,  2115,
    2118,  2122,  2123,  2124,  2125,  2126,  2127,  2128,  2129,  2133,
    2134,  2135,  2139,  2147,  2148,  2151,  2152,  2153,  2156,  2172,
    2173,  2176,  2177,  2180,  2181,  2182,  2185,  2186,  2189,  2190,
    2195,  2196,  2199,  2200,  2215,  2216,  2219,  2220,  2223,  2224,
    2227,  2228,  2231,  2232,  2235,  2236,  2239,  2240,  2241,  2244,
    2245,  2248,  2249,  2258,  2259,  2272,  2273,  2276,  2277,  2280,
    2283,  2286,  2287,  2290,  2291,  2295,  2294,  2333,  2332,  2375,
    2376,  2377,  2378,  2381,  2382,  2383,  2386,  2387,  2390,  2391,
    2404,  2405,  2406,  2409,  2410,  2413,  2414,  2417,  2418,  2419,
    2420,  2421,  2422,  2423,  2424,  2425,  2426,  2427,  2428,  2429,
    2430,  2431,  2432,  2433,  2436,  2438,  2441,  2449,  2450,  2452,
    2453,  2455,  2456,  2458,  2459,  2461,  2462,  2463,  2464,  2465,
    2466,  2469,  2470,  2473,  2474,  2477,  2478,  2481,  2482,  2483,
    2486,  2487,  2488,  2489,  2490,  2491,  2492,  2493,  2494,  2496,
    2497,  2498,  2499,  2500,  2501,  2504,  2508,  2511,  2512,  2515,
    2531,  2534,  2535,  2538,  2539,  2542,  2543,  2546,  2547,  2548,
    2551,  2552,  2553,  2554,  2557,  2558,  2559,  2562,  2563,  2564,
    2567,  2568,  2569,  2570,  2571,  2574,  2575,  2576,  2579,  2580,
    2583,  2584,  2587,  2588,  2591,  2592,  2595,  2596,  2599,  2600,
    2603,  2604,  2605,  2606,  2607,  2608,  2609,  2610,  2611,  2612,
    2613,  2616,  2617,  2618,  2621,  2622,  2625,  2628,  2629,  2632,
    2633,  2636,  2639,  2640,  2645,  2646,  2648,  2649,  2652,  2653,
    2654,  2657,  2658,  2661,  2662,  2665,  2666,  2669,  2670,  2673,
    2674,  2677,  2678,  2681,  2695,  2696,  2699,  2700,  2703,  2704,
    2707,  2708,  2714,  2717,  2718,  2721,  2722,  2725,  2729,  2730,
    2731,  2732,  2737,  2738,  2739,  2740,  2741,  2742,  2743,  2744,
    2745,  2751,  2754,  2755,  2756,  2756,  2757,  2757,  2760,  2761,
    2762,  2766,  2767,  2768,  2771,  2772,  2775,  2776,  2777,  2778,
    2779,  2782,  2783,  2787,  2790,  2791,  2794,  2795
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || YYTOKEN_TABLE
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "EXP_TOKEN", "DECLS_TOKEN", "IDENTIFIER",
  "identifier_lparen", "PLUSPLUS", "MINUSMINUS", "ARROW", "EQUAL",
  "NOT_EQUAL", "ASSIGN_PLUS", "ASSIGN_MINUS", "ASSIGN_OR", "ASSIGN_XOR",
  "ASSIGN_AND", "ASSIGN_MUL", "ASSIGN_DIV", "ASSIGN_MOD", "ASSIGN_LSHIFT",
  "ASSIGN_RSHIFT", "LEQ", "GEQ", "STAR", "BITAND", "BITOR", "BITXOR",
  "LAND", "LOR", "DOT_STAR", "ARROW_STAR", "NAMESPACE_KW", "USING_KW",
  "EXTERN_KW", "IF_KW", "ELSE_KW", "SWITCH_KW", "CASE_KW", "DEFAULT_KW",
  "GOTO_KW", "BREAK_KW", "CONTINUE_KW", "FOR_KW", "DO_KW", "WHILE_KW",
  "CONST_KW", "VOLATILE_KW", "TYPEDEF_KW", "TYPENAME_KW", "ENUM_KW",
  "CLASS_KW", "STRUCT_KW", "UNION_KW", "PRIVATE_KW", "PROTECTED_KW",
  "PUBLIC_KW", "AUTO_KW", "REGISTER_KW", "STATIC_KW", "MUTABLE_KW",
  "INLINE_KW", "VIRTUAL_KW", "EXPLICIT_KW", "FRIEND_KW", "FALSE_KW",
  "TRUE_KW", "STATIC_ASSERT_KW", "STATIC_CAST_KW", "REINTERPRET_CAST_KW",
  "DYNAMIC_CAST_KW", "CONST_CAST_KW", "RETURN_KW", "TRY_KW", "THROW_KW",
  "CATCH_KW", "CHAR_KW", "WCHAR_T_KW", "BOOL_KW", "SHORT_KW", "INT_KW",
  "INTERFACE_KW", "LONG_KW", "SIGNED_KW", "UNSIGNED_KW", "FLOAT_KW",
  "DOUBLE_KW", "VOID_KW", "TEMPLATE_KW", "EXPORT_KW", "NULLPTR_KW",
  "CONSTEXPR_KW", "DECLTYPE_KW", "__FLOAT32_KW", "__FLOAT64_KW",
  "__INT8_KW", "__INT16_KW", "__INT32_KW", "__INT64_KW", "__INT128_KW",
  "__CDECL_KW", "__STDCALL_KW", "__FASTCALL_KW", "__DECLSPEC_KW",
  "__ASM_KW", "LSHIFT", "RSHIFT", "TWO_COLON", "THREE_DOTS", "NEW_KW",
  "DELETE_KW", "OPERATOR_KW", "SIZEOF_KW", "TYPEID_KW", "STRING_LITERAL",
  "LSTRING_LITERAL", "CHAR_LITERAL", "INTEGER_LITERAL", "DOUBLE_LITERAL",
  "IMPORT_KW", "TEMPLATE_NAME", "ATTRIBUTE_KW", "THIS_KW", "NTA", "YTA",
  "YTT", "NTY", "YTY", "CTORN", "SHIFT_THERE", "'#'", "';'", "'{'", "'}'",
  "'<'", "'>'", "','", "'='", "'('", "')'", "'['", "']'", "'~'", "'+'",
  "'-'", "'/'", "'%'", "'!'", "':'", "'.'", "'?'", "$accept", "start",
  "translation_unit", "declaration_seq", "declaration_seq_opt",
  "export_opt", "declaration", "linkage_specification",
  "namespace_definition", "identifier", "named_namespace_definition",
  "$@1", "template_declaration", "@2", "$@3",
  "member_template_declaration", "@4", "$@5", "template_parameter_list",
  "template_parameter", "type_parameter", "template_parameter_declaration",
  "template_parameter_declaration1", "template_parameter_declaration2",
  "declarator", "direct_declarator", "$@6",
  "conversion_function_declarator",
  "direct_conversion_function_declarator", "q_declarator", "$@7",
  "q_direct_declarator", "_q_member_declarator", "$@8",
  "q_member_direct_declarator", "type_id_list", "type_id_list_opt",
  "exception_specification", "exception_specification_opt", "ptr_operator",
  "cc_qualifier", "cv_qualifier", "cv_qualifier_seq",
  "cv_qualifier_seq_opt", "parameter_declaration_clause",
  "parameter_declaration_list", "parameter_declaration_list_opt",
  "parameter_declaration", "parameter_declaration1",
  "parameter_declaration3", "parameter_declaration4",
  "abstract_declarator", "abstract_declarator_opt",
  "direct_abstract_declarator", "literal", "primary_expression", "id",
  "id_ctor", "template_id", "$@9", "$@10", "q_template_id", "typename_id",
  "q_typename_id", "q_type_nested_id", "dtor_id", "dtor_nested_id",
  "dtor_scoped_id", "non_type_nested_id", "conversion_nested_id",
  "p_non_type_nested_id", "operator", "operator_function_id",
  "type_nested_id", "declarator_nested_id", "type_scoped_id",
  "q_type_scoped_id", "non_type_scoped_id", "p_non_type_scoped_id",
  "conversion_function_id", "$@11", "conversion_type_id",
  "conversion_type_id2", "conversion_declarator",
  "conversion_declarator_opt", "type_id", "function_definition", "$@12",
  "member_function_definition", "ctor_initializer", "mem_initializer_list",
  "mem_initializer", "mem_initializer_id", "ctor_initializer_opt",
  "function_body", "$@13", "$@14", "compound_statement",
  "statement_seq_opt", "here", "_simple_declaration",
  "_member_declaration", "basic_type_seq", "basic_type_seq2",
  "q_simple_declaration2_opt", "q_simple_declaration2", "declspec_item",
  "declspeclist", "declspeclist_opt", "simple_declaration2",
  "simple_declaration3", "elaborated_type_specifier",
  "member_specification", "member_declaration", "member_declaration_decl",
  "q_member_declarator_list", "q_member_declarator_list_opt",
  "q_member_declarator", "member_specification_opt",
  "constant_initializer_opt", "statement_declarator_list_opt",
  "statement_declarator_list", "statement_declarator",
  "q_init_declarator_list", "q_init_declarator_list_opt",
  "q_init_declarator", "initializer", "COMMA_opt", "initializer_clause",
  "initializer_list", "scoped_id", "class_head",
  "class_specifier_ext_list_opt", "class_specifier_ext_list",
  "class_specifier_ext", "attribute_specification",
  "attribute_specification_list_opt", "attribute_specification_list",
  "class_specifier", "$@15", "$@16", "class_key", "access_specifier",
  "access_specifier_opt", "enum_specifier", "enumerator_list",
  "enumerator_list_opt", "enumerator_definition", "basic_type",
  "postfix_expression", "expression_list", "expression_list_opt",
  "expression_or_type_list_opt", "expression_or_type_list",
  "unary_expression", "new_expression", "new_placement",
  "new_placement_opt", "new_type_id", "new_initializer",
  "new_initializer_opt", "delete_expression", "cast_expression",
  "pm_expression", "multiplicative_expression", "additive_expression",
  "shift_expression", "relational_expression", "equality_expression",
  "and_expression", "exclusive_or_expression", "inclusive_or_expression",
  "logical_and_expression", "logical_or_expression",
  "conditional_expression", "assignment_operator", "assignment_expression",
  "assignment_expression_opt", "throw_expression", "expression",
  "expression_opt", "constant_expression", "constant_expression_opt",
  "template_argument_relational_expression",
  "template_argument_equality_expression",
  "template_argument_and_expression",
  "template_argument_exclusive_or_expression",
  "template_argument_inclusive_or_expression",
  "template_argument_logical_and_expression",
  "template_argument_logical_or_expression",
  "template_argument_conditional_expression",
  "template_argument_constant_expression", "template_argument_list",
  "template_argument_list_opt", "template_argument", "identifier_opt",
  "base_clause", "base_clause_opt", "base_specifier_list",
  "base_class_name", "base_specifier", "statement", "asm_definition",
  "labeled_statement", "$@17", "$@18", "jump_statement",
  "selection_statement", "condition", "iteration_statement",
  "declaration_statement", "expression_statement", "return_statement",
  "statement_seq", 0
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[YYLEX-NUM] -- Internal token number corresponding to
   token YYLEX-NUM.  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
      35,    59,   123,   125,    60,    62,    44,    61,    40,    41,
      91,    93,   126,    43,    45,    47,    37,    33,    58,    46,
      63
};
# endif

/* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   151,   152,   152,   153,   154,   154,   155,   155,   156,
     156,   157,   157,   157,   157,   157,   157,   157,   158,   158,
     159,   160,   162,   161,   164,   165,   163,   167,   168,   166,
     169,   169,   170,   170,   170,   171,   171,   171,   171,   171,
     172,   173,   173,   173,   174,   174,   175,   175,   176,   176,
     177,   176,   176,   178,   179,   179,   179,   179,   180,   180,
     181,   180,   182,   182,   182,   182,   182,   183,   183,   184,
     183,   185,   185,   185,   185,   185,   186,   186,   187,   187,
     188,   189,   189,   190,   190,   190,   190,   191,   191,   191,
     192,   192,   193,   193,   194,   194,   195,   195,   196,   196,
     197,   197,   198,   198,   198,   198,   199,   199,   199,   199,
     199,   199,   199,   199,   200,   200,   200,   200,   200,   200,
     201,   201,   201,   201,   202,   202,   203,   203,   204,   204,
     204,   204,   204,   205,   205,   205,   205,   205,   205,   205,
     205,   206,   206,   206,   206,   207,   208,   210,   209,   211,
     209,   212,   212,   212,   213,   213,   213,   214,   214,   214,
     215,   215,   216,   216,   216,   216,   216,   216,   217,   217,
     218,   219,   219,   219,   220,   220,   221,   221,   221,   221,
     222,   222,   222,   222,   222,   222,   222,   222,   222,   222,
     222,   222,   222,   222,   222,   222,   222,   222,   222,   222,
     222,   222,   222,   222,   222,   222,   222,   222,   222,   222,
     222,   222,   222,   222,   222,   222,   222,   222,   223,   224,
     224,   225,   225,   225,   226,   226,   227,   228,   228,   229,
     229,   231,   230,   232,   232,   232,   232,   233,   233,   233,
     233,   234,   235,   235,   236,   238,   237,   237,   237,   237,
     237,   239,   239,   239,   239,   239,   239,   240,   241,   241,
     242,   243,   243,   244,   244,   246,   247,   245,   248,   249,
     249,   250,   251,   251,   251,   251,   252,   252,   252,   252,
     252,   252,   253,   253,   254,   254,   254,   254,   254,   254,
     255,   255,   256,   256,   256,   256,   256,   256,   256,   256,
     256,   256,   256,   256,   256,   256,   256,   256,   256,   256,
     256,   256,   256,   256,   257,   257,   258,   258,   259,   259,
     260,   260,   260,   260,   260,   260,   260,   260,   260,   260,
     260,   261,   261,   261,   261,   261,   261,   261,   261,   262,
     262,   262,   262,   263,   263,   264,   264,   264,   265,   266,
     266,   267,   267,   268,   268,   268,   269,   269,   270,   270,
     271,   271,   272,   272,   273,   273,   274,   274,   275,   275,
     276,   276,   277,   277,   278,   278,   279,   279,   279,   280,
     280,   281,   281,   282,   282,   283,   283,   284,   284,   285,
     286,   287,   287,   288,   288,   290,   289,   291,   289,   292,
     292,   292,   292,   293,   293,   293,   294,   294,   295,   295,
     296,   296,   296,   297,   297,   298,   298,   299,   299,   299,
     299,   299,   299,   299,   299,   299,   299,   299,   299,   299,
     299,   299,   299,   299,   300,   300,   300,   300,   300,   300,
     300,   300,   300,   300,   300,   300,   300,   300,   300,   300,
     300,   301,   301,   302,   302,   303,   303,   304,   304,   304,
     305,   305,   305,   305,   305,   305,   305,   305,   305,   305,
     305,   305,   305,   305,   305,   306,   307,   308,   308,   309,
     310,   311,   311,   312,   312,   313,   313,   314,   314,   314,
     315,   315,   315,   315,   316,   316,   316,   317,   317,   317,
     318,   318,   318,   318,   318,   319,   319,   319,   320,   320,
     321,   321,   322,   322,   323,   323,   324,   324,   325,   325,
     326,   326,   326,   326,   326,   326,   326,   326,   326,   326,
     326,   327,   327,   327,   328,   328,   329,   330,   330,   331,
     331,   332,   333,   333,   334,   334,   334,   334,   335,   335,
     335,   336,   336,   337,   337,   338,   338,   339,   339,   340,
     340,   341,   341,   342,   343,   343,   344,   344,   345,   345,
     346,   346,   347,   348,   348,   349,   349,   350,   351,   351,
     351,   351,   352,   352,   352,   352,   352,   352,   352,   352,
     352,   353,   354,   354,   355,   354,   356,   354,   357,   357,
     357,   358,   358,   358,   359,   359,   360,   360,   360,   360,
     360,   361,   361,   362,   363,   363,   364,   364
};

/* YYR2[YYN] -- Number of symbols composing right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     2,     1,     1,     2,     0,     1,     0,
       1,     1,     2,     3,     2,     2,     1,     1,     5,     3,
       1,     1,     0,     6,     0,     0,     8,     0,     0,     8,
       1,     3,     1,     1,     3,     2,     4,     2,     4,     6,
       2,     2,     1,     2,     1,     2,     1,     2,     1,     3,
       0,     7,     4,     1,     1,     3,     6,     4,     1,     2,
       0,     4,     1,     1,     3,     6,     4,     1,     2,     0,
       4,     1,     1,     3,     6,     4,     1,     3,     0,     1,
       4,     0,     1,     1,     1,     2,     1,     1,     1,     1,
       1,     1,     1,     2,     0,     1,     1,     3,     1,     3,
       0,     1,     2,     4,     2,     4,     2,     2,     1,     2,
       1,     1,     2,     5,     2,     1,     2,     2,     1,     1,
       2,     2,     1,     1,     1,     2,     0,     1,     6,     4,
       5,     3,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     1,     2,     0,     6,     0,
       6,     2,     2,     1,     2,     2,     1,     2,     2,     1,
       1,     3,     3,     3,     3,     4,     4,     4,     1,     3,
       1,     2,     1,     3,     1,     3,     2,     3,     1,     3,
       1,     1,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     1,
       3,     1,     2,     3,     1,     2,     1,     1,     2,     1,
       2,     0,     4,     2,     1,     2,     1,     1,     2,     1,
       2,     2,     0,     1,     2,     0,     9,     4,     4,     4,
       3,     4,     4,     4,     3,     9,     8,     2,     1,     3,
       4,     1,     1,     0,     1,     0,     0,     5,     3,     0,
       1,     1,     6,     3,     3,     3,     3,     3,     3,     2,
       7,     6,     1,     2,     1,     2,     1,     2,     1,     2,
       0,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     5,     1,     4,     1,     2,     0,     1,
       2,     2,     2,     2,     2,     2,     2,     1,     2,     1,
       1,     2,     2,     2,     2,     2,     2,     1,     2,     1,
       1,     2,     1,     2,     3,     1,     1,     1,     2,     1,
       3,     0,     1,     2,     3,     3,     0,     1,     0,     2,
       0,     1,     1,     3,     2,     1,     1,     3,     0,     1,
       1,     2,     2,     4,     0,     1,     1,     4,     2,     1,
       3,     1,     1,     3,     3,     0,     1,     1,     2,     4,
       3,     0,     1,     1,     2,     0,     6,     0,     5,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     5,     7,
       1,     2,     3,     0,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     4,     4,     4,     4,     2,
       2,     3,     3,     3,     3,     7,     7,     7,     7,     4,
       4,     1,     3,     0,     1,     0,     1,     1,     1,     3,
       1,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       4,     1,     2,     1,     2,     4,     3,     0,     1,     1,
       3,     0,     1,     2,     4,     1,     4,     1,     3,     3,
       1,     3,     3,     3,     1,     3,     3,     1,     3,     3,
       1,     3,     3,     3,     3,     1,     3,     3,     1,     3,
       1,     3,     1,     3,     1,     3,     1,     3,     1,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     0,     1,     2,     1,     3,     0,
       1,     1,     0,     1,     1,     3,     3,     3,     1,     3,
       3,     1,     3,     1,     3,     1,     3,     1,     3,     1,
       3,     1,     5,     1,     1,     3,     0,     1,     1,     1,
       0,     1,     2,     0,     1,     1,     3,     1,     1,     2,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     5,     4,     3,     0,     5,     0,     5,     2,     2,
       3,     5,     7,     5,     1,     4,     5,     7,     8,     9,
      10,     3,     1,     2,     2,     3,     1,     2
};

/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
   means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
       0,   391,   145,     0,     0,     0,     0,   133,   134,     0,
       0,     0,     0,   534,   419,   420,   418,   422,   421,   423,
     424,   425,   426,   427,   417,   140,   432,   433,   428,   429,
     430,   431,     0,   477,     0,     0,     0,     0,   137,   138,
     139,   135,   136,   142,     0,     0,     0,     0,     0,     0,
     141,   434,     0,     0,   156,   219,   227,   172,   224,     0,
     144,     0,   460,   485,   471,   473,   487,   490,   494,   497,
     500,   505,   508,   510,   512,   514,   516,   518,   531,   537,
     533,     2,     0,    10,    11,     0,     0,     3,   391,     4,
       0,     5,    16,    20,    17,   393,   290,   392,   461,   462,
     463,   464,     0,     0,     0,     0,   535,   536,   228,   225,
     472,   474,     0,   478,     0,     0,   483,   199,   200,   205,
     193,   194,   213,   214,   208,   209,   210,   215,   216,   217,
     211,   212,   195,   196,   204,   203,   201,   202,   206,   207,
     180,   181,   185,   186,   184,     0,     0,   192,   187,   188,
     189,   190,   191,   218,     0,   469,     0,     0,     0,     0,
       0,     0,   570,   399,   400,   401,     0,     0,   402,     0,
     330,     0,   126,   329,   342,   339,   385,   340,   327,     0,
     468,   465,   466,   467,     1,     0,   171,   154,   146,     0,
     155,     0,   453,   453,   439,   440,     0,   455,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,     0,
     520,     0,     0,     0,    21,    22,    12,     0,   262,   261,
       0,     0,     6,     0,   299,   292,   293,   297,   296,   294,
     295,   300,   301,   298,     0,    15,    14,     0,     0,   291,
     394,     0,     0,   219,   330,     0,   327,     0,     0,     0,
       0,   451,   479,   481,     0,     0,     0,   197,   198,     0,
       0,     0,   325,   320,   321,   322,   381,   382,   341,   571,
       0,   326,   324,   323,     0,    84,    86,    87,    88,    89,
     100,   542,   126,    83,   127,   244,   124,     0,   574,     0,
       0,   397,     0,   386,   387,     0,     0,     0,     0,     0,
       0,   328,   337,   143,   147,   149,   173,   220,   454,     0,
       0,     0,   219,   168,   444,   442,   458,     0,     0,   456,
     451,     0,   443,   441,   488,   489,   491,   492,   493,   495,
     496,   498,   499,   503,   504,   501,   502,   506,   507,   509,
     511,   513,   515,   517,     0,   532,   538,     0,   390,   453,
      24,   391,   318,    13,     0,   231,     0,     0,     0,    53,
       0,   219,    54,   229,   178,   368,     0,   174,   368,   368,
     282,   310,   303,   304,   308,   307,   305,   306,   311,   312,
     309,     0,     0,     0,     0,     0,     0,     0,   476,   453,
     482,   475,   484,   182,   183,   470,   450,   449,   413,     0,
     486,    85,     0,     0,     0,     0,   101,    96,    98,   126,
       0,     0,     0,   153,   159,     0,   160,   226,   111,   110,
     108,   518,   543,     0,   125,   100,   542,   403,   404,   405,
     406,   577,     0,   572,   578,   575,   395,   318,   290,     0,
       0,     0,   384,   383,   388,   335,   331,   332,   333,   336,
     334,   338,   566,   566,   437,   438,     0,     0,     0,   436,
     435,     0,   391,     0,     0,   391,    19,   314,   316,   319,
       0,   219,   230,     0,   231,     0,     0,     0,   265,   250,
     100,   542,   176,     0,     0,   370,    58,     0,   221,    62,
      63,   369,   275,   366,   271,   100,   370,   273,   370,   274,
     286,   288,   283,   284,   318,     0,     0,     0,     0,   452,
       0,   415,   414,     0,   410,     0,   106,   107,   318,    94,
       0,   100,   104,    46,   126,   102,     0,    48,   132,   151,
     157,   152,   158,     0,   122,   123,   112,   118,   119,   109,
     115,   131,     0,     0,   407,     0,     0,   579,     0,   290,
       0,   299,     0,   347,   346,     0,     0,   357,   290,   345,
       0,     0,     0,   569,   544,   548,   551,   553,   555,   557,
     559,   561,   563,   568,   567,     0,   564,     0,   164,   162,
     163,     0,   169,   452,   519,     0,   260,     0,   570,   570,
       0,     0,    30,    32,    33,     0,    42,     0,     0,   317,
     302,     0,     0,   236,   242,   234,    55,     0,   177,   269,
       0,     0,   175,   179,     0,     0,     0,   249,   371,   542,
     100,    59,   222,    60,     0,     0,   247,   248,   287,   289,
     285,     0,     0,     0,     0,     0,   480,     0,   411,   408,
     413,     0,    90,    91,    92,    95,    81,    97,    99,     0,
       0,    50,   542,    47,     0,     0,   161,   120,   121,   116,
     117,   114,    94,   129,   580,   581,   576,     0,   389,     0,
     348,     0,   279,     0,   170,     0,     0,     0,   351,   343,
     398,   290,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   148,   150,   167,   165,   166,    23,
      41,    37,    35,     0,    25,     0,     0,     0,    40,     0,
      43,    44,    18,     0,   233,   242,   243,   232,   237,   235,
     239,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   582,   269,     0,   586,     0,   360,     0,
     616,   612,   585,   589,   587,   588,   584,   583,   590,   270,
      94,    57,    64,     0,     0,   372,   376,     0,     0,   223,
       0,   370,   367,    81,   313,   445,   448,   446,   447,   541,
     416,   412,     0,     0,    93,     0,    82,   130,    49,   105,
     100,     0,   103,    81,   396,    27,     0,   254,     0,   100,
       0,   358,    67,     0,     0,   221,     0,    71,   178,     0,
      72,   278,   349,   358,   276,   358,   352,   277,   344,   546,
     547,   545,   549,   550,   552,   554,   556,   558,   560,     0,
     565,     0,     0,     0,   391,    31,    34,    45,   315,   241,
     238,   240,     0,     0,     0,     0,     0,   599,   598,     0,
       0,     0,   614,     0,     0,     0,   171,   154,   266,   365,
       0,   361,   362,   613,   617,    81,     0,   378,   379,   374,
      66,    94,    61,   263,   409,   113,    78,     0,    52,   128,
       0,   100,   219,     0,     0,     0,   253,   353,   100,   542,
      68,   176,   222,     0,     0,    69,     0,   251,   252,     0,
      38,    36,     0,    26,     0,   604,     0,     0,     0,   593,
     600,   539,   360,     0,     0,     0,   615,     0,   268,   594,
     596,   267,   364,   611,     0,    56,   373,   375,     0,    81,
       0,   264,   245,    79,     0,    76,    94,     0,     0,     0,
      81,    73,   359,     0,     0,   219,   223,   354,   355,     0,
     358,   350,   562,   570,     0,     0,     0,   592,   540,     0,
       0,   539,     0,     0,     0,     0,     0,   363,   380,   377,
      65,   257,   258,     0,     0,    80,    81,    28,    81,   263,
      94,    75,     0,    70,    39,     0,   601,   603,   539,   539,
       0,     0,   606,   591,   595,   597,     0,   246,    77,    51,
     290,   263,     0,    81,   605,     0,     0,     0,   539,     0,
     259,    29,     0,   256,    74,   602,     0,   539,     0,   607,
     255,   608,     0,     0,     0,   609,   610
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    49,    87,    88,    89,    90,    91,   255,    92,   235,
      93,   367,    94,   484,   844,   573,   890,  1010,   611,   612,
     613,   614,   615,   730,   669,   543,   800,   378,   379,   505,
     780,   506,   869,   959,   812,   943,   944,   796,   797,   813,
     303,   664,   665,   666,   425,   426,   427,   428,   429,   559,
     556,   304,   444,   306,    50,    51,    52,    53,    54,   472,
     473,   434,    55,   436,   437,   333,   602,   695,    56,   632,
     817,   153,    57,    58,   820,    59,   438,    60,   386,   387,
     493,   624,   739,   736,   737,   583,   256,   983,   574,   941,
     981,   240,   241,   942,   499,   629,   931,   756,   757,   515,
     257,   575,   388,   522,   576,   259,   488,   489,   490,   172,
     321,   173,   577,   578,   579,   821,   827,   822,   580,   897,
     870,   871,   872,   511,   512,   513,   638,   938,   775,   879,
     288,   174,   312,   313,   314,    95,    96,    97,   175,   569,
     458,   176,   581,   565,   177,   532,   533,   534,    61,    62,
     328,   329,   338,   339,    63,    64,   113,   114,   273,   410,
     411,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,   232,    79,   107,    80,   759,
     969,   790,   443,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   290,   308,   309,   453,   454,
     455,   760,   761,   762,   975,   976,   763,   764,   916,   765,
     766,   767,   768,   769
};

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
#define YYPACT_NINF -917
static const yytype_int16 yypact[] =
{
    1989,   327,  -917,  3181,  3181,  3181,  3181,  -917,  -917,   -85,
     -73,   -25,   -21,  2991,  -917,  -917,  -917,  -917,  -917,  -917,
    -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,
    -917,  -917,   156,   -10,  3086,  1906,  3276,    -4,  -917,  -917,
    -917,  -917,  -917,  -917,  2495,  3181,  3181,  3181,  3181,   159,
    -917,  -917,   203,   231,  -917,    59,  -917,  -917,  -917,    46,
    -917,    76,    51,  -917,  -917,  -917,  -917,   295,    19,    91,
     452,    82,   570,   217,   236,   244,   253,  1022,  -917,  -917,
    -917,   155,   299,  -917,  -917,   194,   140,  -917,   310,  -917,
     224,  -917,  -917,  -917,  -917,  -917,   596,   208,  -917,  -917,
    -917,  -917,  3505,  3505,  3505,  3505,  -917,  -917,  -917,  -917,
    -917,  -917,  2991,  -917,  3505,   193,  -917,  -917,  -917,  -917,
    -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,
    -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,
     235,   248,  -917,  -917,  -917,   205,   260,  -917,  -917,  -917,
    -917,  -917,  -917,  -917,  2495,  -917,  2495,  3505,  3505,  3505,
    3505,   140,   407,  -917,  -917,  -917,  3505,  3505,  -917,  3505,
      46,   285,   402,  -917,    53,  -917,   -36,  -917,  1607,    85,
    -917,  -917,  -917,  -917,  -917,   315,  -917,  -917,  -917,   320,
    -917,    63,  2991,  2991,  -917,  -917,    35,  2495,  2991,    35,
    3181,  3181,  3181,  3181,  3181,  3181,  3181,  3181,  3181,  3181,
    3181,  3181,  3181,  3181,  3181,  3181,  3181,  3181,  3181,  -917,
    -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  3181,
    -917,  2991,  2991,  2991,  -917,  -917,  -917,    63,  -917,  -917,
     300,   344,  -917,   354,   378,  -917,  -917,  -917,  -917,  -917,
    -917,  -917,  -917,  -917,   361,  -917,  -917,   374,  1459,  1219,
    -917,   508,   173,   403,  -917,   380,  1905,   386,   420,   424,
     113,  -917,  -917,   399,  3181,   425,   437,  -917,  -917,   449,
     451,   183,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,
      75,  -917,  -917,  -917,  3181,   540,  -917,  -917,  -917,  -917,
    3375,  3181,   402,  -917,  -917,  -917,   228,   556,  -917,   470,
     468,  -917,   150,   525,  -917,  1905,  1905,  1905,  1905,  1905,
    1905,  -917,  1905,  -917,  -917,  -917,  -917,  -917,   483,   496,
     498,   508,   534,  -917,  -917,  -917,  -917,   513,   515,  -917,
     517,   107,  -917,  -917,  -917,  -917,   295,   295,   295,    19,
      19,    91,    91,   452,   452,   452,   452,    82,    82,   570,
     217,   236,   244,   253,    89,  -917,  -917,   520,  -917,  2991,
    -917,   376,   659,  -917,    33,  1906,    49,   508,   552,   290,
     226,   585,  -917,  -917,  -917,   579,   566,  -917,   579,   579,
    3687,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,
    -917,   568,   508,   575,   586,   590,   595,  2991,  -917,  2991,
    -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,   703,  3798,
    -917,  -917,  3611,  3611,   599,   601,   598,  -917,  -917,   698,
     602,   211,   309,   631,  -917,   635,  -917,  -917,   549,  -917,
    3729,    28,  -917,   613,  -917,  3611,  3181,  -917,  -917,  -917,
     341,  -917,    61,   611,  -917,  -917,  -917,   659,  1156,    63,
     259,   648,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,
    -917,  -917,  2611,  2611,  -917,  -917,   443,    40,  2991,  -917,
    -917,  2991,   532,   617,  3664,   532,  -917,   621,  -917,   659,
     622,   655,  -917,  3558,  -917,   624,   657,   640,  -917,  -917,
    3611,  3181,  -917,    41,   579,    31,   321,   579,   660,  -917,
     744,   644,  -917,  -917,  -917,  3611,    31,  -917,    31,  -917,
    3687,  3687,  -917,  3687,   659,  2991,  2991,  2991,  2991,  -917,
     632,   645,   652,   658,  -917,   649,  -917,  -917,   659,   576,
    3440,  2105,   666,   358,   698,   667,   685,  -917,  -917,   315,
     687,   320,   688,   508,   549,   549,  -917,  3729,  3729,  -917,
    3729,  -917,   669,   656,  -917,   508,   508,  -917,   556,  1156,
     681,  -917,   708,  -917,  -917,   674,  1721,  -917,  1156,  -917,
     678,   676,    63,  -917,   452,    78,   614,   800,   799,   801,
     806,    47,  -917,  -917,   693,   700,  -917,   709,  -917,  -917,
    -917,   351,  -917,   704,  -917,   712,  -917,  3752,   407,   407,
     720,   491,  -917,  -917,   718,   765,  3798,   727,   751,  -917,
    -917,    33,  3558,  -917,   291,  3775,  -917,    70,  -917,  2263,
     731,   730,  -917,  -917,   733,   736,  2801,  -917,  -917,  3181,
    3611,  -917,    33,  -917,   579,   740,  -917,  -917,  -917,  -917,
    -917,   742,   204,   267,   274,   286,  -917,  3181,   703,  -917,
     703,   743,  -917,  -917,   576,  -917,   812,  -917,  -917,   748,
    2991,  -917,  3181,  -917,  2991,    63,  -917,  -917,  -917,  -917,
    -917,  -917,   576,  -917,  -917,  -917,  -917,   756,  -917,   741,
    -917,   508,   552,   784,  -917,   755,   672,   672,   672,  -917,
    -917,  1156,  3181,  3181,  3181,  3181,  3181,  3181,  3181,  3181,
    3181,  3181,  2991,  2611,  -917,  -917,  -917,  -917,  -917,  -917,
    -917,   758,   760,  3664,  -917,  3664,   798,   765,  -917,   765,
    -917,  3798,  -917,   759,  -917,   291,  -917,  -917,  3775,  -917,
    3775,   762,   764,  3181,   763,   899,   775,   776,   770,  2263,
     779,  2896,   780,  -917,  2263,   447,  -917,   786,   672,   -37,
    2263,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,
     576,  -917,  -917,  2991,  2706,  -917,  -917,   782,   785,  -917,
     579,    16,  -917,   812,  -917,  -917,  -917,  -917,  -917,  -917,
    -917,  -917,   795,  3611,  -917,   791,  -917,  -917,  -917,  -917,
    3611,   789,  -917,   812,  -917,  -917,   794,  -917,    68,  3611,
     672,   -34,   371,   672,   489,   -38,   792,  -917,   793,   797,
     913,   807,  -917,   -34,   807,   -34,   807,  -917,  -917,   452,
     452,   452,    78,    78,   614,   800,   799,   801,   806,   120,
    -917,  3505,  3505,   504,   606,  -917,  -917,  -917,  -917,  -917,
    -917,  -917,  2495,  2495,   802,  2263,   811,  -917,  -917,  2379,
     901,  2495,  -917,   138,   837,   815,   804,   805,  -917,    16,
     823,   819,  -917,  -917,  -917,   812,   332,  -917,  -917,   820,
    -917,   576,  -917,   -61,  -917,  -917,  3505,   818,  -917,  -917,
    3664,  3611,   851,   825,   826,  3181,  -917,  -917,  3611,  3181,
    -917,   821,    33,  3181,  3181,  -917,   672,  -917,  -917,  3181,
    -917,  -917,   908,  -917,   765,   155,   827,   828,  2263,  -917,
    -917,  2991,   672,   152,   836,   840,  -917,   848,  -917,  -917,
    -917,  -917,  -917,  -917,   672,  -917,  -917,  2801,   843,   812,
     140,  -917,  -917,   854,   853,  -917,   576,   511,   857,    68,
     812,  -917,  -917,   861,   862,   895,   858,  -917,  -917,   672,
     868,  -917,  -917,   407,   871,  2263,  2263,  -917,   155,   880,
     882,  2991,  2991,  2263,   883,  2263,  2263,  -917,  -917,  -917,
    -917,   879,  -917,   552,  3505,  -917,   812,  -917,   812,   -42,
     576,  -917,    33,  -917,  -917,  2991,   985,  -917,  2991,  2991,
     897,   334,  -917,  -917,  -917,  -917,   140,  -917,  -917,  -917,
    1026,   -23,   552,   812,  -917,  2263,   890,   902,  2991,   914,
    -917,  -917,   552,  -917,  -917,  -917,  2263,  2991,   891,  -917,
    -917,  -917,   893,  2263,  2263,  -917,  -917
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
    -917,  -917,  -917,  -917,   -19,  -447,   -87,  -917,  -917,  -917,
    -917,  -917,  -917,  -917,  -917,  -917,  -917,  -917,  -694,   319,
    -917,  -917,   439,   317,  -423,  -917,  -917,  -346,  -917,  -357,
    -917,  -917,  -670,  -917,  -917,  -917,  -917,  -917,  -352,  -130,
    -917,  -917,   388,  -635,  -429,  -917,  -917,   523,  -415,  -188,
     116,  -277,  -157,  -917,   329,  -917,   673,   516,   834,  -917,
    -917,  -917,  1335,  -917,  -917,  -917,  -187,  -917,   -22,  -239,
    -186,  -917,   -65,   -29,  -371,   136,  -219,   -84,  -917,  -917,
    -917,   431,  -293,  -917,   330,   -24,  -917,  -917,  -917,  -917,
    -917,  -848,  -917,  -904,  -421,  -917,  -917,  -917,   312,   558,
    -917,  -917,  -386,  -103,   971,  -917,   580,  -917,  -318,   372,
      45,   307,  -917,    58,  -917,    -9,  -917,   165,  -530,  -917,
     157,  -917,   146,  -917,   313,   442,   214,  -917,  -761,  -917,
     288,  -917,  -917,  -917,   778,   996,  -917,  -917,  -917,  -917,
    -917,  -917,  -283,  -917,  -917,  -917,   434,   440,   -40,  -917,
    -107,  -156,  -917,  -917,  1061,  1067,  -917,  -917,  -917,  -917,
    -917,  1071,   978,   331,   505,   519,  -159,   518,   889,   892,
     888,   904,   877,  -160,     6,  -917,    12,  -917,  -917,     0,
    -916,  -709,  -410,    13,   406,   411,   401,   413,   416,  -917,
    -917,   215,  -917,   662,   415,  -587,  -917,  -917,  -917,  -417,
     562,    44,  -917,  -917,  -917,  -917,  -917,  -917,  -634,  -917,
    -917,  -917,  -917,   373
};

/* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule which
   number is the opposite.  If zero, do what YYDEFACT says.
   If YYTABLE_NINF, syntax error.  */
#define YYTABLE_NINF -574
static const yytype_int16 yytable[] =
{
      81,   242,   239,   109,   178,   270,   542,   536,   537,   334,
     108,   572,   342,   878,   510,   305,   562,   510,   510,   382,
     171,   721,   722,   430,   452,   106,   811,   823,   825,   843,
     495,   516,   518,   535,   854,   567,   563,   330,     2,   687,
       2,   635,   302,   202,   179,     2,     2,   803,   699,   102,
     353,   354,   355,   356,     2,  1000,   635,   229,   194,   195,
     196,   103,   266,   266,   266,   266,     2,   310,     2,   902,
    -272,   630,   383,     2,   266,     2,   711,   287,   265,   267,
     268,   269,  1016,  1017,   637,  1012,   645,   940,   451,  -281,
     337,   631,   982,   462,   873,   646,   311,   647,   498,   233,
     702,   703,  1028,   895,   209,   210,   940,  1022,  -280,   104,
    -219,  1032,   287,   105,   178,   287,   178,   266,   266,   266,
     266,   673,   572,   566,   271,   940,   266,   266,   112,   266,
     279,   572,   280,   510,   156,   875,   510,   382,   322,   570,
     894,   441,   237,   900,    35,     2,    35,   634,   684,   685,
     641,    35,   375,   636,   179,     2,   281,   178,  1020,   184,
     494,     2,   327,   498,   203,   204,   191,   564,   636,   326,
     302,   828,   302,   336,    35,   377,   978,   331,   231,   494,
     170,   494,   331,   377,   192,  -573,   952,   376,   492,   197,
     697,   198,   728,   384,   957,   958,   947,   712,   341,   509,
     199,   307,   509,   509,   271,   271,   651,   418,   109,   340,
     331,   778,   704,   483,   193,   108,   211,   212,   390,   917,
     661,   233,   238,   419,   323,   233,   322,   925,   463,   777,
     692,   364,   109,   451,   205,   206,   960,   481,   264,   264,
     264,   264,   215,   233,   365,   366,   939,   237,   480,   407,
     264,    35,   408,   530,   572,   507,   233,   459,   507,   507,
     440,    35,   801,   216,   430,    33,    34,    35,   909,   926,
     217,   807,   545,   510,   233,   322,   322,   322,   322,   322,
     322,   218,   322,   971,   486,   452,   441,   781,   233,   993,
     170,   233,   170,   264,   264,   264,   264,   286,   185,   544,
     187,   188,   264,   264,   234,   264,   673,   442,   236,   384,
      -8,   986,   243,   584,   584,   295,   296,   633,   509,   233,
     384,   509,   417,   384,   384,   200,   201,    -7,   185,   186,
     187,   188,   286,   170,   274,   286,   549,   382,   550,   188,
     233,   441,    82,   785,   277,   109,   451,   451,    86,   451,
     523,   185,   502,   187,   188,  1013,   189,   696,   190,    82,
     465,   466,   467,   468,   469,   470,   445,   471,   446,   679,
     680,   887,   681,   327,   507,   275,   994,   507,   885,   390,
     893,   271,   440,   440,   549,   186,   550,   188,   276,   694,
     896,   297,   298,   299,   385,   447,   448,   449,    -9,    83,
     560,   278,   907,   233,   908,   440,   786,   547,    82,   510,
     233,   544,   289,   787,   544,    -9,    83,   648,   649,   529,
     650,   271,   233,   882,   294,   788,   295,   296,   500,    84,
     501,   883,   178,   178,   551,   633,   552,   108,   384,   384,
      85,   368,   384,    -8,   616,   850,    84,   851,   327,   324,
      86,   889,   442,   625,   325,   326,   633,    85,   509,   514,
     440,   639,   948,   605,    -9,    83,   617,    86,   407,   953,
     233,   936,   806,  1019,   327,   440,   716,   717,   718,   441,
     523,   523,   369,   523,   335,   729,   272,   343,   370,   954,
     603,   964,   371,   604,   735,    84,   671,   441,   672,   372,
     440,   440,   297,   298,   299,   373,    85,   442,   485,   898,
     402,   899,   441,     2,   507,   403,    86,   560,   560,   547,
     560,   404,   547,   935,   676,   652,   653,   654,   655,   282,
     283,   284,   285,   346,   347,   348,   390,   409,   291,   292,
     300,   293,   301,   829,   830,   831,   584,   584,   584,   584,
     584,   584,   584,   676,   584,   405,   384,   207,   208,   406,
     326,     2,  1007,   572,    82,   389,   413,   616,   598,   599,
     600,   601,   185,   866,   867,   188,   731,   384,   414,   384,
     213,   214,   625,   441,     2,   740,   421,   980,   415,   178,
     416,  1023,   327,   547,   509,   554,   555,   729,   989,   729,
     440,  1030,   456,   295,   296,   735,   457,   439,   170,   170,
     447,   448,   449,   779,   185,   901,   187,   188,   450,   407,
      -9,    83,   662,   663,   705,   706,   724,   725,   310,   623,
     244,   818,   818,   818,  1009,   474,  1011,   475,    82,   912,
     725,   477,   245,   246,   247,   442,   987,   725,   776,   478,
     507,    84,   482,   326,   479,   248,  -457,   249,   250,   251,
     252,  1024,    85,   789,   487,    -7,   876,   819,   819,   819,
     677,   678,    86,   178,   816,   816,   816,     2,   442,   297,
     298,   299,   799,   616,   498,   616,   802,   253,   824,   826,
      35,   731,   503,   384,    -9,    83,   295,   296,   740,   254,
     740,   517,   519,     2,   514,   547,   524,   547,   531,   178,
     349,   350,   839,   525,   178,   384,   633,   504,   832,   833,
     178,   377,   295,   296,   526,    84,   351,   352,   527,   439,
     439,   357,   358,   528,   540,   441,    85,   538,  -156,   441,
     539,   548,   553,   441,   441,   384,    86,   568,   384,   789,
     584,   863,   439,   440,   561,   582,   606,   913,   623,   618,
     440,   620,   621,   626,   627,   170,   628,   642,   643,   440,
       2,   656,   297,   298,   299,   262,   262,   262,   262,   676,
     644,   660,   657,    35,   729,   271,   776,   262,   658,   295,
     296,   659,   675,   860,  -154,  -155,   689,   683,   297,   298,
     299,   266,   266,   670,   674,   690,   633,   439,   682,    35,
     810,   700,   178,   178,   377,   178,   432,   910,   911,   178,
     688,   178,   439,   432,   701,   707,   708,   709,   432,   713,
     262,   262,   262,   262,   710,   714,   541,   818,   301,   262,
     262,   818,   262,  -459,   715,   719,   266,   439,   439,   170,
     616,   440,   915,   915,   723,   726,   239,   384,   440,   923,
     732,   915,   945,     7,     8,   297,   298,   299,   733,   384,
     770,   771,   772,   956,   773,   805,    35,   819,   178,   783,
     326,   784,   793,   698,   816,   170,   795,   798,    25,   804,
     170,   808,   547,   809,   384,   841,   170,   842,   848,   919,
     852,   789,   853,   727,   856,   442,   857,   858,   859,   789,
     789,   855,    38,    39,    40,    41,    42,   861,   864,   868,
     327,   968,   239,   880,   881,   178,   178,   818,   884,   886,
     888,   380,   891,   178,   262,   178,   178,   905,   432,   432,
     903,  -172,   920,   906,   266,   904,   924,   439,   928,   776,
     918,   927,   929,   930,   933,   934,   937,   946,   949,   963,
    1008,   432,   967,   327,   950,   951,   965,   966,   432,  -171,
     326,   968,  1001,   431,   972,   178,   979,   264,   264,   973,
     431,    98,    99,   100,   101,   460,   178,   974,   170,   170,
     984,   170,   985,   178,   178,   170,   988,   170,   968,   968,
     990,   758,   992,   991,   476,   895,  -220,  1014,   995,   996,
     997,   998,   116,   999,  1003,  1006,   432,  1002,   968,  1004,
    1005,  1015,   264,   180,   181,   182,   183,   968,  1018,  1026,
    1033,   432,  1034,  1027,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   845,  1029,   720,   380,   847,   262,
     497,   229,   794,   734,   170,   846,   432,   432,   380,  1025,
     571,   380,   380,   668,   640,   849,   865,   258,  1021,   619,
    1031,   961,   245,   246,   247,   262,   238,  1035,  1036,   970,
     977,   432,   432,   932,   432,   248,   782,   249,   250,   251,
     252,   464,   432,   260,   792,   431,   431,   155,   791,   110,
     439,   170,   170,   111,   359,   361,   363,   439,   360,   170,
     836,   170,   170,   834,    -9,    83,   439,   253,   431,   835,
     264,   758,   362,   837,   962,   431,   758,   838,   840,   254,
     686,     0,   758,   874,   433,   597,     0,     0,     0,     0,
       0,   433,   238,     0,     0,     0,   433,     0,     0,     0,
       0,   170,     0,     0,     0,     0,   432,     0,     0,   230,
       0,     0,   170,     0,     0,     0,   262,     0,     0,   170,
     170,     0,   231,   431,     0,     0,   380,   380,   344,   345,
     380,     0,     0,     0,     0,     0,     0,     0,   431,     0,
     571,     0,     0,     0,     0,     0,     0,     0,   439,     0,
       0,     0,   245,   246,   247,   439,     0,   432,     0,     0,
     447,   448,   449,   431,   460,   248,     0,   249,   250,   251,
     252,     0,     0,     0,   914,   914,   262,   758,     0,     0,
       0,   922,     0,   914,     0,     0,     0,     0,   431,   431,
       0,   431,     0,     0,    -9,    83,     0,   253,     0,   431,
       0,     0,   412,   391,     0,     0,   433,   433,     0,   254,
       0,     0,     0,     0,     0,   392,   393,   394,     0,     0,
       0,     0,   420,     0,     0,     0,     0,     0,   395,   433,
     396,   397,   398,   399,     0,     0,   433,     0,     0,  -356,
     758,     0,     0,     0,   380,   262,     0,     0,     0,     0,
     262,     0,   755,     0,     0,     0,     0,     0,     0,   432,
     400,     0,     0,   431,     0,   380,   432,   380,     0,     0,
       0,     0,   401,     0,     0,   432,     0,     0,     0,     0,
       0,     0,     0,     0,   433,     0,     0,   758,   758,     0,
       0,     0,     0,     0,     0,   758,     0,   758,   758,   433,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   431,     0,     0,     0,     0,   814,
     814,   814,     0,     0,   433,   433,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   758,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   758,   433,
     433,     0,   433,     0,     0,   758,   758,   432,     0,     0,
     433,     0,     0,     0,   432,     0,     0,     0,     0,     0,
       0,     0,   755,     0,     0,     0,     0,   755,     0,     0,
       0,   380,     0,   755,     0,     0,     0,   263,   263,   263,
     263,     0,     0,     0,     0,     0,     0,     0,     0,   263,
       0,     0,     0,   380,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     2,     0,   431,     0,     0,     0,
       0,     0,     0,   431,   433,     0,     0,     0,     0,     0,
       0,   262,   431,   380,     0,     0,   380,     0,     0,     0,
       0,     0,   263,   263,   263,   263,     0,     0,     0,     0,
       0,   263,   263,     0,   263,     0,     0,     0,   161,   162,
     163,   164,   165,     0,   262,   262,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   433,     0,     0,   755,     0,
       0,   332,     0,     0,   332,    14,    15,    16,    17,    18,
     168,    19,    20,    21,    22,    23,    24,     0,     0,     0,
       0,     0,    26,    27,    28,    29,    30,    31,     0,   262,
       0,     0,     0,     0,   431,     0,   374,     0,     0,     0,
     375,   431,     0,     0,     0,   814,     0,     0,     0,   814,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   755,     0,   381,     0,   380,   263,   376,     0,     0,
       0,   377,     0,     0,     0,     0,     0,   380,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   262,     0,     0,     0,     0,   433,     0,     0,
       0,     0,   380,     0,   433,   435,     0,     0,   755,   755,
       0,   315,   435,   433,     0,     0,   755,   461,   755,   755,
       0,     0,     0,   316,   317,   318,     0,   262,     0,     0,
       0,     0,     0,     0,     0,   814,   319,     0,   320,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    14,    15,    16,    17,    18,   755,    19,
      20,    21,    22,    23,    24,     0,     0,     0,     0,   755,
      26,    27,    28,    29,    30,    31,   755,   755,     0,   491,
       0,   496,     0,     0,     0,     0,     0,     0,     0,     0,
     508,     0,     0,   508,   508,   433,     2,     0,     0,     0,
       0,     0,   433,     0,     0,     0,     0,   263,     0,     0,
       0,     0,     0,     0,     0,   193,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   435,   435,     0,
       0,     0,     0,     0,   546,     0,     0,     0,     0,     0,
     161,   162,   163,   164,   165,     0,     0,     0,     0,     0,
     435,     0,     0,     0,     0,     0,     0,   435,     0,     0,
       0,     0,     0,     0,   546,     0,     0,    14,    15,    16,
      17,    18,   168,    19,    20,    21,    22,    23,    24,     0,
       0,     0,   332,     0,    26,    27,    28,    29,    30,    31,
       0,     0,     0,     0,     0,     0,     0,     0,   263,     0,
       0,     0,   494,     0,     0,   435,     0,     0,   381,   508,
       0,     0,   508,     0,     0,     0,     0,     0,     0,     0,
     435,     0,     0,     0,     0,   691,     0,     0,     0,   376,
       0,     0,     0,   331,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   435,   461,     0,     0,   546,
       0,     0,     0,     0,     0,     0,     0,     0,   263,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     435,   435,     0,   435,     0,     0,     0,     0,     0,     0,
       0,   693,     0,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,     0,     0,     0,     0,     0,   315,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     546,   316,   317,   318,     0,     0,   491,   263,     0,     0,
       0,     0,   496,     0,   319,     0,   320,     0,     0,     0,
       0,     0,     0,     0,     0,   435,     0,   491,     0,   508,
       0,    14,    15,    16,    17,    18,     0,    19,    20,    21,
      22,    23,    24,     1,     2,     0,     3,     4,    26,    27,
      28,    29,    30,    31,     0,     0,     0,     0,     0,     0,
     546,   138,   139,     5,     6,   140,   141,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   435,     0,     0,     0,
       0,   815,   815,   815,     0,     0,     0,     0,     0,     0,
     142,   143,     0,   144,   145,     0,   146,     0,   147,   148,
     149,   150,   151,   152,     7,     8,     0,     9,    10,    11,
      12,     0,   546,    13,   546,    14,    15,    16,    17,    18,
       0,    19,    20,    21,    22,    23,    24,     0,     0,    25,
       0,     0,    26,    27,    28,    29,    30,    31,     0,     0,
       0,     0,     0,   508,     0,     0,    32,     0,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,     0,     0,
       2,    43,     0,     0,     0,   508,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    44,   435,   295,
     296,    45,    46,    47,     0,   435,    48,     0,     0,     0,
       0,     0,     0,   892,   435,   508,     0,     0,   508,     0,
       0,   422,   423,     0,   161,   162,   163,   164,   165,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   263,   263,     0,     0,
       0,    14,    15,    16,    17,    18,   168,    19,    20,    21,
      22,    23,    24,     0,     0,     0,     0,     0,    26,    27,
      28,    29,    30,    31,     0,   297,   298,   299,   424,     0,
       0,     0,     0,     0,     0,     0,    35,     0,     0,     0,
       0,   263,     0,     0,     0,     0,   435,     0,     0,     0,
       0,     0,     0,   435,     0,     0,     0,   955,     0,     0,
       0,   815,     0,   541,     0,   301,     0,     0,     0,   546,
       0,     0,     0,     0,     0,     0,     0,   508,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     2,   508,
       3,     4,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   892,     0,     0,     5,     6,     0,
       0,     0,     0,     0,   508,     0,     0,   157,   741,     0,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   158,
     159,   160,   161,   162,   163,   164,   165,     0,     0,   263,
       0,     0,   166,     0,   167,     0,     0,   955,     7,     8,
       0,     9,    10,    11,    12,   751,     0,    13,     0,    14,
      15,    16,    17,    18,   168,    19,    20,    21,    22,    23,
      24,     0,     0,    25,   169,     0,    26,    27,    28,    29,
      30,    31,     0,     0,     0,     0,     0,   752,     0,     0,
      32,     0,    33,    34,    35,    36,    37,    38,    39,    40,
      41,    42,     0,     0,     2,    43,     3,     4,     0,     0,
       0,     0,     0,     0,   753,   754,     0,     0,     0,     0,
       0,    44,     0,     5,     6,    45,    46,    47,     0,     0,
      48,     0,     0,   157,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   158,   159,   160,   161,   162,
     163,   164,   165,     0,     0,     0,     0,     0,   166,     0,
     167,     0,     0,     0,     7,     8,     0,     9,    10,    11,
      12,     0,     0,    13,     0,    14,    15,    16,    17,    18,
     168,    19,    20,    21,    22,    23,    24,     0,     0,    25,
     169,     0,    26,    27,    28,    29,    30,    31,     0,     0,
       0,     0,     0,     0,     0,     0,    32,     0,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,     0,     0,
       2,    43,     3,     4,     0,     0,     0,     0,     0,     0,
     921,     0,     0,     0,     0,     0,     0,    44,     0,     5,
       6,    45,    46,    47,     0,     0,    48,     0,     0,   157,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,     0,
       0,     0,     0,     0,   166,     0,   167,     0,     0,     0,
       7,     8,     0,     9,    10,    11,    12,     0,     0,    13,
       0,    14,    15,    16,    17,    18,   168,    19,    20,    21,
      22,    23,    24,     0,     0,    25,   169,     0,    26,    27,
      28,    29,    30,    31,     0,     0,     0,     0,     0,     0,
       0,     0,    32,     0,    33,    34,    35,    36,    37,    38,
      39,    40,    41,    42,     0,     0,     2,    43,     3,     4,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    44,     0,     5,     6,    45,    46,    47,
       0,     0,    48,     0,     0,   157,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   158,   159,   160,
     161,   162,   163,   164,   165,     0,     0,     0,     0,     0,
     166,     0,   167,     0,     0,     0,     7,     8,     0,     9,
      10,    11,    12,     0,     0,     0,     0,    14,    15,    16,
      17,    18,   168,    19,    20,    21,    22,    23,    24,     0,
       0,    25,   169,     0,    26,    27,    28,    29,    30,    31,
       0,     2,     0,     3,     4,     0,     0,     0,    32,     0,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
       5,     6,     0,    43,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
       0,     0,     0,    45,    46,    47,     0,     0,    48,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     7,     8,     0,     9,    10,    11,    12,     0,     0,
      13,     0,    14,    15,    16,    17,    18,     0,    19,    20,
      21,    22,    23,    24,     0,     0,    25,     0,     0,    26,
      27,    28,    29,    30,    31,     0,     2,     0,     3,     4,
       0,     0,     0,    32,     0,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,     5,     6,     0,    43,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   774,   877,
       0,     0,     0,     0,    44,     0,     0,     0,    45,    46,
      47,     0,     0,    48,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     7,     8,     0,     9,
      10,    11,    12,     0,     0,    13,     0,    14,    15,    16,
      17,    18,     0,    19,    20,    21,    22,    23,    24,     0,
       0,    25,     0,     0,    26,    27,    28,    29,    30,    31,
       0,     2,     0,     3,     4,     0,     0,     0,    32,     0,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
       5,     6,     0,    43,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   774,     0,     0,     0,     0,     0,    44,
       0,     0,     0,    45,    46,    47,     0,     0,    48,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     7,     8,     0,     9,    10,    11,    12,     0,     0,
      13,     0,    14,    15,    16,    17,    18,     0,    19,    20,
      21,    22,    23,    24,     0,     0,    25,     0,     0,    26,
      27,    28,    29,    30,    31,     0,     2,     0,     3,     4,
       0,     0,     0,    32,     0,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,     5,     6,     0,    43,     0,
       0,     0,     0,     0,     0,     0,     0,   862,     0,     0,
       0,     0,     0,     0,    44,     0,     0,     0,    45,    46,
      47,     0,     0,    48,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     7,     8,     0,     9,
      10,    11,    12,     0,     0,    13,     0,    14,    15,    16,
      17,    18,     0,    19,    20,    21,    22,    23,    24,     0,
       0,    25,     0,     0,    26,    27,    28,    29,    30,    31,
       0,     2,     0,     3,     4,     0,     0,     0,    32,     0,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
       5,     6,     0,    43,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
       0,     0,     0,    45,    46,    47,     0,     0,    48,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     7,     8,     0,     9,    10,    11,    12,     0,     0,
       0,     0,    14,    15,    16,    17,    18,     0,    19,    20,
      21,    22,    23,    24,     0,     0,    25,     0,     0,    26,
      27,    28,    29,    30,    31,     0,     2,     0,     3,     4,
       0,     0,     0,    32,     0,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,     5,     6,     0,    43,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    44,     0,   115,     0,    45,    46,
      47,     0,     0,    48,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     7,     8,     0,     9,
      10,    11,    12,     0,     0,     0,     0,    14,    15,    16,
      17,    18,     0,    19,    20,    21,    22,    23,    24,     0,
       0,    25,     0,     0,    26,    27,    28,    29,    30,    31,
       0,     2,     0,     3,     4,     0,     0,     0,    32,     0,
      33,    34,    35,    36,    37,    38,    39,    40,    41,    42,
       5,     6,     0,    43,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    44,
       0,     0,     0,    45,    46,    47,     0,     0,    48,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     7,     8,     0,     9,    10,    11,    12,     0,     0,
       0,     0,    14,    15,    16,    17,    18,     0,    19,    20,
      21,    22,    23,    24,     0,     0,    25,     0,     0,    26,
      27,    28,    29,    30,    31,     0,     0,     0,     0,     0,
       2,     0,     0,    32,     0,    33,    34,    35,    36,    37,
      38,    39,    40,    41,    42,     0,     0,     0,    43,   295,
     296,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   154,     0,     0,     0,    45,    46,
      47,   422,   423,    48,   161,   162,   163,   164,   165,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     2,     0,     0,     0,     0,
       0,    14,    15,    16,    17,    18,   168,    19,    20,    21,
      22,    23,    24,     0,     0,     0,     0,     0,    26,    27,
      28,    29,    30,    31,     0,   297,   298,   299,   424,     0,
       0,     0,     0,     0,     0,     0,   422,   423,     0,   161,
     162,   163,   164,   165,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       2,     0,     0,   300,     0,   301,    14,    15,    16,    17,
      18,   168,    19,    20,    21,    22,    23,    24,     0,     0,
       0,     0,     0,    26,    27,    28,    29,    30,    31,   157,
       0,     0,     0,   424,     0,     0,     0,     0,   667,     0,
       0,   158,   159,   160,   161,   162,   163,   164,   165,     0,
       0,     0,     0,     2,   166,     0,   167,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    14,    15,    16,    17,    18,   168,    19,    20,    21,
      22,    23,    24,     0,     0,     0,   169,     0,    26,    27,
      28,    29,    30,    31,   622,     0,     0,     0,     0,     0,
       0,     0,   261,     0,     0,     0,     2,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    14,    15,    16,    17,    18,     0,
      19,    20,    21,    22,    23,    24,     0,     0,     0,     0,
       0,    26,    27,    28,    29,    30,    31,   422,   423,     0,
     161,   162,   163,   164,   165,   261,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    14,    15,    16,
      17,    18,   168,    19,    20,    21,    22,    23,    24,     0,
       0,     0,     0,     0,    26,    27,    28,    29,    30,    31,
     607,     0,     0,   608,   424,   609,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   520,   521,     0,     0,     0,     0,     0,
      14,    15,    16,    17,    18,     0,    19,    20,    21,    22,
      23,    24,   610,     0,     0,     0,     0,    26,    27,    28,
      29,    30,    31,    14,    15,    16,    17,    18,     0,    19,
      20,    21,    22,    23,    24,   557,   558,     0,     0,     0,
      26,    27,    28,    29,    30,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   607,     0,
       0,     0,     0,     0,     0,    14,    15,    16,    17,    18,
       0,    19,    20,    21,    22,    23,    24,     0,     0,     0,
       0,   738,    26,    27,    28,    29,    30,    31,    14,    15,
      16,    17,    18,     0,    19,    20,    21,    22,    23,    24,
       0,     0,     0,     0,     0,    26,    27,    28,    29,    30,
      31,    14,    15,    16,    17,    18,     0,    19,    20,    21,
      22,    23,    24,     0,     0,     0,     0,     0,    26,    27,
      28,    29,    30,    31,    14,    15,    16,    17,    18,     0,
      19,    20,    21,    22,    23,    24,     0,     0,     0,     0,
       0,    26,    27,    28,    29,    30,    31
};

static const yytype_int16 yycheck[] =
{
       0,    88,    86,    32,    44,   112,   429,   422,   423,   196,
      32,   458,   199,   774,   385,   172,   445,   388,   389,   258,
      44,   608,   609,   300,   307,    13,   696,   697,   698,   723,
     376,   388,   389,   419,   743,   452,   446,   193,     5,   569,
       5,    25,   172,    24,    44,     5,     5,   682,   578,   134,
     209,   210,   211,   212,     5,   971,    25,    29,     7,     8,
       9,   134,   102,   103,   104,   105,     5,   103,     5,   107,
     131,   500,   258,     5,   114,     5,    29,   161,   102,   103,
     104,   105,   998,   999,   505,   989,   515,   148,   307,   131,
     197,   501,   940,   312,   131,   516,   132,   518,   132,   136,
      22,    23,  1018,   137,    22,    23,   148,  1011,   131,   134,
     148,  1027,   196,   134,   154,   199,   156,   157,   158,   159,
     160,   544,   569,    62,   112,   148,   166,   167,   138,   169,
     154,   578,   156,   504,   138,   770,   507,   376,   178,   457,
     810,   301,   107,   813,   111,     5,   111,   504,   565,   566,
     507,   111,   111,   137,   154,     5,   156,   197,  1006,     0,
     111,     5,   191,   132,   145,   146,   107,   450,   137,   191,
     300,   701,   302,   197,   111,   142,   937,   142,   150,   111,
      44,   111,   142,   142,   138,   132,   895,   138,   374,   138,
     576,   140,   615,   258,   903,   904,   890,   150,   198,   385,
     149,   148,   388,   389,   192,   193,   524,   132,   237,   197,
     142,   640,   134,   369,   138,   237,   134,   135,   258,   853,
     538,   136,    86,   148,   139,   136,   266,   861,   312,   639,
     576,   231,   261,   452,   143,   144,   906,   148,   102,   103,
     104,   105,    25,   136,   232,   233,   881,   107,   141,   136,
     114,   111,   139,   409,   701,   385,   136,   107,   388,   389,
     300,   111,   672,    27,   541,   109,   110,   111,   148,   131,
      26,   692,   429,   644,   136,   315,   316,   317,   318,   319,
     320,    28,   322,   131,   371,   568,   446,   644,   136,   959,
     154,   136,   156,   157,   158,   159,   160,   161,   125,   429,
     127,   128,   166,   167,     5,   169,   729,   301,   114,   374,
       0,   946,    88,   472,   473,    24,    25,   503,   504,   136,
     385,   507,   139,   388,   389,    30,    31,     0,   125,   126,
     127,   128,   196,   197,   141,   199,   125,   576,   127,   128,
     136,   501,    32,   139,   139,   374,   565,   566,   140,   568,
     390,   125,   126,   127,   128,   990,   125,   576,   127,    32,
     315,   316,   317,   318,   319,   320,   138,   322,   140,   557,
     558,   800,   560,   402,   504,   140,   963,   507,   793,   419,
     809,   369,   422,   423,   125,   126,   127,   128,   140,   576,
     811,   100,   101,   102,   258,    54,    55,    56,    88,    89,
     440,   141,   823,   136,   825,   445,   139,   429,    32,   780,
     136,   541,     5,   139,   544,    88,    89,   520,   521,   407,
     523,   409,   136,   780,   139,   139,    24,    25,   138,   119,
     140,   783,   472,   473,   125,   621,   127,   459,   503,   504,
     130,   141,   507,   133,   484,   738,   119,   740,   477,   134,
     140,   803,   446,   493,   134,   477,   642,   130,   644,   138,
     500,   140,   891,   482,    88,    89,   485,   140,   136,   898,
     136,   139,   691,   139,   503,   515,   125,   126,   127,   639,
     520,   521,   138,   523,   196,   615,   114,   199,   134,   899,
     478,   914,   114,   481,   624,   119,   138,   657,   140,   138,
     540,   541,   100,   101,   102,   131,   130,   501,   132,   138,
     107,   140,   672,     5,   644,   135,   140,   557,   558,   541,
     560,   135,   544,   875,   553,   525,   526,   527,   528,   157,
     158,   159,   160,   202,   203,   204,   576,   138,   166,   167,
     138,   169,   140,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   582,   713,   135,   621,   105,   106,   135,
     582,     5,   983,  1010,    32,   258,   141,   607,   125,   126,
     127,   128,   125,   126,   127,   128,   616,   642,   141,   644,
      10,    11,   622,   743,     5,   625,    46,   939,   139,   629,
     139,  1012,   621,   615,   780,    46,    47,   727,   950,   729,
     640,  1022,   132,    24,    25,   735,   138,   300,   472,   473,
      54,    55,    56,   642,   125,   126,   127,   128,    62,   136,
      88,    89,    46,    47,    10,    11,   135,   136,   103,   493,
      34,   696,   697,   698,   986,   139,   988,   139,    32,   135,
     136,   107,    46,    47,    48,   639,   135,   136,   636,   136,
     780,   119,   132,   675,   139,    59,   139,    61,    62,    63,
      64,  1013,   130,   657,     5,   133,   773,   696,   697,   698,
     554,   555,   140,   713,   696,   697,   698,     5,   672,   100,
     101,   102,   670,   723,   132,   725,   674,    91,   697,   698,
     111,   731,   107,   758,    88,    89,    24,    25,   738,   103,
     740,   388,   389,     5,   138,   727,   138,   729,     5,   749,
     205,   206,   712,   138,   754,   780,   902,   138,   705,   706,
     760,   142,    24,    25,   138,   119,   207,   208,   138,   422,
     423,   213,   214,   138,   136,   895,   130,   138,   107,   899,
     139,   139,   107,   903,   904,   810,   140,   136,   813,   743,
     909,   751,   445,   793,   141,   107,   139,   844,   622,   138,
     800,   139,   107,   139,   107,   629,   126,   107,    24,   809,
       5,   139,   100,   101,   102,   102,   103,   104,   105,   808,
     136,   132,   137,   111,   914,   773,   774,   114,   136,    24,
      25,   133,   107,   749,   107,   107,    88,   141,   100,   101,
     102,   841,   842,   137,   137,   131,   992,   500,   139,   111,
     138,   133,   852,   853,   142,   855,   300,   841,   842,   859,
     139,   861,   515,   307,   148,    25,    27,    26,   312,   136,
     157,   158,   159,   160,    28,   135,   138,   902,   140,   166,
     167,   906,   169,   139,   135,   133,   886,   540,   541,   713,
     890,   891,   852,   853,   134,   137,   940,   922,   898,   859,
     133,   861,   886,    65,    66,   100,   101,   102,   117,   934,
     139,   141,   139,   902,   138,   134,   111,   906,   918,   139,
     902,   139,   139,   576,   906,   749,    74,   139,    90,   133,
     754,   107,   914,   138,   959,   137,   760,   137,   139,   855,
     138,   895,   138,   138,     5,   899,   131,   131,   138,   903,
     904,   148,   114,   115,   116,   117,   118,   138,   138,   133,
     949,   921,  1006,   141,   139,   965,   966,   992,   133,   138,
     141,   258,   138,   973,   261,   975,   976,    24,   422,   423,
     148,   148,   131,   136,   984,   148,    45,   640,   133,   937,
     148,   114,   148,   148,   131,   136,   136,   139,   107,    51,
     984,   445,   918,   992,   139,   139,   139,   139,   452,   148,
     992,   971,   972,   300,   138,  1015,   133,   841,   842,   139,
     307,     3,     4,     5,     6,   312,  1026,   139,   852,   853,
     136,   855,   139,  1033,  1034,   859,   139,   861,   998,   999,
     139,   629,   107,   141,   331,   137,   148,   995,   137,   965,
     966,   131,    34,   131,   131,   136,   500,   973,  1018,   975,
     976,    36,   886,    45,    46,    47,    48,  1027,   131,   139,
     139,   515,   139,   131,    12,    13,    14,    15,    16,    17,
      18,    19,    20,    21,   725,   131,   607,   374,   731,   376,
     377,    29,   664,   622,   918,   726,   540,   541,   385,  1015,
      34,   388,   389,   540,   506,   735,   754,    96,  1010,   489,
    1026,   906,    46,    47,    48,   402,   940,  1033,  1034,   922,
     934,   565,   566,   869,   568,    59,   644,    61,    62,    63,
      64,   313,   576,    97,   660,   422,   423,    36,   658,    32,
     793,   965,   966,    32,   215,   217,   229,   800,   216,   973,
     709,   975,   976,   707,    88,    89,   809,    91,   445,   708,
     984,   749,   218,   710,   909,   452,   754,   711,   713,   103,
     568,    -1,   760,   760,   300,   473,    -1,    -1,    -1,    -1,
      -1,   307,  1006,    -1,    -1,    -1,   312,    -1,    -1,    -1,
      -1,  1015,    -1,    -1,    -1,    -1,   640,    -1,    -1,   137,
      -1,    -1,  1026,    -1,    -1,    -1,   493,    -1,    -1,  1033,
    1034,    -1,   150,   500,    -1,    -1,   503,   504,   200,   201,
     507,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   515,    -1,
      34,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   891,    -1,
      -1,    -1,    46,    47,    48,   898,    -1,   691,    -1,    -1,
      54,    55,    56,   540,   541,    59,    -1,    61,    62,    63,
      64,    -1,    -1,    -1,   852,   853,   553,   855,    -1,    -1,
      -1,   859,    -1,   861,    -1,    -1,    -1,    -1,   565,   566,
      -1,   568,    -1,    -1,    88,    89,    -1,    91,    -1,   576,
      -1,    -1,   274,    34,    -1,    -1,   422,   423,    -1,   103,
      -1,    -1,    -1,    -1,    -1,    46,    47,    48,    -1,    -1,
      -1,    -1,   294,    -1,    -1,    -1,    -1,    -1,    59,   445,
      61,    62,    63,    64,    -1,    -1,   452,    -1,    -1,   133,
     918,    -1,    -1,    -1,   621,   622,    -1,    -1,    -1,    -1,
     627,    -1,   629,    -1,    -1,    -1,    -1,    -1,    -1,   793,
      91,    -1,    -1,   640,    -1,   642,   800,   644,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   809,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   500,    -1,    -1,   965,   966,    -1,
      -1,    -1,    -1,    -1,    -1,   973,    -1,   975,   976,   515,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   691,    -1,    -1,    -1,    -1,   696,
     697,   698,    -1,    -1,   540,   541,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1015,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1026,   565,
     566,    -1,   568,    -1,    -1,  1033,  1034,   891,    -1,    -1,
     576,    -1,    -1,    -1,   898,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   749,    -1,    -1,    -1,    -1,   754,    -1,    -1,
      -1,   758,    -1,   760,    -1,    -1,    -1,   102,   103,   104,
     105,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   114,
      -1,    -1,    -1,   780,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     5,    -1,   793,    -1,    -1,    -1,
      -1,    -1,    -1,   800,   640,    -1,    -1,    -1,    -1,    -1,
      -1,   808,   809,   810,    -1,    -1,   813,    -1,    -1,    -1,
      -1,    -1,   157,   158,   159,   160,    -1,    -1,    -1,    -1,
      -1,   166,   167,    -1,   169,    -1,    -1,    -1,    49,    50,
      51,    52,    53,    -1,   841,   842,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   691,    -1,    -1,   855,    -1,
      -1,   196,    -1,    -1,   199,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    -1,    -1,    -1,
      -1,    -1,    93,    94,    95,    96,    97,    98,    -1,   886,
      -1,    -1,    -1,    -1,   891,    -1,   107,    -1,    -1,    -1,
     111,   898,    -1,    -1,    -1,   902,    -1,    -1,    -1,   906,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   918,    -1,   258,    -1,   922,   261,   138,    -1,    -1,
      -1,   142,    -1,    -1,    -1,    -1,    -1,   934,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   949,    -1,    -1,    -1,    -1,   793,    -1,    -1,
      -1,    -1,   959,    -1,   800,   300,    -1,    -1,   965,   966,
      -1,    34,   307,   809,    -1,    -1,   973,   312,   975,   976,
      -1,    -1,    -1,    46,    47,    48,    -1,   984,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   992,    59,    -1,    61,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    76,    77,    78,    79,    80,  1015,    82,
      83,    84,    85,    86,    87,    -1,    -1,    -1,    -1,  1026,
      93,    94,    95,    96,    97,    98,  1033,  1034,    -1,   374,
      -1,   376,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     385,    -1,    -1,   388,   389,   891,     5,    -1,    -1,    -1,
      -1,    -1,   898,    -1,    -1,    -1,    -1,   402,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   422,   423,    -1,
      -1,    -1,    -1,    -1,   429,    -1,    -1,    -1,    -1,    -1,
      49,    50,    51,    52,    53,    -1,    -1,    -1,    -1,    -1,
     445,    -1,    -1,    -1,    -1,    -1,    -1,   452,    -1,    -1,
      -1,    -1,    -1,    -1,   459,    -1,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    -1,
      -1,    -1,   477,    -1,    93,    94,    95,    96,    97,    98,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   493,    -1,
      -1,    -1,   111,    -1,    -1,   500,    -1,    -1,   503,   504,
      -1,    -1,   507,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     515,    -1,    -1,    -1,    -1,   134,    -1,    -1,    -1,   138,
      -1,    -1,    -1,   142,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   540,   541,    -1,    -1,   544,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   553,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     565,   566,    -1,   568,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   576,    -1,     7,     8,     9,    10,    11,    12,    13,
      14,    15,    16,    17,    18,    19,    20,    21,    22,    23,
      24,    25,    26,    27,    -1,    -1,    -1,    -1,    -1,    34,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     615,    46,    47,    48,    -1,    -1,   621,   622,    -1,    -1,
      -1,    -1,   627,    -1,    59,    -1,    61,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   640,    -1,   642,    -1,   644,
      -1,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    87,     4,     5,    -1,     7,     8,    93,    94,
      95,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
     675,   105,   106,    24,    25,   109,   110,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   691,    -1,    -1,    -1,
      -1,   696,   697,   698,    -1,    -1,    -1,    -1,    -1,    -1,
     134,   135,    -1,   137,   138,    -1,   140,    -1,   142,   143,
     144,   145,   146,   147,    65,    66,    -1,    68,    69,    70,
      71,    -1,   727,    74,   729,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    87,    -1,    -1,    90,
      -1,    -1,    93,    94,    95,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,   758,    -1,    -1,   107,    -1,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,    -1,    -1,
       5,   122,    -1,    -1,    -1,   780,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,   793,    24,
      25,   142,   143,   144,    -1,   800,   147,    -1,    -1,    -1,
      -1,    -1,    -1,   808,   809,   810,    -1,    -1,   813,    -1,
      -1,    46,    47,    -1,    49,    50,    51,    52,    53,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   841,   842,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    -1,    -1,    -1,    -1,    -1,    93,    94,
      95,    96,    97,    98,    -1,   100,   101,   102,   103,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,    -1,
      -1,   886,    -1,    -1,    -1,    -1,   891,    -1,    -1,    -1,
      -1,    -1,    -1,   898,    -1,    -1,    -1,   902,    -1,    -1,
      -1,   906,    -1,   138,    -1,   140,    -1,    -1,    -1,   914,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   922,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     5,   934,
       7,     8,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   949,    -1,    -1,    24,    25,    -1,
      -1,    -1,    -1,    -1,   959,    -1,    -1,    34,    35,    -1,
      37,    38,    39,    40,    41,    42,    43,    44,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    -1,    -1,   984,
      -1,    -1,    59,    -1,    61,    -1,    -1,   992,    65,    66,
      -1,    68,    69,    70,    71,    72,    -1,    74,    -1,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    86,
      87,    -1,    -1,    90,    91,    -1,    93,    94,    95,    96,
      97,    98,    -1,    -1,    -1,    -1,    -1,   104,    -1,    -1,
     107,    -1,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,    -1,    -1,     5,   122,     7,     8,    -1,    -1,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,    -1,
      -1,   138,    -1,    24,    25,   142,   143,   144,    -1,    -1,
     147,    -1,    -1,    34,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    46,    47,    48,    49,    50,
      51,    52,    53,    -1,    -1,    -1,    -1,    -1,    59,    -1,
      61,    -1,    -1,    -1,    65,    66,    -1,    68,    69,    70,
      71,    -1,    -1,    74,    -1,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    86,    87,    -1,    -1,    90,
      91,    -1,    93,    94,    95,    96,    97,    98,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   107,    -1,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,    -1,    -1,
       5,   122,     7,     8,    -1,    -1,    -1,    -1,    -1,    -1,
     131,    -1,    -1,    -1,    -1,    -1,    -1,   138,    -1,    24,
      25,   142,   143,   144,    -1,    -1,   147,    -1,    -1,    34,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    46,    47,    48,    49,    50,    51,    52,    53,    -1,
      -1,    -1,    -1,    -1,    59,    -1,    61,    -1,    -1,    -1,
      65,    66,    -1,    68,    69,    70,    71,    -1,    -1,    74,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    -1,    -1,    90,    91,    -1,    93,    94,
      95,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   107,    -1,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,    -1,    -1,     5,   122,     7,     8,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   138,    -1,    24,    25,   142,   143,   144,
      -1,    -1,   147,    -1,    -1,    34,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    46,    47,    48,
      49,    50,    51,    52,    53,    -1,    -1,    -1,    -1,    -1,
      59,    -1,    61,    -1,    -1,    -1,    65,    66,    -1,    68,
      69,    70,    71,    -1,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    -1,
      -1,    90,    91,    -1,    93,    94,    95,    96,    97,    98,
      -1,     5,    -1,     7,     8,    -1,    -1,    -1,   107,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
      24,    25,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,
      -1,    -1,    -1,   142,   143,   144,    -1,    -1,   147,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    65,    66,    -1,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    87,    -1,    -1,    90,    -1,    -1,    93,
      94,    95,    96,    97,    98,    -1,     5,    -1,     7,     8,
      -1,    -1,    -1,   107,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,    24,    25,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
      -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,   142,   143,
     144,    -1,    -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    -1,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    87,    -1,
      -1,    90,    -1,    -1,    93,    94,    95,    96,    97,    98,
      -1,     5,    -1,     7,     8,    -1,    -1,    -1,   107,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
      24,    25,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,    -1,    -1,    -1,    -1,    -1,   138,
      -1,    -1,    -1,   142,   143,   144,    -1,    -1,   147,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    65,    66,    -1,    68,    69,    70,    71,    -1,    -1,
      74,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    87,    -1,    -1,    90,    -1,    -1,    93,
      94,    95,    96,    97,    98,    -1,     5,    -1,     7,     8,
      -1,    -1,    -1,   107,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,    24,    25,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,    -1,    -1,
      -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,   142,   143,
     144,    -1,    -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    -1,    68,
      69,    70,    71,    -1,    -1,    74,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    87,    -1,
      -1,    90,    -1,    -1,    93,    94,    95,    96,    97,    98,
      -1,     5,    -1,     7,     8,    -1,    -1,    -1,   107,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
      24,    25,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,
      -1,    -1,    -1,   142,   143,   144,    -1,    -1,   147,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    65,    66,    -1,    68,    69,    70,    71,    -1,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    87,    -1,    -1,    90,    -1,    -1,    93,
      94,    95,    96,    97,    98,    -1,     5,    -1,     7,     8,
      -1,    -1,    -1,   107,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,    24,    25,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   138,    -1,   140,    -1,   142,   143,
     144,    -1,    -1,   147,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    65,    66,    -1,    68,
      69,    70,    71,    -1,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    -1,    82,    83,    84,    85,    86,    87,    -1,
      -1,    90,    -1,    -1,    93,    94,    95,    96,    97,    98,
      -1,     5,    -1,     7,     8,    -1,    -1,    -1,   107,    -1,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
      24,    25,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   138,
      -1,    -1,    -1,   142,   143,   144,    -1,    -1,   147,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    65,    66,    -1,    68,    69,    70,    71,    -1,    -1,
      -1,    -1,    76,    77,    78,    79,    80,    -1,    82,    83,
      84,    85,    86,    87,    -1,    -1,    90,    -1,    -1,    93,
      94,    95,    96,    97,    98,    -1,    -1,    -1,    -1,    -1,
       5,    -1,    -1,   107,    -1,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,    -1,    -1,    -1,   122,    24,
      25,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   138,    -1,    -1,    -1,   142,   143,
     144,    46,    47,   147,    49,    50,    51,    52,    53,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     5,    -1,    -1,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    -1,    -1,    -1,    -1,    -1,    93,    94,
      95,    96,    97,    98,    -1,   100,   101,   102,   103,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    46,    47,    -1,    49,
      50,    51,    52,    53,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       5,    -1,    -1,   138,    -1,   140,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    86,    87,    -1,    -1,
      -1,    -1,    -1,    93,    94,    95,    96,    97,    98,    34,
      -1,    -1,    -1,   103,    -1,    -1,    -1,    -1,   108,    -1,
      -1,    46,    47,    48,    49,    50,    51,    52,    53,    -1,
      -1,    -1,    -1,     5,    59,    -1,    61,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    -1,    -1,    -1,    91,    -1,    93,    94,
      95,    96,    97,    98,    46,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   107,    -1,    -1,    -1,     5,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    87,    -1,    -1,    -1,    -1,
      -1,    93,    94,    95,    96,    97,    98,    46,    47,    -1,
      49,    50,    51,    52,    53,   107,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    -1,
      -1,    -1,    -1,    -1,    93,    94,    95,    96,    97,    98,
      46,    -1,    -1,    49,   103,    51,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    46,    47,    -1,    -1,    -1,    -1,    -1,
      76,    77,    78,    79,    80,    -1,    82,    83,    84,    85,
      86,    87,    88,    -1,    -1,    -1,    -1,    93,    94,    95,
      96,    97,    98,    76,    77,    78,    79,    80,    -1,    82,
      83,    84,    85,    86,    87,    46,    47,    -1,    -1,    -1,
      93,    94,    95,    96,    97,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    46,    -1,
      -1,    -1,    -1,    -1,    -1,    76,    77,    78,    79,    80,
      -1,    82,    83,    84,    85,    86,    87,    -1,    -1,    -1,
      -1,    46,    93,    94,    95,    96,    97,    98,    76,    77,
      78,    79,    80,    -1,    82,    83,    84,    85,    86,    87,
      -1,    -1,    -1,    -1,    -1,    93,    94,    95,    96,    97,
      98,    76,    77,    78,    79,    80,    -1,    82,    83,    84,
      85,    86,    87,    -1,    -1,    -1,    -1,    -1,    93,    94,
      95,    96,    97,    98,    76,    77,    78,    79,    80,    -1,
      82,    83,    84,    85,    86,    87,    -1,    -1,    -1,    -1,
      -1,    93,    94,    95,    96,    97,    98
};

/* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
   symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,     4,     5,     7,     8,    24,    25,    65,    66,    68,
      69,    70,    71,    74,    76,    77,    78,    79,    80,    82,
      83,    84,    85,    86,    87,    90,    93,    94,    95,    96,
      97,    98,   107,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   122,   138,   142,   143,   144,   147,   152,
     205,   206,   207,   208,   209,   213,   219,   223,   224,   226,
     228,   299,   300,   305,   306,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   327,
     329,   330,    32,    89,   119,   130,   140,   153,   154,   155,
     156,   157,   159,   161,   163,   286,   287,   288,   313,   313,
     313,   313,   134,   134,   134,   134,   327,   328,   219,   224,
     306,   312,   138,   307,   308,   140,   313,     7,     8,     9,
      10,    11,    12,    13,    14,    15,    16,    17,    18,    19,
      20,    21,    22,    23,    24,    25,    26,    27,   105,   106,
     109,   110,   134,   135,   137,   138,   140,   142,   143,   144,
     145,   146,   147,   222,   138,   305,   138,    34,    46,    47,
      48,    49,    50,    51,    52,    53,    59,    61,    81,    91,
     226,   236,   260,   262,   282,   289,   292,   295,   299,   330,
     313,   313,   313,   313,     0,   125,   126,   127,   128,   125,
     127,   107,   138,   138,     7,     8,     9,   138,   140,   149,
      30,    31,    24,   145,   146,   143,   144,   105,   106,    22,
      23,   134,   135,    10,    11,    25,    27,    26,    28,    12,
      13,    14,    15,    16,    17,    18,    19,    20,    21,    29,
     137,   150,   326,   136,     5,   160,   114,   107,   226,   228,
     242,   243,   157,    88,    34,    46,    47,    48,    59,    61,
      62,    63,    64,    91,   103,   158,   237,   251,   255,   256,
     286,   107,   207,   213,   226,   236,   299,   236,   236,   236,
     301,   327,   260,   309,   141,   140,   140,   139,   141,   236,
     236,   330,   260,   260,   260,   260,   226,   228,   281,     5,
     346,   260,   260,   260,   139,    24,    25,   100,   101,   102,
     138,   140,   190,   191,   202,   203,   204,   148,   347,   348,
     103,   132,   283,   284,   285,    34,    46,    47,    48,    59,
      61,   261,   299,   139,   134,   134,   219,   224,   301,   302,
     302,   142,   213,   216,   217,   281,   236,   301,   303,   304,
     327,   330,   217,   281,   313,   313,   314,   314,   314,   315,
     315,   316,   316,   317,   317,   317,   317,   318,   318,   319,
     320,   321,   322,   323,   330,   327,   327,   162,   141,   138,
     134,   114,   138,   131,   107,   111,   138,   142,   178,   179,
     207,   213,   220,   221,   223,   226,   229,   230,   253,   262,
     299,    34,    46,    47,    48,    59,    61,    62,    63,    64,
      91,   103,   107,   135,   135,   135,   135,   136,   139,   138,
     310,   311,   313,   141,   141,   139,   139,   139,   132,   148,
     313,    46,    46,    47,   103,   195,   196,   197,   198,   199,
     202,   207,   208,   209,   212,   213,   214,   215,   227,   262,
     299,   324,   325,   333,   203,   138,   140,    54,    55,    56,
      62,   227,   293,   349,   350,   351,   132,   138,   291,   107,
     207,   213,   227,   228,   285,   261,   261,   261,   261,   261,
     261,   261,   210,   211,   139,   139,   207,   107,   136,   139,
     141,   148,   132,   302,   164,   132,   157,     5,   257,   258,
     259,   213,   221,   231,   111,   178,   213,   207,   132,   245,
     138,   140,   126,   107,   138,   180,   182,   190,   213,   221,
     225,   274,   275,   276,   138,   250,   180,   275,   180,   275,
      46,    47,   254,   299,   138,   138,   138,   138,   138,   327,
     302,     5,   296,   297,   298,   253,   199,   199,   138,   139,
     136,   138,   175,   176,   190,   203,   213,   219,   139,   125,
     127,   125,   127,   107,    46,    47,   201,    46,    47,   200,
     299,   141,   195,   333,   293,   294,    62,   350,   136,   290,
     259,    34,   156,   166,   239,   252,   255,   263,   264,   265,
     269,   293,   107,   236,   317,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   344,   125,   126,
     127,   128,   217,   327,   327,   155,   139,    46,    49,    51,
      88,   169,   170,   171,   172,   173,   299,   155,   138,   257,
     139,   107,    46,   226,   232,   299,   139,   107,   126,   246,
     195,   333,   220,   221,   180,    25,   137,   245,   277,   140,
     250,   180,   107,    24,   136,   195,   245,   245,   254,   254,
     254,   259,   330,   330,   330,   330,   139,   137,   136,   133,
     132,   259,    46,    47,   192,   193,   194,   108,   198,   175,
     137,   138,   140,   175,   137,   107,   224,   201,   201,   200,
     200,   200,   139,   141,   350,   350,   351,   269,   139,    88,
     131,   134,   178,   213,   217,   218,   227,   253,   262,   269,
     133,   148,    22,    23,   134,    10,    11,    25,    27,    26,
      28,    29,   150,   136,   135,   135,   125,   126,   127,   133,
     173,   346,   346,   134,   135,   136,   137,   138,   175,   190,
     174,   299,   133,   117,   232,   190,   234,   235,    46,   233,
     299,    35,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    72,   104,   131,   132,   207,   248,   249,   260,   330,
     352,   353,   354,   357,   358,   360,   361,   362,   363,   364,
     139,   141,   139,   138,   132,   279,   327,   333,   195,   224,
     181,   180,   276,   139,   139,   139,   139,   139,   139,   325,
     332,   298,   297,   139,   193,    74,   188,   189,   139,   327,
     177,   333,   327,   194,   133,   134,   227,   245,   107,   138,
     138,   183,   185,   190,   207,   213,   219,   221,   223,   224,
     225,   266,   268,   183,   266,   183,   266,   267,   269,   317,
     317,   317,   334,   334,   335,   336,   337,   338,   339,   330,
     345,   137,   137,   169,   165,   170,   205,   174,   139,   235,
     233,   233,   138,   138,   332,   148,     5,   131,   131,   138,
     352,   138,   131,   330,   138,   249,   126,   127,   133,   183,
     271,   272,   273,   131,   364,   194,   301,   133,   279,   280,
     141,   139,   180,   189,   133,   199,   138,   195,   141,   189,
     167,   138,   213,   195,   183,   137,   245,   270,   138,   140,
     183,   126,   107,   148,   148,    24,   136,   245,   245,   148,
     236,   236,   135,   157,   260,   330,   359,   359,   148,   352,
     131,   131,   260,   330,    45,   359,   131,   114,   133,   148,
     148,   247,   277,   131,   136,   189,   139,   136,   278,   194,
     148,   240,   244,   186,   187,   236,   139,   169,   195,   107,
     139,   139,   332,   195,   333,   213,   224,   332,   332,   184,
     183,   268,   342,    51,   175,   139,   139,   352,   330,   331,
     271,   131,   138,   139,   139,   355,   356,   273,   279,   133,
     189,   241,   242,   238,   136,   139,   194,   135,   139,   189,
     139,   141,   107,   183,   346,   137,   352,   352,   131,   131,
     331,   330,   352,   131,   352,   352,   136,   245,   236,   189,
     168,   189,   244,   194,   327,    36,   331,   331,   131,   139,
     242,   264,   244,   245,   189,   352,   139,   131,   331,   131,
     245,   352,   331,   139,   139,   352,   352
};

#define yyerrok		(yyerrstatus = 0)
#define yyclearin	(yychar = YYEMPTY)
#define YYEMPTY		(-2)
#define YYEOF		0

#define YYACCEPT	goto yyacceptlab
#define YYABORT		goto yyabortlab
#define YYERROR		goto yyerrorlab


/* Like YYERROR except do call yyerror.  This remains here temporarily
   to ease the transition to the new meaning of YYERROR, for GCC.
   Once GCC version 2 has supplanted version 1, this can go.  */

#define YYFAIL		goto yyerrlab

#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)					\
do								\
  if (yychar == YYEMPTY && yylen == 1)				\
    {								\
      yychar = (Token);						\
      yylval = (Value);						\
      yytoken = YYTRANSLATE (yychar);				\
      YYPOPSTACK (1);						\
      goto yybackup;						\
    }								\
  else								\
    {								\
      yyerror (YY_("syntax error: cannot back up")); \
      YYERROR;							\
    }								\
while (YYID (0))


#define YYTERROR	1
#define YYERRCODE	256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#define YYRHSLOC(Rhs, K) ((Rhs)[K])
#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)				\
    do									\
      if (YYID (N))                                                    \
	{								\
	  (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;	\
	  (Current).first_column = YYRHSLOC (Rhs, 1).first_column;	\
	  (Current).last_line    = YYRHSLOC (Rhs, N).last_line;		\
	  (Current).last_column  = YYRHSLOC (Rhs, N).last_column;	\
	}								\
      else								\
	{								\
	  (Current).first_line   = (Current).last_line   =		\
	    YYRHSLOC (Rhs, 0).last_line;				\
	  (Current).first_column = (Current).last_column =		\
	    YYRHSLOC (Rhs, 0).last_column;				\
	}								\
    while (YYID (0))
#endif


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if YYLTYPE_IS_TRIVIAL
#  define YY_LOCATION_PRINT(File, Loc)			\
     fprintf (File, "%d.%d-%d.%d",			\
	      (Loc).first_line, (Loc).first_column,	\
	      (Loc).last_line,  (Loc).last_column)
# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


/* YYLEX -- calling `yylex' with the right arguments.  */

#ifdef YYLEX_PARAM
# define YYLEX yylex (YYLEX_PARAM)
#else
# define YYLEX yylex ()
#endif

/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)			\
do {						\
  if (yydebug)					\
    YYFPRINTF Args;				\
} while (YYID (0))

# define YY_SYMBOL_PRINT(Title, Type, Value, Location)			  \
do {									  \
  if (yydebug)								  \
    {									  \
      YYFPRINTF (stderr, "%s ", Title);					  \
      yy_symbol_print (stderr,						  \
		  Type, Value, Location); \
      YYFPRINTF (stderr, "\n");						  \
    }									  \
} while (YYID (0))


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp)
#else
static void
yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
#endif
{
  if (!yyvaluep)
    return;
  YYUSE (yylocationp);
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# else
  YYUSE (yyoutput);
# endif
  switch (yytype)
    {
      default:
	break;
    }
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp)
#else
static void
yy_symbol_print (yyoutput, yytype, yyvaluep, yylocationp)
    FILE *yyoutput;
    int yytype;
    YYSTYPE const * const yyvaluep;
    YYLTYPE const * const yylocationp;
#endif
{
  if (yytype < YYNTOKENS)
    YYFPRINTF (yyoutput, "token %s (", yytname[yytype]);
  else
    YYFPRINTF (yyoutput, "nterm %s (", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
#else
static void
yy_stack_print (yybottom, yytop)
    yytype_int16 *yybottom;
    yytype_int16 *yytop;
#endif
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)				\
do {								\
  if (yydebug)							\
    yy_stack_print ((Bottom), (Top));				\
} while (YYID (0))


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yy_reduce_print (YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule)
#else
static void
yy_reduce_print (yyvsp, yylsp, yyrule)
    YYSTYPE *yyvsp;
    YYLTYPE *yylsp;
    int yyrule;
#endif
{
  int yynrhs = yyr2[yyrule];
  int yyi;
  unsigned long int yylno = yyrline[yyrule];
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
	     yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
		       &(yyvsp[(yyi + 1) - (yynrhs)])
		       , &(yylsp[(yyi + 1) - (yynrhs)])		       );
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)		\
do {					\
  if (yydebug)				\
    yy_reduce_print (yyvsp, yylsp, Rule); \
} while (YYID (0))

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef	YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif



#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static YYSIZE_T
yystrlen (const char *yystr)
#else
static YYSIZE_T
yystrlen (yystr)
    const char *yystr;
#endif
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static char *
yystpcpy (char *yydest, const char *yysrc)
#else
static char *
yystpcpy (yydest, yysrc)
    char *yydest;
    const char *yysrc;
#endif
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
	switch (*++yyp)
	  {
	  case '\'':
	  case ',':
	    goto do_not_strip_quotes;

	  case '\\':
	    if (*++yyp != '\\')
	      goto do_not_strip_quotes;
	    /* Fall through.  */
	  default:
	    if (yyres)
	      yyres[yyn] = *yyp;
	    yyn++;
	    break;

	  case '"':
	    if (yyres)
	      yyres[yyn] = '\0';
	    return yyn;
	  }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into YYRESULT an error message about the unexpected token
   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
   including the terminating null byte.  If YYRESULT is null, do not
   copy anything; just return the number of bytes that would be
   copied.  As a special case, return 0 if an ordinary "syntax error"
   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
   size calculation.  */
static YYSIZE_T
yysyntax_error (char *yyresult, int yystate, int yychar)
{
  int yyn = yypact[yystate];

  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
    return 0;
  else
    {
      int yytype = YYTRANSLATE (yychar);
      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
      YYSIZE_T yysize = yysize0;
      YYSIZE_T yysize1;
      int yysize_overflow = 0;
      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
      int yyx;

# if 0
      /* This is so xgettext sees the translatable formats that are
	 constructed on the fly.  */
      YY_("syntax error, unexpected %s");
      YY_("syntax error, unexpected %s, expecting %s");
      YY_("syntax error, unexpected %s, expecting %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
# endif
      char *yyfmt;
      char const *yyf;
      static char const yyunexpected[] = "syntax error, unexpected %s";
      static char const yyexpecting[] = ", expecting %s";
      static char const yyor[] = " or %s";
      char yyformat[sizeof yyunexpected
		    + sizeof yyexpecting - 1
		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
		       * (sizeof yyor - 1))];
      char const *yyprefix = yyexpecting;

      /* Start YYX at -YYN if negative to avoid negative indexes in
	 YYCHECK.  */
      int yyxbegin = yyn < 0 ? -yyn : 0;

      /* Stay within bounds of both yycheck and yytname.  */
      int yychecklim = YYLAST - yyn + 1;
      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
      int yycount = 1;

      yyarg[0] = yytname[yytype];
      yyfmt = yystpcpy (yyformat, yyunexpected);

      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
	  {
	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
	      {
		yycount = 1;
		yysize = yysize0;
		yyformat[sizeof yyunexpected - 1] = '\0';
		break;
	      }
	    yyarg[yycount++] = yytname[yyx];
	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
	    yysize_overflow |= (yysize1 < yysize);
	    yysize = yysize1;
	    yyfmt = yystpcpy (yyfmt, yyprefix);
	    yyprefix = yyor;
	  }

      yyf = YY_(yyformat);
      yysize1 = yysize + yystrlen (yyf);
      yysize_overflow |= (yysize1 < yysize);
      yysize = yysize1;

      if (yysize_overflow)
	return YYSIZE_MAXIMUM;

      if (yyresult)
	{
	  /* Avoid sprintf, as that infringes on the user's name space.
	     Don't have undefined behavior even if the translation
	     produced a string with the wrong number of "%s"s.  */
	  char *yyp = yyresult;
	  int yyi = 0;
	  while ((*yyp = *yyf) != '\0')
	    {
	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
		{
		  yyp += yytnamerr (yyp, yyarg[yyi++]);
		  yyf += 2;
		}
	      else
		{
		  yyp++;
		  yyf++;
		}
	    }
	}
      return yysize;
    }
}
#endif /* YYERROR_VERBOSE */


/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

/*ARGSUSED*/
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp)
#else
static void
yydestruct (yymsg, yytype, yyvaluep, yylocationp)
    const char *yymsg;
    int yytype;
    YYSTYPE *yyvaluep;
    YYLTYPE *yylocationp;
#endif
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);

  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  switch (yytype)
    {

      default:
	break;
    }
}

/* Prevent warnings from -Wmissing-prototypes.  */
#ifdef YYPARSE_PARAM
#if defined __STDC__ || defined __cplusplus
int yyparse (void *YYPARSE_PARAM);
#else
int yyparse ();
#endif
#else /* ! YYPARSE_PARAM */
#if defined __STDC__ || defined __cplusplus
int yyparse (void);
#else
int yyparse ();
#endif
#endif /* ! YYPARSE_PARAM */


/* The lookahead symbol.  */
int yychar;

/* The semantic value of the lookahead symbol.  */
YYSTYPE yylval;

/* Location data for the lookahead symbol.  */
YYLTYPE yylloc;

/* Number of syntax errors so far.  */
int yynerrs;



/*-------------------------.
| yyparse or yypush_parse.  |
`-------------------------*/

#ifdef YYPARSE_PARAM
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void *YYPARSE_PARAM)
#else
int
yyparse (YYPARSE_PARAM)
    void *YYPARSE_PARAM;
#endif
#else /* ! YYPARSE_PARAM */
#if (defined __STDC__ || defined __C99__FUNC__ \
     || defined __cplusplus || defined _MSC_VER)
int
yyparse (void)
#else
int
yyparse ()

#endif
#endif
{


    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       `yyss': related to states.
       `yyvs': related to semantic values.
       `yyls': related to locations.

       Refer to the stacks thru separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[2];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yytoken = 0;
  yyss = yyssa;
  yyvs = yyvsa;
  yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */

  /* Initialize stack pointers.
     Waste one element of value and location stack
     so that they stay on the same level as the state stack.
     The wasted elements are never initialized.  */
  yyssp = yyss;
  yyvsp = yyvs;
  yylsp = yyls;

#if YYLTYPE_IS_TRIVIAL
  /* Initialize the default location before parsing starts.  */
  yylloc.first_line   = yylloc.last_line   = 1;
  yylloc.first_column = yylloc.last_column = 1;
#endif

  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
	/* Give user a chance to reallocate the stack.  Use copies of
	   these so that the &'s don't force the real ones into
	   memory.  */
	YYSTYPE *yyvs1 = yyvs;
	yytype_int16 *yyss1 = yyss;
	YYLTYPE *yyls1 = yyls;

	/* Each stack pointer address is followed by the size of the
	   data in use in that stack, in bytes.  This used to be a
	   conditional around just the two extra args, but that might
	   be undefined if yyoverflow is a macro.  */
	yyoverflow (YY_("memory exhausted"),
		    &yyss1, yysize * sizeof (*yyssp),
		    &yyvs1, yysize * sizeof (*yyvsp),
		    &yyls1, yysize * sizeof (*yylsp),
		    &yystacksize);

	yyls = yyls1;
	yyss = yyss1;
	yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
	goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
	yystacksize = YYMAXDEPTH;

      {
	yytype_int16 *yyss1 = yyss;
	union yyalloc *yyptr =
	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
	if (! yyptr)
	  goto yyexhaustedlab;
	YYSTACK_RELOCATE (yyss_alloc, yyss);
	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
	YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
	if (yyss1 != yyssa)
	  YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
		  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
	YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yyn == YYPACT_NINF)
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = YYLEX;
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yyn == 0 || yyn == YYTABLE_NINF)
	goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  *++yyvsp = yylval;
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     `$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 2:

/* Line 1455 of yacc.c  */
#line 749 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { g_exp = (yyvsp[(1) - (1)].exp) ;}
    break;

  case 3:

/* Line 1455 of yacc.c  */
#line 751 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { translation_unit = (yyvsp[(2) - (2)].declarationList); ;}
    break;

  case 4:

/* Line 1455 of yacc.c  */
#line 772 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {	(yyval.declarationList) = (yyvsp[(1) - (1)].declarationList); 	;}
    break;

  case 5:

/* Line 1455 of yacc.c  */
#line 789 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declarationList) = new ast::DeclarationList((yyvsp[(1) - (1)].declaration), NULL) ;}
    break;

  case 6:

/* Line 1455 of yacc.c  */
#line 790 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declarationList) = new ast::DeclarationList((yyvsp[(2) - (2)].declaration), (yyvsp[(1) - (2)].declarationList)) ;}
    break;

  case 7:

/* Line 1455 of yacc.c  */
#line 793 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declarationList) = NULL ;}
    break;

  case 11:

/* Line 1455 of yacc.c  */
#line 802 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
		DoImport((yyvsp[(1) - (1)].string_literal));
	 (yyval.declaration) = new ImportDeclaration((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].string_literal))
	 ;}
    break;

  case 12:

/* Line 1455 of yacc.c  */
#line 806 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declaration) = new PragmaDeclaration((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].string_literal)) ;}
    break;

  case 13:

/* Line 1455 of yacc.c  */
#line 807 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declaration) = (yyvsp[(2) - (3)].declaration); Do((yyvsp[(1) - (3)].expList), (yyval.declaration)); ;}
    break;

  case 14:

/* Line 1455 of yacc.c  */
#line 808 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declaration) = (yyvsp[(2) - (2)].declaration); Do((yyvsp[(1) - (2)].expList), (yyval.declaration)) ;}
    break;

  case 15:

/* Line 1455 of yacc.c  */
#line 809 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declaration) = (yyvsp[(2) - (2)].declaration); ;}
    break;

  case 16:

/* Line 1455 of yacc.c  */
#line 810 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declaration) = (yyvsp[(1) - (1)].declaration); ;}
    break;

  case 17:

/* Line 1455 of yacc.c  */
#line 811 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declaration) = (yyvsp[(1) - (1)].declaration); ;}
    break;

  case 18:

/* Line 1455 of yacc.c  */
#line 814 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declaration) = new ast::LinkageDeclaration((yylsp[(1) - (5)]), (yyvsp[(2) - (5)].string_literal), (yyvsp[(4) - (5)].declarationList)) ;}
    break;

  case 19:

/* Line 1455 of yacc.c  */
#line 815 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declaration) = new ast::LinkageDeclaration((yylsp[(1) - (3)]), (yyvsp[(2) - (3)].string_literal), new ast::DeclarationList((yyvsp[(3) - (3)].declaration), NULL)) ;}
    break;

  case 22:

/* Line 1455 of yacc.c  */
#line 828 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
		ast::NamespaceDefinition* nsdef = new ast::NamespaceDefinition((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].id), NULL);
		g_templates.push(nsdef);

		g_scopeStack.push(g_pScope);
	//	g_scopeStack.push(g_pScope2);

		Do(NULL, nsdef);
	;}
    break;

  case 23:

/* Line 1455 of yacc.c  */
#line 838 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
		ast::NamespaceDefinition* nsdef = (ast::NamespaceDefinition*)g_templates.top();

		g_templates.pop();
		nsdef->m_declarationList = Reverse((yyvsp[(5) - (6)].declarationList));

	//	g_pScope2 = g_scopeStack.top();
	//	ASSERT(g_pScope2);
	//	g_scopeStack.pop();

		g_pScope = g_scopeStack.top();
		ASSERT(g_pScope);
		g_scopeStack.pop();

		g_pScope2 = g_pScope;

		(yyval.declaration) = nsdef;
	;}
    break;

  case 24:

/* Line 1455 of yacc.c  */
#line 862 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
	(yyval.declaration) = new ast::TemplateDeclaration((yylsp[(2) - (3)]), NULL, NULL);
	g_templates.push((yyval.declaration));
	DoTp((ast::TemplateDeclaration*)(yyval.declaration));

	g_scopeStack.push(g_pScope);
	g_scopeStack.push(g_pScope2);
;}
    break;

  case 25:

/* Line 1455 of yacc.c  */
#line 871 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
	ast::TemplateDeclaration* td = (ast::TemplateDeclaration*)g_templates.top();
	td->m_params = Reverse((yyvsp[(5) - (6)].templateParameterList));
;}
    break;

  case 26:

/* Line 1455 of yacc.c  */
#line 876 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
	ast::TemplateDeclaration* td = (ast::TemplateDeclaration*)g_templates.top();
	g_templates.pop();
//	ASSERT(g_pScope);

	g_pScope2 = g_scopeStack.top();
	g_scopeStack.pop();
	templateParams = NULL;//.clear();

	g_pScope = g_scopeStack.top();
	g_scopeStack.pop();

/*
		if (g_pScope2->m_name == NULL)
			LOG("here scope ---------------------- global scope\n");
		else
			LOG("here scope ---------------------- %s\n", g_pScope2->m_name->c_str());
*/

	td->m_decl = (yyvsp[(8) - (8)].declaration);
	(yyval.declaration) = td;
;}
    break;

  case 27:

/* Line 1455 of yacc.c  */
#line 901 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
	(yyval.declaration) = new ast::TemplateDeclaration((yylsp[(2) - (3)]), NULL, NULL);
	g_templates.push((yyval.declaration));
	DoTp((ast::TemplateDeclaration*)(yyval.declaration));

	g_scopeStack.push(g_pScope);
	g_scopeStack.push(g_pScope2);
;}
    break;

  case 28:

/* Line 1455 of yacc.c  */
#line 910 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
	ast::TemplateDeclaration* td = (ast::TemplateDeclaration*)g_templates.top();
	td->m_params = Reverse((yyvsp[(5) - (6)].templateParameterList));
/*
	$$ = new ast::A_TemplateDeclaration($4, NULL);
	g_templates.push($$);

	g_scopeStack.push(g_pScope2);

	DoTp((ast::TemplateDeclaration*)$$)
	*/
;}
    break;

  case 29:

/* Line 1455 of yacc.c  */
#line 923 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
	ast::TemplateDeclaration* td = (ast::TemplateDeclaration*)g_templates.top();
	g_templates.pop();
//	ASSERT(g_pScope);

	g_pScope2 = g_scopeStack.top();
	g_scopeStack.pop();
	templateParams = NULL;//.clear();

//	g_pScope = g_pScope2;

	g_pScope = g_scopeStack.top();
	g_scopeStack.pop();

	td->m_decl = (yyvsp[(8) - (8)].declaration);
	(yyval.declaration) = td;
;}
    break;

  case 30:

/* Line 1455 of yacc.c  */
#line 942 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateParameterList) = new ast::TemplateParameterList((yyvsp[(1) - (1)].templateParameter), NULL) ;}
    break;

  case 31:

/* Line 1455 of yacc.c  */
#line 943 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateParameterList) = new ast::TemplateParameterList((yyvsp[(3) - (3)].templateParameter), (yyvsp[(1) - (3)].templateParameterList)) ;}
    break;

  case 32:

/* Line 1455 of yacc.c  */
#line 946 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateParameter) = (yyvsp[(1) - (1)].templateParameter); Do_TParam((yyval.templateParameter)); ;}
    break;

  case 33:

/* Line 1455 of yacc.c  */
#line 947 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateParameter) = (yyvsp[(1) - (1)].templateParameter); Do_TParam((yyval.templateParameter)); ;}
    break;

  case 34:

/* Line 1455 of yacc.c  */
#line 948 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateParameter) = (yyvsp[(1) - (3)].templateParameter); Do_TParam((yyval.templateParameter), (yyvsp[(3) - (3)].exp)); ;}
    break;

  case 35:

/* Line 1455 of yacc.c  */
#line 951 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateParameter) = new ast::TypeTemplateParameter((yyvsp[(2) - (2)].id), NULL) ;}
    break;

  case 36:

/* Line 1455 of yacc.c  */
#line 952 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateParameter) = new ast::TypeTemplateParameter((yyvsp[(2) - (4)].id), (yyvsp[(4) - (4)].typeId)) ;}
    break;

  case 37:

/* Line 1455 of yacc.c  */
#line 953 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateParameter) = new ast::TypeTemplateParameter((yyvsp[(2) - (2)].id), NULL) ;}
    break;

  case 38:

/* Line 1455 of yacc.c  */
#line 954 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateParameter) = new ast::TypeTemplateParameter((yyvsp[(2) - (4)].id), (yyvsp[(4) - (4)].typeId)) ;}
    break;

  case 40:

/* Line 1455 of yacc.c  */
#line 960 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateParameter) = new ast::DeclaratorTemplateParameter((yyvsp[(1) - (2)].declspecList), (yyvsp[(2) - (2)].declarator)) ;}
    break;

  case 41:

/* Line 1455 of yacc.c  */
#line 963 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONST), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 42:

/* Line 1455 of yacc.c  */
#line 964 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].simpleTypeSpec)), NULL) ;}
    break;

  case 43:

/* Line 1455 of yacc.c  */
#line 965 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].simpleTypeSpec)), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 44:

/* Line 1455 of yacc.c  */
#line 968 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].simpleTypeSpec)), NULL) ;}
    break;

  case 45:

/* Line 1455 of yacc.c  */
#line 969 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].simpleTypeSpec)), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 46:

/* Line 1455 of yacc.c  */
#line 972 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {(yyval.declarator) = new ast::A_DirectDeclaratorDeclarator((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].directDeclarator)) ;}
    break;

  case 47:

/* Line 1455 of yacc.c  */
#line 973 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declarator) = new ast::A_PtrDeclarator((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].num), (yyvsp[(2) - (2)].declarator)) ;}
    break;

  case 48:

/* Line 1455 of yacc.c  */
#line 977 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorId((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].exp)); g_scopeStack2.pop() ;}
    break;

  case 49:

/* Line 1455 of yacc.c  */
#line 978 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DeclaratorDirectDeclarator((yylsp[(2) - (3)]), (yyvsp[(2) - (3)].declarator)) ;}
    break;

  case 50:

/* Line 1455 of yacc.c  */
#line 980 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							g_scopeStack.push(g_pScope);

							g_scopeStack.push(g_pScope2);
							
							ASSERT(g_lastScope);
							if (g_lastScope->m_pNamespace->GetClass())
							{
								ASSERT(g_lastScope->m_pNamespace->GetClass());

								ASSERT(g_pScope2 != g_lastScope);
								g_lastScope->m_pParentScope = g_pScope2;
								g_pScope2 = g_lastScope;
							}

							g_scopeStack.push(g_lastScope);
						;}
    break;

  case 51:

/* Line 1455 of yacc.c  */
#line 999 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							g_lastScope = g_scopeStack.top();
							g_scopeStack.pop();

							g_pScope2 = g_scopeStack.top();
							g_scopeStack.pop();

							g_pScope = g_scopeStack.top();
							g_scopeStack.pop();

						//	g_pScope2 = g_pScope;

							(yyval.directDeclarator) = ast::A_DirectDeclaratorParen((yyvsp[(1) - (7)].directDeclarator), (yyvsp[(4) - (7)].paramDecls), (yyvsp[(6) - (7)].declspecList));
						;}
    break;

  case 52:

/* Line 1455 of yacc.c  */
#line 1013 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorArray((yyvsp[(1) - (4)].directDeclarator), (yyvsp[(3) - (4)].exp)) ;}
    break;

  case 53:

/* Line 1455 of yacc.c  */
#line 1028 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {(yyval.declarator) = new ast::A_DirectDeclaratorDeclarator((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].directDeclarator)) ;}
    break;

  case 54:

/* Line 1455 of yacc.c  */
#line 1032 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorId((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].exp)); g_scopeStack2.pop() ;}
    break;

  case 55:

/* Line 1455 of yacc.c  */
#line 1033 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DeclaratorDirectDeclarator((yylsp[(2) - (3)]), (yyvsp[(2) - (3)].declarator)) ;}
    break;

  case 56:

/* Line 1455 of yacc.c  */
#line 1034 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorParen((yyvsp[(1) - (6)].directDeclarator), (yyvsp[(3) - (6)].paramDecls), (yyvsp[(5) - (6)].declspecList)) ;}
    break;

  case 57:

/* Line 1455 of yacc.c  */
#line 1035 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorArray((yyvsp[(1) - (4)].directDeclarator), (yyvsp[(3) - (4)].exp)) ;}
    break;

  case 58:

/* Line 1455 of yacc.c  */
#line 1038 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {(yyval.declarator) = new ast::A_DirectDeclaratorDeclarator((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].directDeclarator)); ;}
    break;

  case 59:

/* Line 1455 of yacc.c  */
#line 1039 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declarator) = new ast::A_PtrDeclarator((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].num), (yyvsp[(2) - (2)].declarator)) ;}
    break;

  case 60:

/* Line 1455 of yacc.c  */
#line 1040 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { g_scopeStack2.pop(); ;}
    break;

  case 61:

/* Line 1455 of yacc.c  */
#line 1041 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
					(yyval.declarator) = new ast::A_PtrDeclarator((yylsp[(1) - (4)]), '.*', (yyvsp[(4) - (4)].declarator), (yyvsp[(1) - (4)].exp));
				;}
    break;

  case 62:

/* Line 1455 of yacc.c  */
#line 1046 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorId((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].exp)); g_scopeStack2.pop() ;}
    break;

  case 63:

/* Line 1455 of yacc.c  */
#line 1048 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorId((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].exp)); g_scopeStack2.pop() ;}
    break;

  case 64:

/* Line 1455 of yacc.c  */
#line 1049 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DeclaratorDirectDeclarator((yylsp[(2) - (3)]), (yyvsp[(2) - (3)].declarator)) ;}
    break;

  case 65:

/* Line 1455 of yacc.c  */
#line 1052 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							g_lastScope = g_scopeStack.top();
							g_scopeStack.pop();

							g_pScope2 = g_scopeStack.top();
							g_scopeStack.pop();

							g_pScope = g_scopeStack.top();
							g_scopeStack.pop();

						//	g_pScope2 = g_pScope;

							(yyval.directDeclarator) = ast::A_DirectDeclaratorParen((yyvsp[(1) - (6)].directDeclarator), (yyvsp[(3) - (6)].paramDecls), (yyvsp[(5) - (6)].declspecList));
						;}
    break;

  case 66:

/* Line 1455 of yacc.c  */
#line 1066 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorArray((yyvsp[(1) - (4)].directDeclarator), (yyvsp[(3) - (4)].exp)); ;}
    break;

  case 67:

/* Line 1455 of yacc.c  */
#line 1069 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {(yyval.declarator) = new ast::A_DirectDeclaratorDeclarator((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].directDeclarator)); ;}
    break;

  case 68:

/* Line 1455 of yacc.c  */
#line 1070 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declarator) = new ast::A_PtrDeclarator((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].num), (yyvsp[(2) - (2)].declarator)) ;}
    break;

  case 69:

/* Line 1455 of yacc.c  */
#line 1071 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { g_scopeStack2.pop(); ;}
    break;

  case 70:

/* Line 1455 of yacc.c  */
#line 1072 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declarator) = new ast::A_PtrDeclarator((yylsp[(1) - (4)]), '.*', (yyvsp[(4) - (4)].declarator), (yyvsp[(1) - (4)].exp));
							;}
    break;

  case 71:

/* Line 1455 of yacc.c  */
#line 1077 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorId((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].exp)); g_scopeStack2.pop() ;}
    break;

  case 72:

/* Line 1455 of yacc.c  */
#line 1078 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorId((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].exp)); g_scopeStack2.pop() ;}
    break;

  case 73:

/* Line 1455 of yacc.c  */
#line 1079 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DeclaratorDirectDeclarator((yylsp[(2) - (3)]), (yyvsp[(2) - (3)].declarator)) ;}
    break;

  case 74:

/* Line 1455 of yacc.c  */
#line 1080 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorParen((yyvsp[(1) - (6)].directDeclarator), (yyvsp[(3) - (6)].paramDecls), (yyvsp[(5) - (6)].declspecList)); ;}
    break;

  case 75:

/* Line 1455 of yacc.c  */
#line 1081 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorArray((yyvsp[(1) - (4)].directDeclarator), (yyvsp[(3) - (4)].exp)); ;}
    break;

  case 84:

/* Line 1455 of yacc.c  */
#line 1112 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '*' ;}
    break;

  case 85:

/* Line 1455 of yacc.c  */
#line 1113 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '*' ;}
    break;

  case 86:

/* Line 1455 of yacc.c  */
#line 1114 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '&' ;}
    break;

  case 87:

/* Line 1455 of yacc.c  */
#line 1118 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = 'c'; ;}
    break;

  case 88:

/* Line 1455 of yacc.c  */
#line 1119 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = 's'; ;}
    break;

  case 89:

/* Line 1455 of yacc.c  */
#line 1120 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = 'f'; ;}
    break;

  case 90:

/* Line 1455 of yacc.c  */
#line 1123 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typespec) = new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_CONST) ;}
    break;

  case 91:

/* Line 1455 of yacc.c  */
#line 1124 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typespec) = new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_VOLATILE) ;}
    break;

  case 92:

/* Line 1455 of yacc.c  */
#line 1127 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList((yyvsp[(1) - (1)].typespec), NULL) ;}
    break;

  case 93:

/* Line 1455 of yacc.c  */
#line 1128 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList((yyvsp[(1) - (2)].typespec), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 94:

/* Line 1455 of yacc.c  */
#line 1131 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = NULL ;}
    break;

  case 96:

/* Line 1455 of yacc.c  */
#line 1135 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.paramDecls) = new ast::ParameterDeclarations((yyvsp[(1) - (1)].typeIdList), false) ;}
    break;

  case 97:

/* Line 1455 of yacc.c  */
#line 1136 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.paramDecls) = new ast::ParameterDeclarations((yyvsp[(1) - (3)].typeIdList), true) ;}
    break;

  case 98:

/* Line 1455 of yacc.c  */
#line 1139 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typeIdList) = new ast::A_TypeIdList((yyvsp[(1) - (1)].typeId), NULL) ;}
    break;

  case 99:

/* Line 1455 of yacc.c  */
#line 1140 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typeIdList) = new ast::A_TypeIdList((yyvsp[(3) - (3)].typeId), (yyvsp[(1) - (3)].typeIdList)) ;}
    break;

  case 100:

/* Line 1455 of yacc.c  */
#line 1143 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typeIdList) = NULL ;}
    break;

  case 102:

/* Line 1455 of yacc.c  */
#line 1147 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typeId) = new ast::A_TypeId((yyvsp[(1) - (2)].declspecList), (yyvsp[(2) - (2)].declarator)) ;}
    break;

  case 103:

/* Line 1455 of yacc.c  */
#line 1148 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typeId) = new ast::A_TypeId((yyvsp[(1) - (4)].declspecList), (yyvsp[(2) - (4)].declarator)) ;}
    break;

  case 104:

/* Line 1455 of yacc.c  */
#line 1149 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typeId) = new ast::A_TypeId((yyvsp[(1) - (2)].declspecList), (yyvsp[(2) - (2)].declarator)) ;}
    break;

  case 105:

/* Line 1455 of yacc.c  */
#line 1150 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typeId) = new ast::A_TypeId((yyvsp[(1) - (4)].declspecList), (yyvsp[(2) - (4)].declarator), (yyvsp[(4) - (4)].exp)) ;}
    break;

  case 106:

/* Line 1455 of yacc.c  */
#line 1153 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONST), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 107:

/* Line 1455 of yacc.c  */
#line 1154 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_VOLATILE), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 108:

/* Line 1455 of yacc.c  */
#line 1155 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].simpleTypeSpec)), NULL) ;}
    break;

  case 109:

/* Line 1455 of yacc.c  */
#line 1156 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].simpleTypeSpec)), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 110:

/* Line 1455 of yacc.c  */
#line 1157 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList((yyvsp[(1) - (1)].declspec), NULL) ;}
    break;

  case 111:

/* Line 1455 of yacc.c  */
#line 1159 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_NameType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].exp)), NULL) ;}
    break;

  case 112:

/* Line 1455 of yacc.c  */
#line 1160 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_NameType((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].exp)), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 113:

/* Line 1455 of yacc.c  */
#line 1161 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecExtModifier((yylsp[(1) - (5)]), Reverse((yyvsp[(3) - (5)].declspecExtList))), (yyvsp[(5) - (5)].declspecList)) ;}
    break;

  case 114:

/* Line 1455 of yacc.c  */
#line 1164 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].simpleTypeSpec)), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 115:

/* Line 1455 of yacc.c  */
#line 1165 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].simpleTypeSpec)), NULL) ;}
    break;

  case 116:

/* Line 1455 of yacc.c  */
#line 1166 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONST), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 117:

/* Line 1455 of yacc.c  */
#line 1167 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONST), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 118:

/* Line 1455 of yacc.c  */
#line 1168 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_CONST), NULL) ;}
    break;

  case 119:

/* Line 1455 of yacc.c  */
#line 1169 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_CONST), NULL) ;}
    break;

  case 120:

/* Line 1455 of yacc.c  */
#line 1172 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONST), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 121:

/* Line 1455 of yacc.c  */
#line 1173 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_VOLATILE), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 122:

/* Line 1455 of yacc.c  */
#line 1174 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_CONST), NULL) ;}
    break;

  case 123:

/* Line 1455 of yacc.c  */
#line 1175 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_VOLATILE), NULL) ;}
    break;

  case 124:

/* Line 1455 of yacc.c  */
#line 1178 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declarator) = new ast::A_DirectDeclaratorDeclarator((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].directDeclarator)) ;}
    break;

  case 125:

/* Line 1455 of yacc.c  */
#line 1179 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declarator) = new ast::A_PtrDeclarator((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].num), (yyvsp[(2) - (2)].declarator)) ;}
    break;

  case 126:

/* Line 1455 of yacc.c  */
#line 1182 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declarator) = NULL ;}
    break;

  case 128:

/* Line 1455 of yacc.c  */
#line 1188 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorParen((yyvsp[(1) - (6)].directDeclarator), (yyvsp[(3) - (6)].paramDecls), (yyvsp[(5) - (6)].declspecList)) ;}
    break;

  case 129:

/* Line 1455 of yacc.c  */
#line 1189 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorArray((yyvsp[(1) - (4)].directDeclarator), (yyvsp[(3) - (4)].exp)) ;}
    break;

  case 130:

/* Line 1455 of yacc.c  */
#line 1190 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { ast::A_DirectDeclaratorParen(NULL, (yyvsp[(2) - (5)].paramDecls), (yyvsp[(4) - (5)].declspecList)) ;}
    break;

  case 131:

/* Line 1455 of yacc.c  */
#line 1191 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DirectDeclaratorArray(NULL, (yyvsp[(2) - (3)].exp)) ;}
    break;

  case 132:

/* Line 1455 of yacc.c  */
#line 1192 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.directDeclarator) = ast::A_DeclaratorDirectDeclarator((yylsp[(2) - (3)]), (yyvsp[(2) - (3)].declarator)) ;}
    break;

  case 133:

/* Line 1455 of yacc.c  */
#line 1197 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BoolExp(0) ;}
    break;

  case 134:

/* Line 1455 of yacc.c  */
#line 1198 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BoolExp(1) ;}
    break;

  case 135:

/* Line 1455 of yacc.c  */
#line 1199 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_Int32Exp((yyvsp[(1) - (1)].num)) ;}
    break;

  case 136:

/* Line 1455 of yacc.c  */
#line 1200 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_DoubleExp((yyvsp[(1) - (1)].doubleValue)) ;}
    break;

  case 137:

/* Line 1455 of yacc.c  */
#line 1201 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_StringExp((yyvsp[(1) - (1)].string_literal)) ;}
    break;

  case 138:

/* Line 1455 of yacc.c  */
#line 1202 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_LStringExp((yyvsp[(1) - (1)].string_literal)) ;}
    break;

  case 139:

/* Line 1455 of yacc.c  */
#line 1203 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::CharLiteralExp((yyvsp[(1) - (1)].num)) ;}
    break;

  case 140:

/* Line 1455 of yacc.c  */
#line 1204 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::NullLiteralExp() ;}
    break;

  case 142:

/* Line 1455 of yacc.c  */
#line 1208 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_ThisExp() ;}
    break;

  case 143:

/* Line 1455 of yacc.c  */
#line 1209 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = (yyvsp[(2) - (3)].exp);}
    break;

  case 145:

/* Line 1455 of yacc.c  */
#line 1234 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
			StringA* identifier = (yyvsp[(1) - (1)].id);

			g_lastScope = g_pScope;

			if (g_scopeStack2.cont.size() == 0)
			{
				Scope* pScope = parse_LookupScopeNameRecurse(g_pScope2, identifier);
				if (pScope)
				{
					if (pScope->m_pNamespace->GetClass() && pScope->m_pNamespace->GetClass()->m_pInstantiatedFromArgs)
					{
						ptoken = new ast::Expression2List(new ast::Expression2(cpp_exp_lloc, YTY, pScope->m_pNamespace->GetClass()->m_pInstantiatedFromClass->m_pScope), ptoken);
						g_scopeStack2.push(pScope->m_pNamespace->GetClass()->m_pInstantiatedFromClass->m_pScope);
					}
					else
					{
						if (pScope->m_pNamespace->GetClass() && pScope->m_pNamespace->GetClass()->m_pTemplateParams)
						{
							ptoken = new ast::Expression2List(new ast::Expression2(cpp_exp_lloc, YTT, pScope), ptoken);
							g_scopeStack2.push(pScope);
						}
						else
						{
							ptoken = new ast::Expression2List(new ast::Expression2(cpp_exp_lloc, YTY, pScope), ptoken);
							g_scopeStack2.push(pScope);
						}
					}
				}
				else
				{
					Type* pType = parse_LookupTypeNameRecurse(g_pScope2, identifier);
					if (pType)
					{
						ptoken = new ast::Expression2List(new ast::Expression2(cpp_exp_lloc, YTY), ptoken);
						g_scopeStack2.push(NULL);
					}
					else
					{
						ptoken = new ast::Expression2List(new ast::Expression2((yylsp[(1) - (1)])/*cpp_exp_lloc*/, NTY), ptoken);
						g_scopeStack2.push(NULL);
					}
				}
			}
			else
			{
				if (g_scopeStack2.top() == NULL)
				{
					ptoken = new ast::Expression2List(new ast::Expression2(cpp_exp_lloc, NTY), ptoken);
					g_scopeStack2.push(NULL);
				}
				else
				{
					Scope* pScope = parse_LookupScopeName(g_scopeStack2.top(), identifier);
					if (pScope)
					{
						if (pScope->m_pNamespace->GetClass() && pScope->m_pNamespace->GetClass()->m_pInstantiatedFromArgs)
						{
							ptoken = new ast::Expression2List(new ast::Expression2(cpp_exp_lloc, YTY, pScope->m_pNamespace->GetClass()->m_pInstantiatedFromClass->m_pScope), ptoken);
							ASSERT(pScope->m_pNamespace->GetClass()->m_pInstantiatedFromClass->m_pScope);
							g_scopeStack2.push(pScope->m_pNamespace->GetClass()->m_pInstantiatedFromClass->m_pScope);
						}
						else
						{
							if (pScope->m_pNamespace->GetClass() && pScope->m_pNamespace->GetClass()->m_pTemplateParams)
							{
								ptoken = new ast::Expression2List(new ast::Expression2(cpp_exp_lloc, YTT, pScope), ptoken);
								ASSERT(pScope);
								g_scopeStack2.push(pScope);
							}
							else
							{
								ptoken = new ast::Expression2List(new ast::Expression2(cpp_exp_lloc, YTY, pScope), ptoken);
								ASSERT(pScope);
								g_scopeStack2.push(pScope);
							}
						}
					}
					else
					{
						Type* pType = parse_LookupTypeName(g_scopeStack2.top(), identifier);

						if (pType)
						{
							ptoken = new ast::Expression2List(new ast::Expression2(cpp_exp_lloc, YTY), ptoken);
							g_scopeStack2.push(NULL);
						}
						else
						{
							ptoken = new ast::Expression2List(new ast::Expression2(cpp_exp_lloc, NTY), ptoken);
							g_scopeStack2.push(NULL);
						}
					}
				}
			}

			if (g_pClass2)
			{
				if (*(yyval.id) == *g_pClass2->m_name)
				{
					ptoken = new ast::Expression2List(new ast::Expression2(cpp_exp_lloc, CTORN), ptoken);
				//	g_scopeStack2.pop();
				}
			}

			(yyval.id) = identifier;
		;}
    break;

  case 147:

/* Line 1455 of yacc.c  */
#line 1347 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
		g_scopeStack2Stack.push(g_scopeStack2);
		g_scopeStack2.cont.clear();
		;}
    break;

  case 148:

/* Line 1455 of yacc.c  */
#line 1353 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
		g_scopeStack2 = g_scopeStack2Stack.top();
		g_scopeStack2Stack.pop();

		(yyval.exp) = ast::A_TemplateId((yyvsp[(1) - (6)].id), (yyvsp[(5) - (6)].templateArgumentList));
		;}
    break;

  case 149:

/* Line 1455 of yacc.c  */
#line 1362 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
		g_scopeStack2Stack.push(g_scopeStack2);
		g_scopeStack2.cont.clear();
		;}
    break;

  case 150:

/* Line 1455 of yacc.c  */
#line 1368 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
		g_scopeStack2 = g_scopeStack2Stack.top();
		g_scopeStack2Stack.pop();

		(yyval.exp) = ast::A_TemplateId((yyvsp[(1) - (6)].id), (yyvsp[(5) - (6)].templateArgumentList));
		;}
    break;

  case 151:

/* Line 1455 of yacc.c  */
#line 1376 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_TemplateId((yyvsp[(1) - (2)].id), NULL); ;}
    break;

  case 152:

/* Line 1455 of yacc.c  */
#line 1377 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_TemplateId((yyvsp[(1) - (2)].id), NULL); ;}
    break;

  case 154:

/* Line 1455 of yacc.c  */
#line 1395 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_TemplateId((yyvsp[(1) - (2)].id), NULL); ;}
    break;

  case 155:

/* Line 1455 of yacc.c  */
#line 1396 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_TemplateId((yyvsp[(1) - (2)].id), NULL); ;}
    break;

  case 157:

/* Line 1455 of yacc.c  */
#line 1408 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_TemplateId((yyvsp[(1) - (2)].id), NULL); ;}
    break;

  case 158:

/* Line 1455 of yacc.c  */
#line 1409 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_TemplateId((yyvsp[(1) - (2)].id), NULL); ;}
    break;

  case 160:

/* Line 1455 of yacc.c  */
#line 1414 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (1)]), '::', (yyvsp[(1) - (1)].exp), NULL)
						;}
    break;

  case 161:

/* Line 1455 of yacc.c  */
#line 1418 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '::', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp));

							Scope* top = g_scopeStack2.top();
							g_scopeStack2.pop();

							g_lastScope = g_scopeStack2.top();
							g_scopeStack2.pop();

							g_scopeStack2.push(top);
						;}
    break;

  case 162:

/* Line 1455 of yacc.c  */
#line 1436 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (3)]), '~', ast::A_TemplateId((yyvsp[(2) - (3)].id), NULL)); ;}
    break;

  case 163:

/* Line 1455 of yacc.c  */
#line 1437 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (3)]), '~', ast::A_TemplateId((yyvsp[(2) - (3)].id), NULL)); ;}
    break;

  case 164:

/* Line 1455 of yacc.c  */
#line 1438 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (3)]), '~', ast::A_TemplateId((yyvsp[(2) - (3)].id), NULL)); ;}
    break;

  case 165:

/* Line 1455 of yacc.c  */
#line 1439 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (4)]), '~', ast::A_TemplateId((yyvsp[(2) - (4)].id), NULL)); ;}
    break;

  case 166:

/* Line 1455 of yacc.c  */
#line 1440 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (4)]), '~', ast::A_TemplateId((yyvsp[(2) - (4)].id), NULL)); ;}
    break;

  case 167:

/* Line 1455 of yacc.c  */
#line 1441 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (4)]), '~', ast::A_TemplateId((yyvsp[(2) - (4)].id), NULL)); ;}
    break;

  case 168:

/* Line 1455 of yacc.c  */
#line 1445 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (1)]), '::', (yyvsp[(1) - (1)].exp), NULL)
						;}
    break;

  case 169:

/* Line 1455 of yacc.c  */
#line 1449 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '::', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp));

							Scope* top = g_scopeStack2.top();
							g_scopeStack2.pop();

							g_lastScope = g_scopeStack2.top();
							g_scopeStack2.pop();

							g_scopeStack2.push(top);
						;}
    break;

  case 170:

/* Line 1455 of yacc.c  */
#line 1463 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
					g_scopeStack2.pop();
					;}
    break;

  case 171:

/* Line 1455 of yacc.c  */
#line 1486 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (2)]), '::', ast::A_TemplateId((yyvsp[(1) - (2)].id), NULL), NULL); ;}
    break;

  case 172:

/* Line 1455 of yacc.c  */
#line 1489 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (1)]), '::', (yyvsp[(1) - (1)].exp), NULL); ;}
    break;

  case 173:

/* Line 1455 of yacc.c  */
#line 1492 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
					(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '::', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp));

					Scope* top = g_scopeStack2.top();
					g_scopeStack2.pop();

					g_lastScope = g_scopeStack2.top();
					g_scopeStack2.pop();

					g_scopeStack2.push(top);
				;}
    break;

  case 174:

/* Line 1455 of yacc.c  */
#line 1505 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (1)]), '::', (yyvsp[(1) - (1)].exp), NULL); ;}
    break;

  case 175:

/* Line 1455 of yacc.c  */
#line 1507 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
									(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '::', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp));

									Scope* top = g_scopeStack2.top();
									g_scopeStack2.pop();

									g_lastScope = g_scopeStack2.top();
									g_scopeStack2.pop();

									g_scopeStack2.push(top);
								;}
    break;

  case 176:

/* Line 1455 of yacc.c  */
#line 1520 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (2)]), '::', ast::A_TemplateId((yyvsp[(1) - (2)].id), NULL), NULL); ;}
    break;

  case 177:

/* Line 1455 of yacc.c  */
#line 1521 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '::', ast::A_UnopExp((yylsp[(1) - (3)]), '~', ast::A_TemplateId((yyvsp[(2) - (3)].id), NULL)), NULL); ;}
    break;

  case 178:

/* Line 1455 of yacc.c  */
#line 1523 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (1)]), '::', (yyvsp[(1) - (1)].exp), NULL); ;}
    break;

  case 179:

/* Line 1455 of yacc.c  */
#line 1527 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
									(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '::', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp));

									Scope* top = g_scopeStack2.top();
									g_scopeStack2.pop();

									g_lastScope = g_scopeStack2.top();
									g_scopeStack2.pop();

									g_scopeStack2.push(top);
								;}
    break;

  case 180:

/* Line 1455 of yacc.c  */
#line 1546 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = 'new' ;}
    break;

  case 181:

/* Line 1455 of yacc.c  */
#line 1547 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = 'del' ;}
    break;

  case 182:

/* Line 1455 of yacc.c  */
#line 1548 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = 'new[' ;}
    break;

  case 183:

/* Line 1455 of yacc.c  */
#line 1549 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = 'del[' ;}
    break;

  case 184:

/* Line 1455 of yacc.c  */
#line 1550 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '=' ;}
    break;

  case 185:

/* Line 1455 of yacc.c  */
#line 1551 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '<' ;}
    break;

  case 186:

/* Line 1455 of yacc.c  */
#line 1552 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '>' ;}
    break;

  case 187:

/* Line 1455 of yacc.c  */
#line 1553 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '+' ;}
    break;

  case 188:

/* Line 1455 of yacc.c  */
#line 1554 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '-' ;}
    break;

  case 189:

/* Line 1455 of yacc.c  */
#line 1555 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '/' ;}
    break;

  case 190:

/* Line 1455 of yacc.c  */
#line 1556 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '%' ;}
    break;

  case 191:

/* Line 1455 of yacc.c  */
#line 1557 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '!' ;}
    break;

  case 192:

/* Line 1455 of yacc.c  */
#line 1558 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '~' ;}
    break;

  case 193:

/* Line 1455 of yacc.c  */
#line 1559 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '==' ;}
    break;

  case 194:

/* Line 1455 of yacc.c  */
#line 1560 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '!=' ;}
    break;

  case 195:

/* Line 1455 of yacc.c  */
#line 1561 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '<=' ;}
    break;

  case 196:

/* Line 1455 of yacc.c  */
#line 1562 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '>=' ;}
    break;

  case 197:

/* Line 1455 of yacc.c  */
#line 1563 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '()' ;}
    break;

  case 198:

/* Line 1455 of yacc.c  */
#line 1564 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '[]' ;}
    break;

  case 199:

/* Line 1455 of yacc.c  */
#line 1565 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '++' ;}
    break;

  case 200:

/* Line 1455 of yacc.c  */
#line 1566 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '--' ;}
    break;

  case 201:

/* Line 1455 of yacc.c  */
#line 1567 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '|' ;}
    break;

  case 202:

/* Line 1455 of yacc.c  */
#line 1568 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '^' ;}
    break;

  case 203:

/* Line 1455 of yacc.c  */
#line 1569 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '&' ;}
    break;

  case 204:

/* Line 1455 of yacc.c  */
#line 1570 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '*' ;}
    break;

  case 205:

/* Line 1455 of yacc.c  */
#line 1571 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '->' ;}
    break;

  case 206:

/* Line 1455 of yacc.c  */
#line 1572 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '<<' ;}
    break;

  case 207:

/* Line 1455 of yacc.c  */
#line 1573 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '>>' ;}
    break;

  case 208:

/* Line 1455 of yacc.c  */
#line 1574 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '|=' ;}
    break;

  case 209:

/* Line 1455 of yacc.c  */
#line 1575 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '^=' ;}
    break;

  case 210:

/* Line 1455 of yacc.c  */
#line 1576 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '&=' ;}
    break;

  case 211:

/* Line 1455 of yacc.c  */
#line 1577 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '<<=' ;}
    break;

  case 212:

/* Line 1455 of yacc.c  */
#line 1578 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '>>=' ;}
    break;

  case 213:

/* Line 1455 of yacc.c  */
#line 1579 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '+=' ;}
    break;

  case 214:

/* Line 1455 of yacc.c  */
#line 1580 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '-=' ;}
    break;

  case 215:

/* Line 1455 of yacc.c  */
#line 1581 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '*=' ;}
    break;

  case 216:

/* Line 1455 of yacc.c  */
#line 1582 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '/=' ;}
    break;

  case 217:

/* Line 1455 of yacc.c  */
#line 1583 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '%=' ;}
    break;

  case 218:

/* Line 1455 of yacc.c  */
#line 1586 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_OperatorExp((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].num)); g_scopeStack2.push(NULL); ;}
    break;

  case 219:

/* Line 1455 of yacc.c  */
#line 1592 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (1)]), '::', (yyvsp[(1) - (1)].exp), NULL)
						;}
    break;

  case 220:

/* Line 1455 of yacc.c  */
#line 1596 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '::', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp));

							Scope* top = g_scopeStack2.top();
							g_scopeStack2.pop();
							g_scopeStack2.pop();

							g_scopeStack2.push(top);
						;}
    break;

  case 221:

/* Line 1455 of yacc.c  */
#line 1608 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (1)]), '::', (yyvsp[(1) - (1)].exp), NULL)
						;}
    break;

  case 222:

/* Line 1455 of yacc.c  */
#line 1612 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (2)]), '::', (yyvsp[(1) - (2)].exp), ast::A_BinopExp((yylsp[(2) - (2)]), '::', NULL, NULL));
						;}
    break;

  case 223:

/* Line 1455 of yacc.c  */
#line 1616 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '::', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp));

							Scope* top = g_scopeStack2.top();
							g_scopeStack2.pop();
							g_scopeStack2.pop();

							g_scopeStack2.push(top);
						;}
    break;

  case 224:

/* Line 1455 of yacc.c  */
#line 1646 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
						(yyval.exp) = (yyvsp[(1) - (1)].exp);
						g_scopeStack2.pop();
					;}
    break;

  case 225:

/* Line 1455 of yacc.c  */
#line 1651 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
						ASSERT(0);
						(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (2)]), '::', NULL, (yyvsp[(2) - (2)].exp))
					;}
    break;

  case 226:

/* Line 1455 of yacc.c  */
#line 1660 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
						(yyval.exp) = (yyvsp[(1) - (1)].exp);
						g_scopeStack2.pop();
					;}
    break;

  case 227:

/* Line 1455 of yacc.c  */
#line 1670 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.exp) = (yyvsp[(1) - (1)].exp);
								g_scopeStack2.pop();
							;}
    break;

  case 228:

/* Line 1455 of yacc.c  */
#line 1675 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (2)]), '::', NULL, (yyvsp[(2) - (2)].exp));
								g_scopeStack2.pop();
							;}
    break;

  case 229:

/* Line 1455 of yacc.c  */
#line 1684 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.exp) = (yyvsp[(1) - (1)].exp);
								g_scopeStack2.pop();
							;}
    break;

  case 230:

/* Line 1455 of yacc.c  */
#line 1689 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.exp) = ast::A_BinopExp((yylsp[(1) - (2)]), '::', NULL, (yyvsp[(2) - (2)].exp));
								g_scopeStack2.pop();
							;}
    break;

  case 231:

/* Line 1455 of yacc.c  */
#line 1706 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
	g_scopeStack2Stack.push(g_scopeStack2);
	g_scopeStack2.cont.clear();
;}
    break;

  case 232:

/* Line 1455 of yacc.c  */
#line 1711 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
	g_scopeStack2 = g_scopeStack2Stack.top();
	g_scopeStack2Stack.pop();

	(yyval.exp) = new ast::ConversionExp(new ast::A_TypeId((yyvsp[(3) - (4)].declspecList), (yyvsp[(4) - (4)].declarator))); g_scopeStack2.push(NULL);
;}
    break;

  case 233:

/* Line 1455 of yacc.c  */
#line 1719 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONST), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 234:

/* Line 1455 of yacc.c  */
#line 1720 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].simpleTypeSpec)), NULL) ;}
    break;

  case 235:

/* Line 1455 of yacc.c  */
#line 1721 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].simpleTypeSpec)), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 236:

/* Line 1455 of yacc.c  */
#line 1722 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_NameType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].exp)), NULL) ;}
    break;

  case 237:

/* Line 1455 of yacc.c  */
#line 1725 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_CONST), NULL) ;}
    break;

  case 238:

/* Line 1455 of yacc.c  */
#line 1726 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONST), NULL) ;}
    break;

  case 239:

/* Line 1455 of yacc.c  */
#line 1727 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].simpleTypeSpec)), NULL) ;}
    break;

  case 240:

/* Line 1455 of yacc.c  */
#line 1728 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].simpleTypeSpec)), NULL) ;}
    break;

  case 241:

/* Line 1455 of yacc.c  */
#line 1737 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declarator) = new ast::A_PtrDeclarator((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].num), (yyvsp[(2) - (2)].declarator)) ;}
    break;

  case 242:

/* Line 1455 of yacc.c  */
#line 1740 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declarator) = NULL ;}
    break;

  case 244:

/* Line 1455 of yacc.c  */
#line 1744 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typeId) = new ast::A_TypeId((yyvsp[(1) - (2)].declspecList), (yyvsp[(2) - (2)].declarator)) ;}
    break;

  case 245:

/* Line 1455 of yacc.c  */
#line 1748 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								g_lastScope = g_scopeStack.top();
								g_scopeStack.pop();

								g_pScope2 = g_scopeStack.top();
								g_scopeStack.pop();

								g_pScope = g_scopeStack.top();
								g_scopeStack.pop();
;}
    break;

  case 246:

/* Line 1455 of yacc.c  */
#line 1759 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::FunDefDecl((yylsp[(1) - (9)]), (yyvsp[(1) - (9)].declspecList), new ast::A_DirectDeclaratorDeclarator((yylsp[(1) - (9)]), ast::A_DirectDeclaratorParen(ast::A_DirectDeclaratorId((yylsp[(2) - (9)]), (yyvsp[(2) - (9)].exp)), (yyvsp[(4) - (9)].paramDecls), NULL)), (yyvsp[(7) - (9)].expList), (yyvsp[(9) - (9)].compoundstm));
							//	LOG("ctor/dtor\n");
							;}
    break;

  case 247:

/* Line 1455 of yacc.c  */
#line 1764 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::FunDefDecl((yylsp[(3) - (4)]), Reverse((yyvsp[(1) - (4)].declspecList), (yyvsp[(2) - (4)].declspecList)), (yyvsp[(3) - (4)].declarator), NULL, (yyvsp[(4) - (4)].compoundstm));
							//	LOG("basic_type\n");
							;}
    break;

  case 248:

/* Line 1455 of yacc.c  */
#line 1769 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::FunDefDecl((yylsp[(3) - (4)]), Reverse((yyvsp[(1) - (4)].declspecList), new ast::DeclSpecList((yyvsp[(2) - (4)].declspec), NULL)), (yyvsp[(3) - (4)].declarator), NULL, (yyvsp[(4) - (4)].compoundstm));
							//	LOG("elaborated\n");
							;}
    break;

  case 249:

/* Line 1455 of yacc.c  */
#line 1774 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::FunDefDecl((yylsp[(3) - (4)]), Reverse((yyvsp[(1) - (4)].declspecList), new ast::DeclSpecList(new ast::A_NameType((yylsp[(2) - (4)]), (yyvsp[(2) - (4)].exp)), NULL)), (yyvsp[(3) - (4)].declarator), NULL, (yyvsp[(4) - (4)].compoundstm));
							//	LOG("type\n");
							;}
    break;

  case 250:

/* Line 1455 of yacc.c  */
#line 1779 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::FunDefDecl((yylsp[(2) - (3)]), Reverse((yyvsp[(1) - (3)].declspecList)), (yyvsp[(2) - (3)].declarator), NULL, (yyvsp[(3) - (3)].compoundstm));
							;}
    break;

  case 251:

/* Line 1455 of yacc.c  */
#line 1800 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::FunDefDecl((yylsp[(1) - (4)]), Reverse((yyvsp[(1) - (4)].declspecList), (yyvsp[(2) - (4)].declspecList)), (yyvsp[(3) - (4)].declarator), NULL, (yyvsp[(4) - (4)].compoundstm));
							//	LOG("basic_type\n");
							;}
    break;

  case 252:

/* Line 1455 of yacc.c  */
#line 1805 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::FunDefDecl((yylsp[(1) - (4)]), Reverse((yyvsp[(1) - (4)].declspecList), new ast::DeclSpecList((yyvsp[(2) - (4)].declspec), NULL)), (yyvsp[(3) - (4)].declarator), NULL, (yyvsp[(4) - (4)].compoundstm));
							//	LOG("elaborated\n");
							;}
    break;

  case 253:

/* Line 1455 of yacc.c  */
#line 1810 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::FunDefDecl((yylsp[(1) - (4)]), Reverse((yyvsp[(1) - (4)].declspecList), new ast::DeclSpecList(new ast::A_NameType((yylsp[(2) - (4)]), (yyvsp[(2) - (4)].exp)), NULL)), (yyvsp[(3) - (4)].declarator), NULL, (yyvsp[(4) - (4)].compoundstm));
							//	LOG("type\n");
							;}
    break;

  case 254:

/* Line 1455 of yacc.c  */
#line 1815 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::FunDefDecl((yylsp[(1) - (3)]), Reverse((yyvsp[(1) - (3)].declspecList)), (yyvsp[(2) - (3)].declarator), NULL, (yyvsp[(3) - (3)].compoundstm));
							//	LOG("type\n");
							;}
    break;

  case 255:

/* Line 1455 of yacc.c  */
#line 1820 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::FunDefDecl((yylsp[(2) - (9)]), (yyvsp[(1) - (9)].declspecList), new ast::A_DirectDeclaratorDeclarator((yylsp[(1) - (9)]), ast::A_DirectDeclaratorParen(ast::A_DirectDeclaratorId((yylsp[(3) - (9)]), (yyvsp[(3) - (9)].exp)), (yyvsp[(5) - (9)].paramDecls), NULL)), (yyvsp[(8) - (9)].expList), (yyvsp[(9) - (9)].compoundstm));
							//	LOG("ctor\n");
								ASSERT(g_scopeStack2.cont.size() == 0);
								
							;}
    break;

  case 256:

/* Line 1455 of yacc.c  */
#line 1827 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::FunDefDecl((yylsp[(1) - (8)]), (yyvsp[(1) - (8)].declspecList), new ast::A_DirectDeclaratorDeclarator((yylsp[(1) - (8)]), ast::A_DirectDeclaratorParen(ast::A_DirectDeclaratorId((yylsp[(2) - (8)]), (yyvsp[(2) - (8)].exp)), (yyvsp[(4) - (8)].paramDecls), NULL)), (yyvsp[(7) - (8)].expList), (yyvsp[(8) - (8)].compoundstm));
							//	LOG("ctor\n");
							;}
    break;

  case 257:

/* Line 1455 of yacc.c  */
#line 1846 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = (yyvsp[(2) - (2)].expList) ;}
    break;

  case 258:

/* Line 1455 of yacc.c  */
#line 1849 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = new ast::ExpressionList((yyvsp[(1) - (1)].exp), NULL); ;}
    break;

  case 259:

/* Line 1455 of yacc.c  */
#line 1850 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = new ast::ExpressionList((yyvsp[(3) - (3)].exp), (yyvsp[(1) - (3)].expList)); ;}
    break;

  case 260:

/* Line 1455 of yacc.c  */
#line 1853 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::CallExp((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].exp), (yyvsp[(3) - (4)].expList)) ;}
    break;

  case 263:

/* Line 1455 of yacc.c  */
#line 1859 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = NULL ;}
    break;

  case 265:

/* Line 1455 of yacc.c  */
#line 1864 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
						g_scopeStack.push(g_pScope);
						g_scopeStack.push(g_pScope2);

						Scope* pFunctionScope = new Scope;

						ASSERT(g_lastScope);

						if (g_lastScope->m_pNamespace && g_lastScope->m_pNamespace->GetClass())
						{
							pFunctionScope->m_pParentScope = g_lastScope;
						}
						else
						{
							pFunctionScope->m_pParentScope = g_pScope2;
						}

						g_pScope = pFunctionScope;
						g_pScope2 = pFunctionScope;
					;}
    break;

  case 266:

/* Line 1455 of yacc.c  */
#line 1885 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
						g_pScope2 = g_scopeStack.top();
						g_scopeStack.pop();

						g_pScope = g_scopeStack.top();
						g_scopeStack.pop();
					;}
    break;

  case 267:

/* Line 1455 of yacc.c  */
#line 1892 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.compoundstm) = new ast::CompoundStm((yylsp[(1) - (5)]), (yylsp[(4) - (5)]), (yyvsp[(3) - (5)].stmList)) ;}
    break;

  case 268:

/* Line 1455 of yacc.c  */
#line 1895 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.compoundstm) = new ast::CompoundStm((yylsp[(1) - (3)]), (yylsp[(3) - (3)]), (yyvsp[(2) - (3)].stmList)) ;}
    break;

  case 269:

/* Line 1455 of yacc.c  */
#line 1898 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stmList) = NULL ;}
    break;

  case 271:

/* Line 1455 of yacc.c  */
#line 1907 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							g_scopeStack.push(g_pScope);
							g_scopeStack.push(g_pScope2);
							g_scopeStack.push(g_lastScope);

/*

Below is for:

sometype classtype::memfun(sometype2 x);

sometype2 looks up in classtype scope


*/

							ASSERT(g_lastScope);
							if (g_lastScope->m_pNamespace && g_lastScope->m_pNamespace->GetClass())
							{
								ASSERT(g_lastScope->m_pNamespace->GetClass());

								ASSERT(g_pScope2 != g_lastScope);
								g_lastScope->m_pParentScope = g_pScope2;
								g_pScope2 = g_lastScope;
							}

						;}
    break;

  case 272:

/* Line 1455 of yacc.c  */
#line 1937 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								g_lastScope = g_scopeStack.top();
								g_scopeStack.pop();

								g_pScope2 = g_scopeStack.top();
								g_scopeStack.pop();

								g_pScope = g_scopeStack.top();
								g_scopeStack.pop();

								//g_pScope2 = g_pScope;

								(yyval.declaration) = new ast::A_SimpleDeclaration((yyvsp[(1) - (6)].declspecList)? (yylsp[(1) - (6)]): (yylsp[(2) - (6)]), (yyvsp[(1) - (6)].declspecList), new ast::InitDeclaratorList(new ast::InitDeclarator(new ast::A_DirectDeclaratorDeclarator((yylsp[(1) - (6)]), ast::A_DirectDeclaratorParen(ast::A_DirectDeclaratorId((yylsp[(2) - (6)]), (yyvsp[(2) - (6)].exp)), (yyvsp[(4) - (6)].paramDecls), NULL))), NULL));
								LOG("ctor/dtor\n");
							;}
    break;

  case 273:

/* Line 1455 of yacc.c  */
#line 1953 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::A_SimpleDeclaration((yyvsp[(1) - (3)].declspecList)? (yylsp[(1) - (3)]): (yylsp[(2) - (3)]), Reverse((yyvsp[(1) - (3)].declspecList), (yyvsp[(2) - (3)].declspecList)), (yyvsp[(3) - (3)].initDeclaratorList));
							//	LOG("basic_type\n");
							;}
    break;

  case 274:

/* Line 1455 of yacc.c  */
#line 1958 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::A_SimpleDeclaration((yyvsp[(1) - (3)].declspecList)? (yylsp[(1) - (3)]): (yylsp[(2) - (3)]), Reverse((yyvsp[(1) - (3)].declspecList), new ast::DeclSpecList((yyvsp[(2) - (3)].declspec), NULL)), (yyvsp[(3) - (3)].initDeclaratorList));
							//	LOG("elaborated\n");
							;}
    break;

  case 275:

/* Line 1455 of yacc.c  */
#line 1963 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::A_SimpleDeclaration((yyvsp[(1) - (3)].declspecList)? (yylsp[(1) - (3)]): (yylsp[(2) - (3)]), Reverse((yyvsp[(1) - (3)].declspecList), new ast::DeclSpecList(new ast::A_NameType((yylsp[(2) - (3)]), (yyvsp[(2) - (3)].exp)), NULL)), (yyvsp[(3) - (3)].initDeclaratorList));
							//	LOG("type\n");
							;}
    break;

  case 276:

/* Line 1455 of yacc.c  */
#line 1982 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::A_SimpleDeclaration((yylsp[(1) - (3)]), Reverse((yyvsp[(1) - (3)].declspecList), (yyvsp[(2) - (3)].declspecList)), Reverse((yyvsp[(3) - (3)].initDeclaratorList)));
							//	LOG("basic_type\n");
							;}
    break;

  case 277:

/* Line 1455 of yacc.c  */
#line 1987 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::A_SimpleDeclaration((yylsp[(1) - (3)]), Reverse((yyvsp[(1) - (3)].declspecList), new ast::DeclSpecList((yyvsp[(2) - (3)].declspec), NULL)), Reverse((yyvsp[(3) - (3)].initDeclaratorList)));
							//	LOG("elaborated\n");
							;}
    break;

  case 278:

/* Line 1455 of yacc.c  */
#line 1992 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::A_SimpleDeclaration((yylsp[(1) - (3)]), Reverse((yyvsp[(1) - (3)].declspecList), new ast::DeclSpecList(new ast::A_NameType((yylsp[(2) - (3)]), (yyvsp[(2) - (3)].exp)), NULL)), Reverse((yyvsp[(3) - (3)].initDeclaratorList)));
							//	LOG("type\n");
							;}
    break;

  case 279:

/* Line 1455 of yacc.c  */
#line 1997 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::A_SimpleDeclaration((yylsp[(1) - (2)]), Reverse((yyvsp[(1) - (2)].declspecList)), new ast::InitDeclaratorList(new ast::InitDeclarator((yyvsp[(2) - (2)].declarator)), NULL));
							;}
    break;

  case 280:

/* Line 1455 of yacc.c  */
#line 2001 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::A_SimpleDeclaration((yylsp[(1) - (7)]), (yyvsp[(1) - (7)].declspecList), new ast::InitDeclaratorList(new ast::InitDeclarator(new ast::A_DirectDeclaratorDeclarator((yylsp[(1) - (7)]), ast::A_DirectDeclaratorParen(ast::A_DirectDeclaratorId((yylsp[(2) - (7)]), (yyvsp[(3) - (7)].exp)), (yyvsp[(5) - (7)].paramDecls), NULL))), NULL));
							//	LOG("ctor\n");
							;}
    break;

  case 281:

/* Line 1455 of yacc.c  */
#line 2006 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
								(yyval.declaration) = new ast::A_SimpleDeclaration((yylsp[(1) - (6)]), (yyvsp[(1) - (6)].declspecList), new ast::InitDeclaratorList(new ast::InitDeclarator(new ast::A_DirectDeclaratorDeclarator((yylsp[(1) - (6)]), ast::A_DirectDeclaratorParen(ast::A_DirectDeclaratorId((yylsp[(2) - (6)]), (yyvsp[(2) - (6)].exp)), (yyvsp[(4) - (6)].paramDecls), NULL))), NULL));
							//	LOG("ctor\n");
							;}
    break;

  case 282:

/* Line 1455 of yacc.c  */
#line 2026 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].simpleTypeSpec)), NULL) ;}
    break;

  case 283:

/* Line 1455 of yacc.c  */
#line 2027 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].simpleTypeSpec)), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 284:

/* Line 1455 of yacc.c  */
#line 2030 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].simpleTypeSpec)), NULL) ;}
    break;

  case 285:

/* Line 1455 of yacc.c  */
#line 2031 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].simpleTypeSpec)), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 286:

/* Line 1455 of yacc.c  */
#line 2032 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_CONST), NULL) ;}
    break;

  case 287:

/* Line 1455 of yacc.c  */
#line 2033 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONST), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 288:

/* Line 1455 of yacc.c  */
#line 2034 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_VOLATILE), NULL) ;}
    break;

  case 289:

/* Line 1455 of yacc.c  */
#line 2035 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_VOLATILE), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 290:

/* Line 1455 of yacc.c  */
#line 2038 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = NULL ;}
    break;

  case 292:

/* Line 1455 of yacc.c  */
#line 2042 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_CONST), NULL) ;}
    break;

  case 293:

/* Line 1455 of yacc.c  */
#line 2043 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_VOLATILE), NULL) ;}
    break;

  case 294:

/* Line 1455 of yacc.c  */
#line 2044 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_INLINE), NULL) ;}
    break;

  case 295:

/* Line 1455 of yacc.c  */
#line 2045 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_VIRTUAL), NULL) ;}
    break;

  case 296:

/* Line 1455 of yacc.c  */
#line 2046 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_STATIC), NULL) ;}
    break;

  case 297:

/* Line 1455 of yacc.c  */
#line 2047 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_TYPEDEF), NULL) ;}
    break;

  case 298:

/* Line 1455 of yacc.c  */
#line 2048 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_CONSTEXPR), NULL) ;}
    break;

  case 299:

/* Line 1455 of yacc.c  */
#line 2049 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_EXTERN), NULL) ;}
    break;

  case 300:

/* Line 1455 of yacc.c  */
#line 2050 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_EXPLICIT), NULL) ;}
    break;

  case 301:

/* Line 1455 of yacc.c  */
#line 2051 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (1)]), ast::A_FRIEND), NULL) ;}
    break;

  case 302:

/* Line 1455 of yacc.c  */
#line 2052 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecExtModifier((yylsp[(1) - (4)]), Reverse((yyvsp[(3) - (4)].declspecExtList))), NULL) ;}
    break;

  case 303:

/* Line 1455 of yacc.c  */
#line 2053 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONST), (yyvsp[(1) - (2)].declspecList)) ;}
    break;

  case 304:

/* Line 1455 of yacc.c  */
#line 2054 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_VOLATILE), (yyvsp[(1) - (2)].declspecList)) ;}
    break;

  case 305:

/* Line 1455 of yacc.c  */
#line 2055 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_INLINE), (yyvsp[(1) - (2)].declspecList)) ;}
    break;

  case 306:

/* Line 1455 of yacc.c  */
#line 2056 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_VIRTUAL), (yyvsp[(1) - (2)].declspecList)) ;}
    break;

  case 307:

/* Line 1455 of yacc.c  */
#line 2057 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_STATIC), (yyvsp[(1) - (2)].declspecList)) ;}
    break;

  case 308:

/* Line 1455 of yacc.c  */
#line 2058 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_TYPEDEF), (yyvsp[(1) - (2)].declspecList)) ;}
    break;

  case 309:

/* Line 1455 of yacc.c  */
#line 2059 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONSTEXPR), (yyvsp[(1) - (2)].declspecList)) ;}
    break;

  case 310:

/* Line 1455 of yacc.c  */
#line 2060 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_EXTERN), (yyvsp[(1) - (2)].declspecList)) ;}
    break;

  case 311:

/* Line 1455 of yacc.c  */
#line 2061 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_EXPLICIT), (yyvsp[(1) - (2)].declspecList)) ;}
    break;

  case 312:

/* Line 1455 of yacc.c  */
#line 2062 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_FRIEND), (yyvsp[(1) - (2)].declspecList)) ;}
    break;

  case 313:

/* Line 1455 of yacc.c  */
#line 2063 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecExtModifier((yylsp[(1) - (5)]), Reverse((yyvsp[(4) - (5)].declspecExtList))), (yyvsp[(1) - (5)].declspecList)) ;}
    break;

  case 314:

/* Line 1455 of yacc.c  */
#line 2066 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecExt) = new ast::A_DeclSpecExt((yyvsp[(1) - (1)].id)) ;}
    break;

  case 315:

/* Line 1455 of yacc.c  */
#line 2067 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecExt) = new ast::A_DeclSpecExt((yyvsp[(1) - (4)].id), (yyvsp[(3) - (4)].num)) ;}
    break;

  case 316:

/* Line 1455 of yacc.c  */
#line 2069 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecExtList) = new ast::A_DeclSpecExtList((yyvsp[(1) - (1)].declspecExt), NULL); ;}
    break;

  case 317:

/* Line 1455 of yacc.c  */
#line 2070 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecExtList) = new ast::A_DeclSpecExtList((yyvsp[(2) - (2)].declspecExt), (yyvsp[(1) - (2)].declspecExtList)); ;}
    break;

  case 318:

/* Line 1455 of yacc.c  */
#line 2073 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecExtList) = NULL ;}
    break;

  case 320:

/* Line 1455 of yacc.c  */
#line 2106 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONST), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 321:

/* Line 1455 of yacc.c  */
#line 2107 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_VOLATILE), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 322:

/* Line 1455 of yacc.c  */
#line 2108 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_TYPEDEF), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 323:

/* Line 1455 of yacc.c  */
#line 2109 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONSTEXPR), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 324:

/* Line 1455 of yacc.c  */
#line 2110 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_INLINE), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 325:

/* Line 1455 of yacc.c  */
#line 2111 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_EXTERN), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 326:

/* Line 1455 of yacc.c  */
#line 2112 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_STATIC), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 327:

/* Line 1455 of yacc.c  */
#line 2113 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].simpleTypeSpec)), NULL) ;}
    break;

  case 328:

/* Line 1455 of yacc.c  */
#line 2114 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].simpleTypeSpec)), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 329:

/* Line 1455 of yacc.c  */
#line 2115 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList((yyvsp[(1) - (1)].declspec), NULL) ;}
    break;

  case 330:

/* Line 1455 of yacc.c  */
#line 2118 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_NameType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].exp)), NULL) ;}
    break;

  case 331:

/* Line 1455 of yacc.c  */
#line 2122 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_CONST), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 332:

/* Line 1455 of yacc.c  */
#line 2123 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_VOLATILE), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 333:

/* Line 1455 of yacc.c  */
#line 2124 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_TYPEDEF), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 334:

/* Line 1455 of yacc.c  */
#line 2125 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_INLINE), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 335:

/* Line 1455 of yacc.c  */
#line 2126 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_EXTERN), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 336:

/* Line 1455 of yacc.c  */
#line 2127 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecModifier((yylsp[(1) - (2)]), ast::A_STATIC), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 337:

/* Line 1455 of yacc.c  */
#line 2128 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].simpleTypeSpec)), NULL) ;}
    break;

  case 338:

/* Line 1455 of yacc.c  */
#line 2129 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList(new ast::A_DeclSpecBasicType((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].simpleTypeSpec)), (yyvsp[(2) - (2)].declspecList)) ;}
    break;

  case 341:

/* Line 1455 of yacc.c  */
#line 2136 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
									(yyval.declspec) = new ast::A_NameType((yylsp[(1) - (2)]), (yyvsp[(2) - (2)].exp));
								;}
    break;

  case 342:

/* Line 1455 of yacc.c  */
#line 2140 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
									(yyval.declspec) = new ast::A_Class((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].classHead));
									g_pClass = NULL;	// ??
								//	Do_elaborated_class((ast::A_Class*)$$)
								;}
    break;

  case 343:

/* Line 1455 of yacc.c  */
#line 2147 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.memberSpec) = new ast::A_MemberDecl((yyvsp[(1) - (2)].declaration), (yyvsp[(2) - (2)].memberSpec)) ;}
    break;

  case 344:

/* Line 1455 of yacc.c  */
#line 2148 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.memberSpec) = new ast::A_MemberAccessSpec((yyvsp[(1) - (3)].accessSpec), (yyvsp[(3) - (3)].memberSpec)) ;}
    break;

  case 348:

/* Line 1455 of yacc.c  */
#line 2156 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declaration) = (yyvsp[(1) - (2)].declaration), Do(NULL, (yyval.declaration)) ;}
    break;

  case 349:

/* Line 1455 of yacc.c  */
#line 2172 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclaratorList) = new ast::InitDeclaratorList((yyvsp[(1) - (1)].initDeclarator), NULL) ;}
    break;

  case 350:

/* Line 1455 of yacc.c  */
#line 2173 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclaratorList) = new ast::InitDeclaratorList((yyvsp[(3) - (3)].initDeclarator), (yyvsp[(1) - (3)].initDeclaratorList)) ;}
    break;

  case 351:

/* Line 1455 of yacc.c  */
#line 2176 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclaratorList) = NULL ;}
    break;

  case 353:

/* Line 1455 of yacc.c  */
#line 2180 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclarator) = new ast::InitDeclarator((yyvsp[(1) - (2)].declarator), (yyvsp[(2) - (2)].initializer)) ;}
    break;

  case 354:

/* Line 1455 of yacc.c  */
#line 2181 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclarator) = new ast::InitDeclarator(new ast::A_BitfieldDeclarator((yylsp[(1) - (3)]), (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp))); g_scopeStack2.pop(); ;}
    break;

  case 355:

/* Line 1455 of yacc.c  */
#line 2182 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclarator) = new ast::InitDeclarator(new ast::A_BitfieldDeclarator((yylsp[(1) - (3)]), (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp))); g_scopeStack2.pop(); ;}
    break;

  case 356:

/* Line 1455 of yacc.c  */
#line 2185 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.memberSpec) = NULL ;}
    break;

  case 358:

/* Line 1455 of yacc.c  */
#line 2189 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initializer) = NULL ;}
    break;

  case 359:

/* Line 1455 of yacc.c  */
#line 2190 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initializer) = new ast::Initializer((yyvsp[(2) - (2)].exp)); ;}
    break;

  case 360:

/* Line 1455 of yacc.c  */
#line 2195 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclaratorList) = NULL ;}
    break;

  case 361:

/* Line 1455 of yacc.c  */
#line 2196 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclaratorList) = (yyvsp[(1) - (1)].initDeclaratorList);}
    break;

  case 362:

/* Line 1455 of yacc.c  */
#line 2199 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclaratorList) = new ast::InitDeclaratorList((yyvsp[(1) - (1)].initDeclarator), NULL) ;}
    break;

  case 363:

/* Line 1455 of yacc.c  */
#line 2200 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclaratorList) = new ast::InitDeclaratorList((yyvsp[(3) - (3)].initDeclarator), (yyvsp[(1) - (3)].initDeclaratorList)) ;}
    break;

  case 364:

/* Line 1455 of yacc.c  */
#line 2215 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclarator) = new ast::InitDeclarator((yyvsp[(1) - (2)].declarator), (yyvsp[(2) - (2)].initializer)) ;}
    break;

  case 365:

/* Line 1455 of yacc.c  */
#line 2216 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclarator) = new ast::InitDeclarator((yyvsp[(1) - (1)].declarator), NULL) ;}
    break;

  case 366:

/* Line 1455 of yacc.c  */
#line 2219 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclaratorList) = new ast::InitDeclaratorList((yyvsp[(1) - (1)].initDeclarator), NULL) ;}
    break;

  case 367:

/* Line 1455 of yacc.c  */
#line 2220 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclaratorList) = new ast::InitDeclaratorList((yyvsp[(3) - (3)].initDeclarator), (yyvsp[(1) - (3)].initDeclaratorList)) ;}
    break;

  case 368:

/* Line 1455 of yacc.c  */
#line 2223 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclaratorList) = NULL ;}
    break;

  case 369:

/* Line 1455 of yacc.c  */
#line 2224 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclaratorList) = (yyvsp[(1) - (1)].initDeclaratorList);}
    break;

  case 370:

/* Line 1455 of yacc.c  */
#line 2227 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclarator) = new ast::InitDeclarator((yyvsp[(1) - (1)].declarator), NULL) ;}
    break;

  case 371:

/* Line 1455 of yacc.c  */
#line 2228 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initDeclarator) = new ast::InitDeclarator((yyvsp[(1) - (2)].declarator), (yyvsp[(2) - (2)].initializer)) ;}
    break;

  case 372:

/* Line 1455 of yacc.c  */
#line 2231 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initializer) = new ast::Initializer((yyvsp[(2) - (2)].exp)); ;}
    break;

  case 373:

/* Line 1455 of yacc.c  */
#line 2232 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.initializer) = new ast::Initializer((yyvsp[(3) - (4)].expList)); ;}
    break;

  case 377:

/* Line 1455 of yacc.c  */
#line 2240 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::InitClauseExp(Reverse((yyvsp[(2) - (4)].expList))); ;}
    break;

  case 378:

/* Line 1455 of yacc.c  */
#line 2241 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::InitClauseExp(NULL); ;}
    break;

  case 379:

/* Line 1455 of yacc.c  */
#line 2244 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = new ast::ExpressionList((yyvsp[(1) - (1)].exp), NULL); ;}
    break;

  case 380:

/* Line 1455 of yacc.c  */
#line 2245 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = new ast::ExpressionList((yyvsp[(3) - (3)].exp), (yyvsp[(1) - (3)].expList)) ;}
    break;

  case 383:

/* Line 1455 of yacc.c  */
#line 2258 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.classHead) = new ast::A_ClassHead((yylsp[(1) - (3)]), (yyvsp[(1) - (3)].classKey), (yyvsp[(2) - (3)].declspecList), (yyvsp[(3) - (3)].exp)); Do_class_specifier_head((yyval.classHead));;}
    break;

  case 384:

/* Line 1455 of yacc.c  */
#line 2259 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.classHead) = new ast::A_ClassHead((yylsp[(1) - (3)]), (yyvsp[(1) - (3)].classKey), (yyvsp[(2) - (3)].declspecList), (yyvsp[(3) - (3)].exp)); Do_class_specifier_head((yyval.classHead));;}
    break;

  case 385:

/* Line 1455 of yacc.c  */
#line 2272 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = NULL ;}
    break;

  case 387:

/* Line 1455 of yacc.c  */
#line 2276 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList((yyvsp[(1) - (1)].declspec), NULL); ;}
    break;

  case 388:

/* Line 1455 of yacc.c  */
#line 2277 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspecList) = new ast::DeclSpecList((yyvsp[(2) - (2)].declspec), (yyvsp[(1) - (2)].declspecList)); ;}
    break;

  case 389:

/* Line 1455 of yacc.c  */
#line 2280 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declspec) = new ast::A_DeclSpecExtModifier((yylsp[(1) - (4)]), Reverse((yyvsp[(3) - (4)].declspecExtList))); ;}
    break;

  case 390:

/* Line 1455 of yacc.c  */
#line 2283 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = (yyvsp[(2) - (3)].exp) ;}
    break;

  case 391:

/* Line 1455 of yacc.c  */
#line 2286 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = NULL ;}
    break;

  case 393:

/* Line 1455 of yacc.c  */
#line 2290 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {	 (yyval.expList) = new ast::ExpressionList((yyvsp[(1) - (1)].exp), NULL) ;}
    break;

  case 394:

/* Line 1455 of yacc.c  */
#line 2291 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = new ast::ExpressionList((yyvsp[(2) - (2)].exp), (yyvsp[(1) - (2)].expList)) ;}
    break;

  case 395:

/* Line 1455 of yacc.c  */
#line 2295 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							g_scopeStack.push(g_pScope);
							g_scopeStack.push(g_pScope2);

							ast::A_ClassDef* classdef = new ast::A_ClassDef((yylsp[(1) - (3)]), (yyvsp[(1) - (3)].classHead), (yyvsp[(2) - (3)].baseSpecifierList), NULL);
							g_classes.push(classdef);

							Do(classdef);

							g_pScope = g_pClass->m_pScope;
							g_pScope2 = g_pClass->m_pScope;

							g_pClassStack.push(g_pClass2);
							g_pClass2 = g_pClass;
						;}
    break;

  case 396:

/* Line 1455 of yacc.c  */
#line 2311 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							g_pClass2 = g_pClassStack.top();
							g_pClassStack.pop();

							ast::A_ClassDef* classdef = g_classes.top();
							g_classes.pop();

							classdef->m_memberSpec = (yyvsp[(5) - (6)].memberSpec);

							g_pScope2 = g_scopeStack.top();
							g_scopeStack.pop();

							g_pScope = g_scopeStack.top();
							g_scopeStack.pop();

						//	ASSERT(g_pScope);
						//	g_pScope2 = g_pScope;
							(yyval.typespec) = classdef;

							ASSERT(g_scopeStack2.cont.size() == 0);
						;}
    break;

  case 397:

/* Line 1455 of yacc.c  */
#line 2333 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							g_scopeStack.push(g_pScope);
							g_scopeStack.push(g_pScope2);

							ast::A_ClassDef* classdef = new ast::A_ClassDef((yylsp[(1) - (2)]), new ast::A_ClassHead((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].classKey), NULL, NULL), NULL, NULL);
							Do_class_specifier_head(classdef->m_head);

							g_classes.push(classdef);

							Do(classdef);

							g_pScope = g_pClass->m_pScope;
							g_pScope2 = g_pClass->m_pScope;

							g_pClassStack.push(g_pClass2);
							g_pClass2 = g_pClass;
						;}
    break;

  case 398:

/* Line 1455 of yacc.c  */
#line 2351 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {
							g_pClass2 = g_pClassStack.top();
							g_pClassStack.pop();

							ast::A_ClassDef* classdef = g_classes.top();
							g_classes.pop();

							classdef->m_memberSpec = (yyvsp[(4) - (5)].memberSpec);

							g_pScope2 = g_scopeStack.top();
							g_scopeStack.pop();

							g_pScope = g_scopeStack.top();
							g_scopeStack.pop();

							ASSERT(g_pScope);
						//	g_pScope2 = g_pScope;

							(yyval.typespec) = classdef;

							ASSERT(g_scopeStack2.cont.size() == 0);
						;}
    break;

  case 399:

/* Line 1455 of yacc.c  */
#line 2375 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.classKey) = ClassKey_class ;}
    break;

  case 400:

/* Line 1455 of yacc.c  */
#line 2376 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.classKey) = ClassKey_struct ;}
    break;

  case 401:

/* Line 1455 of yacc.c  */
#line 2377 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.classKey) = ClassKey_union ;}
    break;

  case 402:

/* Line 1455 of yacc.c  */
#line 2378 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.classKey) = ClassKey_interface ;}
    break;

  case 403:

/* Line 1455 of yacc.c  */
#line 2381 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.accessSpec) = AccessSpec_Private ;}
    break;

  case 404:

/* Line 1455 of yacc.c  */
#line 2382 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.accessSpec) = AccessSpec_Protected ;}
    break;

  case 405:

/* Line 1455 of yacc.c  */
#line 2383 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.accessSpec) = AccessSpec_Public ;}
    break;

  case 406:

/* Line 1455 of yacc.c  */
#line 2386 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.accessSpec) = AccessSpec_Unspecified ;}
    break;

  case 408:

/* Line 1455 of yacc.c  */
#line 2390 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typespec) = new ast::A_Enum((yylsp[(1) - (5)]), (yyvsp[(2) - (5)].id), NULL, (yyvsp[(4) - (5)].enumList)) ;}
    break;

  case 409:

/* Line 1455 of yacc.c  */
#line 2391 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typespec) = new ast::A_Enum((yylsp[(1) - (7)]), (yyvsp[(2) - (7)].id), (yyvsp[(4) - (7)].declspecList), (yyvsp[(6) - (7)].enumList)) ;}
    break;

  case 410:

/* Line 1455 of yacc.c  */
#line 2404 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.enumList) = new ast::EnumDefList((yyvsp[(1) - (1)].enumDef), NULL) ;}
    break;

  case 411:

/* Line 1455 of yacc.c  */
#line 2405 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.enumList) = (yyvsp[(1) - (2)].enumList) ;}
    break;

  case 412:

/* Line 1455 of yacc.c  */
#line 2406 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.enumList) = new ast::EnumDefList((yyvsp[(3) - (3)].enumDef), (yyvsp[(1) - (3)].enumList)) ;}
    break;

  case 413:

/* Line 1455 of yacc.c  */
#line 2409 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.enumList) = NULL ;}
    break;

  case 414:

/* Line 1455 of yacc.c  */
#line 2410 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.enumList) = (yyvsp[(1) - (1)].enumList) ;}
    break;

  case 415:

/* Line 1455 of yacc.c  */
#line 2413 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.enumDef) = new ast::EnumDefinition((yylsp[(1) - (1)]), (yyvsp[(1) - (1)].id), NULL) ;}
    break;

  case 416:

/* Line 1455 of yacc.c  */
#line 2414 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.enumDef) = new ast::EnumDefinition((yylsp[(1) - (3)]), (yyvsp[(1) - (3)].id), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 417:

/* Line 1455 of yacc.c  */
#line 2417 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A_VOID ;}
    break;

  case 418:

/* Line 1455 of yacc.c  */
#line 2418 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A_BOOL ;}
    break;

  case 419:

/* Line 1455 of yacc.c  */
#line 2419 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A_CHAR ;}
    break;

  case 420:

/* Line 1455 of yacc.c  */
#line 2420 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A_WCHAR_T ;}
    break;

  case 421:

/* Line 1455 of yacc.c  */
#line 2421 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A_INT ;}
    break;

  case 422:

/* Line 1455 of yacc.c  */
#line 2422 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A_SHORT ;}
    break;

  case 423:

/* Line 1455 of yacc.c  */
#line 2423 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A_LONG ;}
    break;

  case 424:

/* Line 1455 of yacc.c  */
#line 2424 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A_SIGNED ;}
    break;

  case 425:

/* Line 1455 of yacc.c  */
#line 2425 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A_UNSIGNED ;}
    break;

  case 426:

/* Line 1455 of yacc.c  */
#line 2426 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A_FLOAT ;}
    break;

  case 427:

/* Line 1455 of yacc.c  */
#line 2427 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A_DOUBLE ;}
    break;

  case 428:

/* Line 1455 of yacc.c  */
#line 2428 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A___INT8 ;}
    break;

  case 429:

/* Line 1455 of yacc.c  */
#line 2429 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A___INT16 ;}
    break;

  case 430:

/* Line 1455 of yacc.c  */
#line 2430 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A___INT32 ;}
    break;

  case 431:

/* Line 1455 of yacc.c  */
#line 2431 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A___INT64 ;}
    break;

  case 432:

/* Line 1455 of yacc.c  */
#line 2432 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A___FLOAT32 ;}
    break;

  case 433:

/* Line 1455 of yacc.c  */
#line 2433 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.simpleTypeSpec) = ast::A___FLOAT64 ;}
    break;

  case 435:

/* Line 1455 of yacc.c  */
#line 2438 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (4)]), '[', (yyvsp[(1) - (4)].exp), (yyvsp[(3) - (4)].exp)) ;}
    break;

  case 436:

/* Line 1455 of yacc.c  */
#line 2441 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::CallExp((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].exp), (yyvsp[(3) - (4)].expList)) ;}
    break;

  case 437:

/* Line 1455 of yacc.c  */
#line 2449 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::InitExp((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].exp), (yyvsp[(3) - (4)].expList)) ;}
    break;

  case 438:

/* Line 1455 of yacc.c  */
#line 2450 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::InitBasicExp((yylsp[(1) - (4)]), (yyvsp[(1) - (4)].simpleTypeSpec), (yyvsp[(3) - (4)].expList)) ;}
    break;

  case 439:

/* Line 1455 of yacc.c  */
#line 2452 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_PostopExp((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].exp), '++') ;}
    break;

  case 440:

/* Line 1455 of yacc.c  */
#line 2453 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_PostopExp((yylsp[(1) - (2)]), (yyvsp[(1) - (2)].exp), '--') ;}
    break;

  case 441:

/* Line 1455 of yacc.c  */
#line 2455 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '.', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 442:

/* Line 1455 of yacc.c  */
#line 2456 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '->', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 443:

/* Line 1455 of yacc.c  */
#line 2458 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '.', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)); g_scopeStack2.pop(); ;}
    break;

  case 444:

/* Line 1455 of yacc.c  */
#line 2459 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '->', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)); g_scopeStack2.pop(); ;}
    break;

  case 445:

/* Line 1455 of yacc.c  */
#line 2461 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::StaticCastExp((yyvsp[(3) - (7)].typeId), (yyvsp[(6) - (7)].exp)); ;}
    break;

  case 446:

/* Line 1455 of yacc.c  */
#line 2462 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::DynamicCastExp((yyvsp[(3) - (7)].typeId), (yyvsp[(6) - (7)].exp)); ;}
    break;

  case 447:

/* Line 1455 of yacc.c  */
#line 2463 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::ConstCastExp((yyvsp[(3) - (7)].typeId), (yyvsp[(6) - (7)].exp)); ;}
    break;

  case 448:

/* Line 1455 of yacc.c  */
#line 2464 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::ReinterpretCastExp((yyvsp[(3) - (7)].typeId), (yyvsp[(6) - (7)].exp)); ;}
    break;

  case 449:

/* Line 1455 of yacc.c  */
#line 2465 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::TypeidExp((yyvsp[(3) - (4)].exp)); ;}
    break;

  case 450:

/* Line 1455 of yacc.c  */
#line 2466 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::TypeidExp((yyvsp[(3) - (4)].typeId)); ;}
    break;

  case 451:

/* Line 1455 of yacc.c  */
#line 2469 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = new ast::ExpressionList((yyvsp[(1) - (1)].exp), NULL) ;}
    break;

  case 452:

/* Line 1455 of yacc.c  */
#line 2470 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = new ast::ExpressionList((yyvsp[(3) - (3)].exp), (yyvsp[(1) - (3)].expList)) ;}
    break;

  case 453:

/* Line 1455 of yacc.c  */
#line 2473 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = NULL ;}
    break;

  case 455:

/* Line 1455 of yacc.c  */
#line 2477 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = NULL ;}
    break;

  case 457:

/* Line 1455 of yacc.c  */
#line 2481 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = new ast::ExpressionList((yyvsp[(1) - (1)].exp), NULL) ;}
    break;

  case 458:

/* Line 1455 of yacc.c  */
#line 2482 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = new ast::ExpressionList(new ast::TypeExp((yyvsp[(1) - (1)].typeId)), NULL) ;}
    break;

  case 459:

/* Line 1455 of yacc.c  */
#line 2483 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = new ast::ExpressionList((yyvsp[(3) - (3)].exp), (yyvsp[(1) - (3)].expList)) ;}
    break;

  case 461:

/* Line 1455 of yacc.c  */
#line 2487 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (2)]), '++', (yyvsp[(2) - (2)].exp)) ;}
    break;

  case 462:

/* Line 1455 of yacc.c  */
#line 2488 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (2)]), '--', (yyvsp[(2) - (2)].exp)) ;}
    break;

  case 463:

/* Line 1455 of yacc.c  */
#line 2489 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (2)]), '*', (yyvsp[(2) - (2)].exp));}
    break;

  case 464:

/* Line 1455 of yacc.c  */
#line 2490 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (2)]), '&', (yyvsp[(2) - (2)].exp));}
    break;

  case 465:

/* Line 1455 of yacc.c  */
#line 2491 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (2)]), '+', (yyvsp[(2) - (2)].exp));}
    break;

  case 466:

/* Line 1455 of yacc.c  */
#line 2492 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (2)]), '-', (yyvsp[(2) - (2)].exp));}
    break;

  case 467:

/* Line 1455 of yacc.c  */
#line 2493 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (2)]), '!', (yyvsp[(2) - (2)].exp));}
    break;

  case 468:

/* Line 1455 of yacc.c  */
#line 2494 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (2)]), '~', (yyvsp[(2) - (2)].exp));}
    break;

  case 469:

/* Line 1455 of yacc.c  */
#line 2496 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::SizeofExp((yyvsp[(2) - (2)].exp)) ;}
    break;

  case 470:

/* Line 1455 of yacc.c  */
#line 2497 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::SizeofTypeExp((yyvsp[(3) - (4)].typeId)) ;}
    break;

  case 472:

/* Line 1455 of yacc.c  */
#line 2499 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (2)]), '::', (yyvsp[(2) - (2)].exp)) ;}
    break;

  case 474:

/* Line 1455 of yacc.c  */
#line 2501 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_UnopExp((yylsp[(1) - (2)]), '::', (yyvsp[(2) - (2)].exp)) ;}
    break;

  case 475:

/* Line 1455 of yacc.c  */
#line 2504 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::NewExp(Reverse((yyvsp[(2) - (4)].expList)), (yyvsp[(3) - (4)].typeId), Reverse((yyvsp[(4) - (4)].expList))); ;}
    break;

  case 476:

/* Line 1455 of yacc.c  */
#line 2508 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = (yyvsp[(2) - (3)].expList) ;}
    break;

  case 477:

/* Line 1455 of yacc.c  */
#line 2511 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = NULL ;}
    break;

  case 479:

/* Line 1455 of yacc.c  */
#line 2515 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.typeId) = new ast::A_TypeId((yyvsp[(1) - (1)].declspecList), NULL/*$2*/) ;}
    break;

  case 480:

/* Line 1455 of yacc.c  */
#line 2531 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = (yyvsp[(2) - (3)].expList) ;}
    break;

  case 481:

/* Line 1455 of yacc.c  */
#line 2534 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.expList) = NULL ;}
    break;

  case 483:

/* Line 1455 of yacc.c  */
#line 2538 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::DeleteExp((yyvsp[(2) - (2)].exp)) ;}
    break;

  case 484:

/* Line 1455 of yacc.c  */
#line 2539 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::DeleteExp((yyvsp[(4) - (4)].exp)) ;}
    break;

  case 486:

/* Line 1455 of yacc.c  */
#line 2543 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_CastExp((yyvsp[(2) - (4)].typeId), (yyvsp[(4) - (4)].exp)) ;}
    break;

  case 491:

/* Line 1455 of yacc.c  */
#line 2552 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '*', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 492:

/* Line 1455 of yacc.c  */
#line 2553 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '/', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 493:

/* Line 1455 of yacc.c  */
#line 2554 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '%', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 495:

/* Line 1455 of yacc.c  */
#line 2558 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '+', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 496:

/* Line 1455 of yacc.c  */
#line 2559 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '-', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 498:

/* Line 1455 of yacc.c  */
#line 2563 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '<<', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 499:

/* Line 1455 of yacc.c  */
#line 2564 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '>>', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 501:

/* Line 1455 of yacc.c  */
#line 2568 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '<', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 502:

/* Line 1455 of yacc.c  */
#line 2569 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '>', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 503:

/* Line 1455 of yacc.c  */
#line 2570 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '<=', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 504:

/* Line 1455 of yacc.c  */
#line 2571 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '>=', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 506:

/* Line 1455 of yacc.c  */
#line 2575 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '==', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 507:

/* Line 1455 of yacc.c  */
#line 2576 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '!=', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 509:

/* Line 1455 of yacc.c  */
#line 2580 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '&', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 511:

/* Line 1455 of yacc.c  */
#line 2584 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '^', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 513:

/* Line 1455 of yacc.c  */
#line 2588 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '|', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 515:

/* Line 1455 of yacc.c  */
#line 2592 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '&&', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 517:

/* Line 1455 of yacc.c  */
#line 2596 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '||', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 519:

/* Line 1455 of yacc.c  */
#line 2600 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (5)]), '?', (yyvsp[(1) - (5)].exp), ast::A_BinopExp((yylsp[(3) - (5)]), ':', (yyvsp[(3) - (5)].exp), (yyvsp[(5) - (5)].exp))) ;}
    break;

  case 520:

/* Line 1455 of yacc.c  */
#line 2603 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '=' ;}
    break;

  case 521:

/* Line 1455 of yacc.c  */
#line 2604 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '+=' ;}
    break;

  case 522:

/* Line 1455 of yacc.c  */
#line 2605 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '-=' ;}
    break;

  case 523:

/* Line 1455 of yacc.c  */
#line 2606 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '|=' ;}
    break;

  case 524:

/* Line 1455 of yacc.c  */
#line 2607 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '^=' ;}
    break;

  case 525:

/* Line 1455 of yacc.c  */
#line 2608 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '&=' ;}
    break;

  case 526:

/* Line 1455 of yacc.c  */
#line 2609 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '*=' ;}
    break;

  case 527:

/* Line 1455 of yacc.c  */
#line 2610 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '/=' ;}
    break;

  case 528:

/* Line 1455 of yacc.c  */
#line 2611 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '%=' ;}
    break;

  case 529:

/* Line 1455 of yacc.c  */
#line 2612 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '<<=' ;}
    break;

  case 530:

/* Line 1455 of yacc.c  */
#line 2613 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.num) = '>>=' ;}
    break;

  case 532:

/* Line 1455 of yacc.c  */
#line 2617 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), (yyvsp[(2) - (3)].num), (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 534:

/* Line 1455 of yacc.c  */
#line 2621 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = NULL ;}
    break;

  case 536:

/* Line 1455 of yacc.c  */
#line 2625 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = new ast::ThrowExp((yyvsp[(2) - (2)].exp)) ;}
    break;

  case 538:

/* Line 1455 of yacc.c  */
#line 2629 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), ',', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 539:

/* Line 1455 of yacc.c  */
#line 2632 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = NULL ;}
    break;

  case 542:

/* Line 1455 of yacc.c  */
#line 2639 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = NULL ;}
    break;

  case 545:

/* Line 1455 of yacc.c  */
#line 2646 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '<', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 546:

/* Line 1455 of yacc.c  */
#line 2648 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '<=', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 547:

/* Line 1455 of yacc.c  */
#line 2649 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '>=', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 549:

/* Line 1455 of yacc.c  */
#line 2653 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '==', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 550:

/* Line 1455 of yacc.c  */
#line 2654 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '!=', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 552:

/* Line 1455 of yacc.c  */
#line 2658 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '&', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 554:

/* Line 1455 of yacc.c  */
#line 2662 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '^', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 556:

/* Line 1455 of yacc.c  */
#line 2666 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (3)]), '|', (yyvsp[(1) - (3)].exp), (yyvsp[(3) - (3)].exp)) ;}
    break;

  case 562:

/* Line 1455 of yacc.c  */
#line 2678 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.exp) = ast::A_BinopExp((yylsp[(1) - (5)]), '?', (yyvsp[(1) - (5)].exp), ast::A_BinopExp((yylsp[(3) - (5)]), ':', (yyvsp[(3) - (5)].exp), (yyvsp[(5) - (5)].exp))) ;}
    break;

  case 564:

/* Line 1455 of yacc.c  */
#line 2695 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateArgumentList) = new ast::A_TemplateArgumentList((yyvsp[(1) - (1)].templateArgument), NULL) ;}
    break;

  case 565:

/* Line 1455 of yacc.c  */
#line 2696 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateArgumentList) = new ast::A_TemplateArgumentList((yyvsp[(3) - (3)].templateArgument), (yyvsp[(1) - (3)].templateArgumentList)) ;}
    break;

  case 566:

/* Line 1455 of yacc.c  */
#line 2699 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateArgumentList) = NULL ;}
    break;

  case 568:

/* Line 1455 of yacc.c  */
#line 2703 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateArgument) = new ast::A_TemplateArgument(NULL, (yyvsp[(1) - (1)].exp)) ;}
    break;

  case 569:

/* Line 1455 of yacc.c  */
#line 2704 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.templateArgument) = new ast::A_TemplateArgument((yyvsp[(1) - (1)].typeId), NULL) ;}
    break;

  case 570:

/* Line 1455 of yacc.c  */
#line 2707 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.id) = NULL ;}
    break;

  case 572:

/* Line 1455 of yacc.c  */
#line 2714 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.baseSpecifierList) = Reverse((yyvsp[(2) - (2)].baseSpecifierList)) ;}
    break;

  case 573:

/* Line 1455 of yacc.c  */
#line 2717 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.baseSpecifierList) = NULL ;}
    break;

  case 575:

/* Line 1455 of yacc.c  */
#line 2721 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.baseSpecifierList) = new ast::A_BaseSpecifierList((yyvsp[(1) - (1)].baseSpecifier), NULL) ;}
    break;

  case 576:

/* Line 1455 of yacc.c  */
#line 2722 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.baseSpecifierList) = new ast::A_BaseSpecifierList((yyvsp[(3) - (3)].baseSpecifier), (yyvsp[(1) - (3)].baseSpecifierList)) ;}
    break;

  case 578:

/* Line 1455 of yacc.c  */
#line 2729 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {	(yyval.baseSpecifier) = new ast::A_BaseSpecifier((yyvsp[(1) - (1)].exp), AccessSpec_Unspecified, 0); ;}
    break;

  case 579:

/* Line 1455 of yacc.c  */
#line 2730 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {	(yyval.baseSpecifier) = new ast::A_BaseSpecifier((yyvsp[(2) - (2)].exp), (yyvsp[(1) - (2)].accessSpec), 0);	;}
    break;

  case 580:

/* Line 1455 of yacc.c  */
#line 2731 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {	(yyval.baseSpecifier) = new ast::A_BaseSpecifier((yyvsp[(3) - (3)].exp), (yyvsp[(2) - (3)].accessSpec), 1);	;}
    break;

  case 581:

/* Line 1455 of yacc.c  */
#line 2732 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {	(yyval.baseSpecifier) = new ast::A_BaseSpecifier((yyvsp[(3) - (3)].exp), (yyvsp[(1) - (3)].accessSpec), 2);	;}
    break;

  case 582:

/* Line 1455 of yacc.c  */
#line 2737 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = NULL ;}
    break;

  case 591:

/* Line 1455 of yacc.c  */
#line 2751 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.declaration) = new ast::AsmDefinition((yylsp[(1) - (5)]), (yyvsp[(3) - (5)].string_literal)) ;}
    break;

  case 592:

/* Line 1455 of yacc.c  */
#line 2754 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::CaseStm((yyvsp[(2) - (4)].exp), (yyvsp[(4) - (4)].stm)) ;}
    break;

  case 593:

/* Line 1455 of yacc.c  */
#line 2755 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::DefaultStm((yyvsp[(3) - (3)].stm)) ;}
    break;

  case 594:

/* Line 1455 of yacc.c  */
#line 2756 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {g_scopeStack2.pop();;}
    break;

  case 595:

/* Line 1455 of yacc.c  */
#line 2756 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::LabelStm((yyvsp[(1) - (5)].id), (yyvsp[(5) - (5)].stm)); ;}
    break;

  case 596:

/* Line 1455 of yacc.c  */
#line 2757 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    {g_scopeStack2.pop();;}
    break;

  case 597:

/* Line 1455 of yacc.c  */
#line 2757 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::LabelStm((yyvsp[(1) - (5)].id), (yyvsp[(5) - (5)].stm)); ;}
    break;

  case 598:

/* Line 1455 of yacc.c  */
#line 2760 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::ContinueStm() ;}
    break;

  case 599:

/* Line 1455 of yacc.c  */
#line 2761 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::BreakStm() ;}
    break;

  case 600:

/* Line 1455 of yacc.c  */
#line 2762 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::GotoStm((yyvsp[(2) - (3)].id)) ;}
    break;

  case 601:

/* Line 1455 of yacc.c  */
#line 2766 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::IfStm((yyvsp[(3) - (5)].cond), (yyvsp[(5) - (5)].stm), NULL) ;}
    break;

  case 602:

/* Line 1455 of yacc.c  */
#line 2767 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::IfStm((yyvsp[(3) - (7)].cond), (yyvsp[(5) - (7)].stm), (yyvsp[(7) - (7)].stm)) ;}
    break;

  case 603:

/* Line 1455 of yacc.c  */
#line 2768 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::SwitchStm((yyvsp[(3) - (5)].cond), (yyvsp[(5) - (5)].stm)) ;}
    break;

  case 604:

/* Line 1455 of yacc.c  */
#line 2771 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.cond) = new ast::Condition((yyvsp[(1) - (1)].exp)) ;}
    break;

  case 605:

/* Line 1455 of yacc.c  */
#line 2772 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.cond) = new ast::Condition((yyvsp[(1) - (4)].declspecList), (yyvsp[(2) - (4)].declarator), (yyvsp[(4) - (4)].exp)); ;}
    break;

  case 606:

/* Line 1455 of yacc.c  */
#line 2775 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::WhileStm((yylsp[(1) - (5)]), (yylsp[(5) - (5)]), (yyvsp[(3) - (5)].cond), (yyvsp[(5) - (5)].stm)) ;}
    break;

  case 607:

/* Line 1455 of yacc.c  */
#line 2776 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::DoWhileStm((yyvsp[(2) - (7)].stm), (yyvsp[(5) - (7)].exp)) ;}
    break;

  case 608:

/* Line 1455 of yacc.c  */
#line 2777 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::ForStm(NULL, (yyvsp[(4) - (8)].exp), (yyvsp[(6) - (8)].exp), (yyvsp[(8) - (8)].stm)) ;}
    break;

  case 609:

/* Line 1455 of yacc.c  */
#line 2778 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::ForStm(new ast::A_ExpOrDecl((yyvsp[(3) - (9)].exp), NULL), (yyvsp[(5) - (9)].exp), (yyvsp[(7) - (9)].exp), (yyvsp[(9) - (9)].stm)) ;}
    break;

  case 610:

/* Line 1455 of yacc.c  */
#line 2779 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::ForStm(new ast::A_ExpOrDecl(NULL, new ast::A_SimpleDeclaration((yylsp[(3) - (10)]), (yyvsp[(3) - (10)].declspecList), Reverse((yyvsp[(4) - (10)].initDeclaratorList)))), (yyvsp[(6) - (10)].exp), (yyvsp[(8) - (10)].exp), (yyvsp[(10) - (10)].stm)) ;}
    break;

  case 611:

/* Line 1455 of yacc.c  */
#line 2782 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::A_DeclarationStm(new ast::A_SimpleDeclaration((yylsp[(1) - (3)]), (yyvsp[(1) - (3)].declspecList), Reverse((yyvsp[(2) - (3)].initDeclaratorList)))); ;}
    break;

  case 612:

/* Line 1455 of yacc.c  */
#line 2783 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::A_DeclarationStm((yyvsp[(1) - (1)].declaration)) ;}
    break;

  case 613:

/* Line 1455 of yacc.c  */
#line 2787 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::A_ExpStm((yyvsp[(1) - (2)].exp)) ;}
    break;

  case 614:

/* Line 1455 of yacc.c  */
#line 2790 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::ReturnStm() ;}
    break;

  case 615:

/* Line 1455 of yacc.c  */
#line 2791 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stm) = new ast::ReturnStm((yyvsp[(2) - (3)].exp)) ;}
    break;

  case 616:

/* Line 1455 of yacc.c  */
#line 2794 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stmList) = new ast::A_StmList((yyvsp[(1) - (1)].stm), NULL) ;}
    break;

  case 617:

/* Line 1455 of yacc.c  */
#line 2795 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"
    { (yyval.stmList) = new ast::A_StmList((yyvsp[(1) - (2)].stm), (yyvsp[(2) - (2)].stmList)) ;}
    break;



/* Line 1455 of yacc.c  */
#line 7625 "cpp_exp_parse.tab.c"
      default: break;
    }
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now `shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*------------------------------------.
| yyerrlab -- here on detecting error |
`------------------------------------*/
yyerrlab:
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (YY_("syntax error"));
#else
      {
	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
	  {
	    YYSIZE_T yyalloc = 2 * yysize;
	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
	    if (yymsg != yymsgbuf)
	      YYSTACK_FREE (yymsg);
	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
	    if (yymsg)
	      yymsg_alloc = yyalloc;
	    else
	      {
		yymsg = yymsgbuf;
		yymsg_alloc = sizeof yymsgbuf;
	      }
	  }

	if (0 < yysize && yysize <= yymsg_alloc)
	  {
	    (void) yysyntax_error (yymsg, yystate, yychar);
	    yyerror (yymsg);
	  }
	else
	  {
	    yyerror (YY_("syntax error"));
	    if (yysize != 0)
	      goto yyexhaustedlab;
	  }
      }
#endif
    }

  yyerror_range[0] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
	 error, discard it.  */

      if (yychar <= YYEOF)
	{
	  /* Return failure if at end of input.  */
	  if (yychar == YYEOF)
	    YYABORT;
	}
      else
	{
	  yydestruct ("Error: discarding",
		      yytoken, &yylval, &yylloc);
	  yychar = YYEMPTY;
	}
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[0] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule which action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;	/* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (yyn != YYPACT_NINF)
	{
	  yyn += YYTERROR;
	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
	    {
	      yyn = yytable[yyn];
	      if (0 < yyn)
		break;
	    }
	}

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
	YYABORT;

      yyerror_range[0] = *yylsp;
      yydestruct ("Error: popping",
		  yystos[yystate], yyvsp, yylsp);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  *++yyvsp = yylval;

  yyerror_range[1] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined(yyoverflow) || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
     yydestruct ("Cleanup: discarding lookahead",
		 yytoken, &yylval, &yylloc);
  /* Do not reclaim the symbols of the rule which action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
		  yystos[*yyssp], yyvsp, yylsp);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  /* Make sure YYID is used.  */
  return YYID (yyresult);
}



/* Line 1675 of yacc.c  */
#line 2908 "C:\\Documents and Settings\\Administrator\\My Documents\\Visual Studio 2010\\Projects\\firstproject2\\FirstProject2\\trunk\\src\\CodeComp\\cpp_exp_parse.y"



