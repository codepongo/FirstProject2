#include "stdafx.h"
#include "LFC.h"

namespace System
{

UInt64Object UInt64Object::s_values[257] =
{
	UInt64Object(0),
	UInt64Object(1),
	UInt64Object(2),
	UInt64Object(3),
	UInt64Object(4),
	UInt64Object(5),
	UInt64Object(6),
	UInt64Object(7),
	UInt64Object(8),
	UInt64Object(9),
	UInt64Object(10),
	UInt64Object(11),
	UInt64Object(12),
	UInt64Object(13),
	UInt64Object(14),
	UInt64Object(15),
	UInt64Object(16),
	UInt64Object(17),
	UInt64Object(18),
	UInt64Object(19),
	UInt64Object(20),
	UInt64Object(21),
	UInt64Object(22),
	UInt64Object(23),
	UInt64Object(24),
	UInt64Object(25),
	UInt64Object(26),
	UInt64Object(27),
	UInt64Object(28),
	UInt64Object(29),
	UInt64Object(30),
	UInt64Object(31),
	UInt64Object(32),
	UInt64Object(33),
	UInt64Object(34),
	UInt64Object(35),
	UInt64Object(36),
	UInt64Object(37),
	UInt64Object(38),
	UInt64Object(39),
	UInt64Object(40),
	UInt64Object(41),
	UInt64Object(42),
	UInt64Object(43),
	UInt64Object(44),
	UInt64Object(45),
	UInt64Object(46),
	UInt64Object(47),
	UInt64Object(48),
	UInt64Object(49),
	UInt64Object(50),
	UInt64Object(51),
	UInt64Object(52),
	UInt64Object(53),
	UInt64Object(54),
	UInt64Object(55),
	UInt64Object(56),
	UInt64Object(57),
	UInt64Object(58),
	UInt64Object(59),
	UInt64Object(60),
	UInt64Object(61),
	UInt64Object(62),
	UInt64Object(63),
	UInt64Object(64),
	UInt64Object(65),
	UInt64Object(66),
	UInt64Object(67),
	UInt64Object(68),
	UInt64Object(69),
	UInt64Object(70),
	UInt64Object(71),
	UInt64Object(72),
	UInt64Object(73),
	UInt64Object(74),
	UInt64Object(75),
	UInt64Object(76),
	UInt64Object(77),
	UInt64Object(78),
	UInt64Object(79),
	UInt64Object(80),
	UInt64Object(81),
	UInt64Object(82),
	UInt64Object(83),
	UInt64Object(84),
	UInt64Object(85),
	UInt64Object(86),
	UInt64Object(87),
	UInt64Object(88),
	UInt64Object(89),
	UInt64Object(90),
	UInt64Object(91),
	UInt64Object(92),
	UInt64Object(93),
	UInt64Object(94),
	UInt64Object(95),
	UInt64Object(96),
	UInt64Object(97),
	UInt64Object(98),
	UInt64Object(99),
	UInt64Object(100),
	UInt64Object(101),
	UInt64Object(102),
	UInt64Object(103),
	UInt64Object(104),
	UInt64Object(105),
	UInt64Object(106),
	UInt64Object(107),
	UInt64Object(108),
	UInt64Object(109),
	UInt64Object(110),
	UInt64Object(111),
	UInt64Object(112),
	UInt64Object(113),
	UInt64Object(114),
	UInt64Object(115),
	UInt64Object(116),
	UInt64Object(117),
	UInt64Object(118),
	UInt64Object(119),
	UInt64Object(120),
	UInt64Object(121),
	UInt64Object(122),
	UInt64Object(123),
	UInt64Object(124),
	UInt64Object(125),
	UInt64Object(126),
	UInt64Object(127),
	UInt64Object(128),
	UInt64Object(129),
	UInt64Object(130),
	UInt64Object(131),
	UInt64Object(132),
	UInt64Object(133),
	UInt64Object(134),
	UInt64Object(135),
	UInt64Object(136),
	UInt64Object(137),
	UInt64Object(138),
	UInt64Object(139),
	UInt64Object(140),
	UInt64Object(141),
	UInt64Object(142),
	UInt64Object(143),
	UInt64Object(144),
	UInt64Object(145),
	UInt64Object(146),
	UInt64Object(147),
	UInt64Object(148),
	UInt64Object(149),
	UInt64Object(150),
	UInt64Object(151),
	UInt64Object(152),
	UInt64Object(153),
	UInt64Object(154),
	UInt64Object(155),
	UInt64Object(156),
	UInt64Object(157),
	UInt64Object(158),
	UInt64Object(159),
	UInt64Object(160),
	UInt64Object(161),
	UInt64Object(162),
	UInt64Object(163),
	UInt64Object(164),
	UInt64Object(165),
	UInt64Object(166),
	UInt64Object(167),
	UInt64Object(168),
	UInt64Object(169),
	UInt64Object(170),
	UInt64Object(171),
	UInt64Object(172),
	UInt64Object(173),
	UInt64Object(174),
	UInt64Object(175),
	UInt64Object(176),
	UInt64Object(177),
	UInt64Object(178),
	UInt64Object(179),
	UInt64Object(180),
	UInt64Object(181),
	UInt64Object(182),
	UInt64Object(183),
	UInt64Object(184),
	UInt64Object(185),
	UInt64Object(186),
	UInt64Object(187),
	UInt64Object(188),
	UInt64Object(189),
	UInt64Object(190),
	UInt64Object(191),
	UInt64Object(192),
	UInt64Object(193),
	UInt64Object(194),
	UInt64Object(195),
	UInt64Object(196),
	UInt64Object(197),
	UInt64Object(198),
	UInt64Object(199),
	UInt64Object(200),
	UInt64Object(201),
	UInt64Object(202),
	UInt64Object(203),
	UInt64Object(204),
	UInt64Object(205),
	UInt64Object(206),
	UInt64Object(207),
	UInt64Object(208),
	UInt64Object(209),
	UInt64Object(210),
	UInt64Object(211),
	UInt64Object(212),
	UInt64Object(213),
	UInt64Object(214),
	UInt64Object(215),
	UInt64Object(216),
	UInt64Object(217),
	UInt64Object(218),
	UInt64Object(219),
	UInt64Object(220),
	UInt64Object(221),
	UInt64Object(222),
	UInt64Object(223),
	UInt64Object(224),
	UInt64Object(225),
	UInt64Object(226),
	UInt64Object(227),
	UInt64Object(228),
	UInt64Object(229),
	UInt64Object(230),
	UInt64Object(231),
	UInt64Object(232),
	UInt64Object(233),
	UInt64Object(234),
	UInt64Object(235),
	UInt64Object(236),
	UInt64Object(237),
	UInt64Object(238),
	UInt64Object(239),
	UInt64Object(240),
	UInt64Object(241),
	UInt64Object(242),
	UInt64Object(243),
	UInt64Object(244),
	UInt64Object(245),
	UInt64Object(246),
	UInt64Object(247),
	UInt64Object(248),
	UInt64Object(249),
	UInt64Object(250),
	UInt64Object(251),
	UInt64Object(252),
	UInt64Object(253),
	UInt64Object(254),
	UInt64Object(255),
	UInt64Object(256),
};

UInt64Object UInt64Object::s_maxValue(_UI64_MAX);

String UInt64Object::ToString()
{
	return String::FromNumber(m_value);
}

UInt64Object* UInt64Object::GetObject(unsigned long long value)
{
	if (value <= 256)
	{
		ASSERT(s_values[value].m_value == value);
		return &s_values[value];
	}
	else if (value == _UI64_MAX)
	{
		return &s_maxValue;
	}

	return new UInt64Object(value);
}

}	// System
